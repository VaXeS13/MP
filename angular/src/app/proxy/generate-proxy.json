{
  "generated": [
    "app"
  ],
  "modules": {
    "abp": {
      "rootPath": "abp",
      "remoteServiceName": "abp",
      "controllers": {
        "Pages.Abp.MultiTenancy.AbpTenantController": {
          "controllerName": "AbpTenant",
          "controllerGroupName": "AbpTenant",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "Pages.Abp.MultiTenancy.AbpTenantController",
          "interfaces": [
            {
              "type": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.IAbpTenantAppService",
              "name": "IAbpTenantAppService",
              "methods": [
                {
                  "name": "FindTenantByNameAsync",
                  "parametersOnMethod": [
                    {
                      "name": "name",
                      "typeAsString": "System.String, System.Private.CoreLib",
                      "type": "System.String",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.FindTenantResultDto",
                    "typeSimple": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.FindTenantResultDto"
                  }
                },
                {
                  "name": "FindTenantByIdAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.FindTenantResultDto",
                    "typeSimple": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.FindTenantResultDto"
                  }
                }
              ]
            }
          ],
          "actions": {
            "FindTenantByNameAsyncByName": {
              "uniqueName": "FindTenantByNameAsyncByName",
              "name": "FindTenantByNameAsync",
              "httpMethod": "GET",
              "url": "api/abp/multi-tenancy/tenants/by-name/{name}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "name",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "name",
                  "name": "name",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.FindTenantResultDto",
                "typeSimple": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.FindTenantResultDto"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.IAbpTenantAppService"
            },
            "FindTenantByIdAsyncById": {
              "uniqueName": "FindTenantByIdAsyncById",
              "name": "FindTenantByIdAsync",
              "httpMethod": "GET",
              "url": "api/abp/multi-tenancy/tenants/by-id/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.FindTenantResultDto",
                "typeSimple": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.FindTenantResultDto"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.IAbpTenantAppService"
            }
          }
        },
        "Volo.Abp.AspNetCore.Mvc.ApiExploring.AbpApiDefinitionController": {
          "controllerName": "AbpApiDefinition",
          "controllerGroupName": "AbpApiDefinition",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApiExploring.AbpApiDefinitionController",
          "interfaces": [],
          "actions": {
            "GetByModel": {
              "uniqueName": "GetByModel",
              "name": "Get",
              "httpMethod": "GET",
              "url": "api/abp/api-definition",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "model",
                  "typeAsString": "Volo.Abp.Http.Modeling.ApplicationApiDescriptionModelRequestDto, Volo.Abp.Http",
                  "type": "Volo.Abp.Http.Modeling.ApplicationApiDescriptionModelRequestDto",
                  "typeSimple": "Volo.Abp.Http.Modeling.ApplicationApiDescriptionModelRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "model",
                  "name": "IncludeTypes",
                  "jsonName": null,
                  "type": "System.Boolean",
                  "typeSimple": "boolean",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "model"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Http.Modeling.ApplicationApiDescriptionModel",
                "typeSimple": "Volo.Abp.Http.Modeling.ApplicationApiDescriptionModel"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.AspNetCore.Mvc.ApiExploring.AbpApiDefinitionController"
            }
          }
        },
        "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.AbpApplicationConfigurationController": {
          "controllerName": "AbpApplicationConfiguration",
          "controllerGroupName": "AbpApplicationConfiguration",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.AbpApplicationConfigurationController",
          "interfaces": [
            {
              "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.IAbpApplicationConfigurationAppService",
              "name": "IAbpApplicationConfigurationAppService",
              "methods": [
                {
                  "name": "GetAsync",
                  "parametersOnMethod": [
                    {
                      "name": "options",
                      "typeAsString": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationConfigurationRequestOptions, Volo.Abp.AspNetCore.Mvc.Contracts",
                      "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationConfigurationRequestOptions",
                      "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationConfigurationRequestOptions",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationConfigurationDto",
                    "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationConfigurationDto"
                  }
                }
              ]
            }
          ],
          "actions": {
            "GetAsyncByOptions": {
              "uniqueName": "GetAsyncByOptions",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/abp/application-configuration",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "options",
                  "typeAsString": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationConfigurationRequestOptions, Volo.Abp.AspNetCore.Mvc.Contracts",
                  "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationConfigurationRequestOptions",
                  "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationConfigurationRequestOptions",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "options",
                  "name": "IncludeLocalizationResources",
                  "jsonName": null,
                  "type": "System.Boolean",
                  "typeSimple": "boolean",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "options"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationConfigurationDto",
                "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationConfigurationDto"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.IAbpApplicationConfigurationAppService"
            }
          }
        },
        "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.AbpApplicationLocalizationController": {
          "controllerName": "AbpApplicationLocalization",
          "controllerGroupName": "AbpApplicationLocalization",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.AbpApplicationLocalizationController",
          "interfaces": [
            {
              "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.IAbpApplicationLocalizationAppService",
              "name": "IAbpApplicationLocalizationAppService",
              "methods": [
                {
                  "name": "GetAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationRequestDto, Volo.Abp.AspNetCore.Mvc.Contracts",
                      "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationRequestDto",
                      "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationRequestDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationDto",
                    "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationDto"
                  }
                }
              ]
            }
          ],
          "actions": {
            "GetAsyncByInput": {
              "uniqueName": "GetAsyncByInput",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/abp/application-localization",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationRequestDto, Volo.Abp.AspNetCore.Mvc.Contracts",
                  "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationRequestDto",
                  "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "CultureName",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "OnlyDynamics",
                  "jsonName": null,
                  "type": "System.Boolean",
                  "typeSimple": "boolean",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationDto",
                "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationDto"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.IAbpApplicationLocalizationAppService"
            }
          }
        }
      }
    },
    "account": {
      "rootPath": "account",
      "remoteServiceName": "AbpAccount",
      "controllers": {
        "Volo.Abp.Account.AccountController": {
          "controllerName": "Account",
          "controllerGroupName": "Account",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "Volo.Abp.Account.AccountController",
          "interfaces": [
            {
              "type": "Volo.Abp.Account.IAccountAppService",
              "name": "IAccountAppService",
              "methods": [
                {
                  "name": "RegisterAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "Volo.Abp.Account.RegisterDto, Volo.Abp.Account.Application.Contracts",
                      "type": "Volo.Abp.Account.RegisterDto",
                      "typeSimple": "Volo.Abp.Account.RegisterDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Identity.IdentityUserDto",
                    "typeSimple": "Volo.Abp.Identity.IdentityUserDto"
                  }
                },
                {
                  "name": "SendPasswordResetCodeAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "Volo.Abp.Account.SendPasswordResetCodeDto, Volo.Abp.Account.Application.Contracts",
                      "type": "Volo.Abp.Account.SendPasswordResetCodeDto",
                      "typeSimple": "Volo.Abp.Account.SendPasswordResetCodeDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                },
                {
                  "name": "VerifyPasswordResetTokenAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "Volo.Abp.Account.VerifyPasswordResetTokenInput, Volo.Abp.Account.Application.Contracts",
                      "type": "Volo.Abp.Account.VerifyPasswordResetTokenInput",
                      "typeSimple": "Volo.Abp.Account.VerifyPasswordResetTokenInput",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Boolean",
                    "typeSimple": "boolean"
                  }
                },
                {
                  "name": "ResetPasswordAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "Volo.Abp.Account.ResetPasswordDto, Volo.Abp.Account.Application.Contracts",
                      "type": "Volo.Abp.Account.ResetPasswordDto",
                      "typeSimple": "Volo.Abp.Account.ResetPasswordDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                }
              ]
            }
          ],
          "actions": {
            "RegisterAsyncByInput": {
              "uniqueName": "RegisterAsyncByInput",
              "name": "RegisterAsync",
              "httpMethod": "POST",
              "url": "api/account/register",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Account.RegisterDto, Volo.Abp.Account.Application.Contracts",
                  "type": "Volo.Abp.Account.RegisterDto",
                  "typeSimple": "Volo.Abp.Account.RegisterDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "Volo.Abp.Account.RegisterDto",
                  "typeSimple": "Volo.Abp.Account.RegisterDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Identity.IdentityUserDto",
                "typeSimple": "Volo.Abp.Identity.IdentityUserDto"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Account.IAccountAppService"
            },
            "SendPasswordResetCodeAsyncByInput": {
              "uniqueName": "SendPasswordResetCodeAsyncByInput",
              "name": "SendPasswordResetCodeAsync",
              "httpMethod": "POST",
              "url": "api/account/send-password-reset-code",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Account.SendPasswordResetCodeDto, Volo.Abp.Account.Application.Contracts",
                  "type": "Volo.Abp.Account.SendPasswordResetCodeDto",
                  "typeSimple": "Volo.Abp.Account.SendPasswordResetCodeDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "Volo.Abp.Account.SendPasswordResetCodeDto",
                  "typeSimple": "Volo.Abp.Account.SendPasswordResetCodeDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Account.IAccountAppService"
            },
            "VerifyPasswordResetTokenAsyncByInput": {
              "uniqueName": "VerifyPasswordResetTokenAsyncByInput",
              "name": "VerifyPasswordResetTokenAsync",
              "httpMethod": "POST",
              "url": "api/account/verify-password-reset-token",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Account.VerifyPasswordResetTokenInput, Volo.Abp.Account.Application.Contracts",
                  "type": "Volo.Abp.Account.VerifyPasswordResetTokenInput",
                  "typeSimple": "Volo.Abp.Account.VerifyPasswordResetTokenInput",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "Volo.Abp.Account.VerifyPasswordResetTokenInput",
                  "typeSimple": "Volo.Abp.Account.VerifyPasswordResetTokenInput",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Boolean",
                "typeSimple": "boolean"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Account.IAccountAppService"
            },
            "ResetPasswordAsyncByInput": {
              "uniqueName": "ResetPasswordAsyncByInput",
              "name": "ResetPasswordAsync",
              "httpMethod": "POST",
              "url": "api/account/reset-password",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Account.ResetPasswordDto, Volo.Abp.Account.Application.Contracts",
                  "type": "Volo.Abp.Account.ResetPasswordDto",
                  "typeSimple": "Volo.Abp.Account.ResetPasswordDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "Volo.Abp.Account.ResetPasswordDto",
                  "typeSimple": "Volo.Abp.Account.ResetPasswordDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Account.IAccountAppService"
            }
          }
        },
        "Volo.Abp.Account.DynamicClaimsController": {
          "controllerName": "DynamicClaims",
          "controllerGroupName": "DynamicClaims",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "Volo.Abp.Account.DynamicClaimsController",
          "interfaces": [
            {
              "type": "Volo.Abp.Account.IDynamicClaimsAppService",
              "name": "IDynamicClaimsAppService",
              "methods": [
                {
                  "name": "RefreshAsync",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                }
              ]
            }
          ],
          "actions": {
            "RefreshAsync": {
              "uniqueName": "RefreshAsync",
              "name": "RefreshAsync",
              "httpMethod": "POST",
              "url": "api/account/dynamic-claims/refresh",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Account.IDynamicClaimsAppService"
            }
          }
        },
        "Volo.Abp.Account.ProfileController": {
          "controllerName": "Profile",
          "controllerGroupName": "Profile",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "Volo.Abp.Account.ProfileController",
          "interfaces": [
            {
              "type": "Volo.Abp.Account.IProfileAppService",
              "name": "IProfileAppService",
              "methods": [
                {
                  "name": "GetAsync",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "Volo.Abp.Account.ProfileDto",
                    "typeSimple": "Volo.Abp.Account.ProfileDto"
                  }
                },
                {
                  "name": "UpdateAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "Volo.Abp.Account.UpdateProfileDto, Volo.Abp.Account.Application.Contracts",
                      "type": "Volo.Abp.Account.UpdateProfileDto",
                      "typeSimple": "Volo.Abp.Account.UpdateProfileDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Account.ProfileDto",
                    "typeSimple": "Volo.Abp.Account.ProfileDto"
                  }
                },
                {
                  "name": "ChangePasswordAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "Volo.Abp.Account.ChangePasswordInput, Volo.Abp.Account.Application.Contracts",
                      "type": "Volo.Abp.Account.ChangePasswordInput",
                      "typeSimple": "Volo.Abp.Account.ChangePasswordInput",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                }
              ]
            }
          ],
          "actions": {
            "GetAsync": {
              "uniqueName": "GetAsync",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/account/my-profile",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "Volo.Abp.Account.ProfileDto",
                "typeSimple": "Volo.Abp.Account.ProfileDto"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Account.IProfileAppService"
            },
            "UpdateAsyncByInput": {
              "uniqueName": "UpdateAsyncByInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/account/my-profile",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Account.UpdateProfileDto, Volo.Abp.Account.Application.Contracts",
                  "type": "Volo.Abp.Account.UpdateProfileDto",
                  "typeSimple": "Volo.Abp.Account.UpdateProfileDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "Volo.Abp.Account.UpdateProfileDto",
                  "typeSimple": "Volo.Abp.Account.UpdateProfileDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Account.ProfileDto",
                "typeSimple": "Volo.Abp.Account.ProfileDto"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Account.IProfileAppService"
            },
            "ChangePasswordAsyncByInput": {
              "uniqueName": "ChangePasswordAsyncByInput",
              "name": "ChangePasswordAsync",
              "httpMethod": "POST",
              "url": "api/account/my-profile/change-password",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Account.ChangePasswordInput, Volo.Abp.Account.Application.Contracts",
                  "type": "Volo.Abp.Account.ChangePasswordInput",
                  "typeSimple": "Volo.Abp.Account.ChangePasswordInput",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "Volo.Abp.Account.ChangePasswordInput",
                  "typeSimple": "Volo.Abp.Account.ChangePasswordInput",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Account.IProfileAppService"
            }
          }
        },
        "Volo.Abp.Account.Web.Areas.Account.Controllers.AccountController": {
          "controllerName": "Account",
          "controllerGroupName": "Login",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "Volo.Abp.Account.Web.Areas.Account.Controllers.AccountController",
          "interfaces": [],
          "actions": {
            "LoginByLogin": {
              "uniqueName": "LoginByLogin",
              "name": "Login",
              "httpMethod": "POST",
              "url": "api/account/login",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "login",
                  "typeAsString": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo, Volo.Abp.Account.Web",
                  "type": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo",
                  "typeSimple": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "login",
                  "name": "login",
                  "jsonName": null,
                  "type": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo",
                  "typeSimple": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.AbpLoginResult",
                "typeSimple": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.AbpLoginResult"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Account.Web.Areas.Account.Controllers.AccountController"
            },
            "Logout": {
              "uniqueName": "Logout",
              "name": "Logout",
              "httpMethod": "GET",
              "url": "api/account/logout",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Account.Web.Areas.Account.Controllers.AccountController"
            },
            "CheckPasswordByLogin": {
              "uniqueName": "CheckPasswordByLogin",
              "name": "CheckPassword",
              "httpMethod": "POST",
              "url": "api/account/check-password",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "login",
                  "typeAsString": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo, Volo.Abp.Account.Web",
                  "type": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo",
                  "typeSimple": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "login",
                  "name": "login",
                  "jsonName": null,
                  "type": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo",
                  "typeSimple": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.AbpLoginResult",
                "typeSimple": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.AbpLoginResult"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Account.Web.Areas.Account.Controllers.AccountController"
            }
          }
        }
      }
    },
    "app": {
      "rootPath": "app",
      "remoteServiceName": "Default",
      "controllers": {
        "MP.Account.UserProfileAppService": {
          "controllerName": "UserProfile",
          "controllerGroupName": "UserProfile",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "MP.Account.UserProfileAppService",
          "interfaces": [
            {
              "type": "MP.Account.IUserProfileAppService",
              "name": "IUserProfileAppService",
              "methods": [
                {
                  "name": "GetAsync",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "MP.Account.UserProfileDto",
                    "typeSimple": "MP.Account.UserProfileDto"
                  }
                },
                {
                  "name": "UpdateAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "MP.Account.UserProfileDto, MP.Application.Contracts",
                      "type": "MP.Account.UserProfileDto",
                      "typeSimple": "MP.Account.UserProfileDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Account.UserProfileDto",
                    "typeSimple": "MP.Account.UserProfileDto"
                  }
                }
              ]
            }
          ],
          "actions": {
            "GetAsync": {
              "uniqueName": "GetAsync",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/app/user-profile",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "MP.Account.UserProfileDto",
                "typeSimple": "MP.Account.UserProfileDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Account.IUserProfileAppService"
            },
            "UpdateAsyncByInput": {
              "uniqueName": "UpdateAsyncByInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/app/user-profile",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "MP.Account.UserProfileDto, MP.Application.Contracts",
                  "type": "MP.Account.UserProfileDto",
                  "typeSimple": "MP.Account.UserProfileDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "MP.Account.UserProfileDto",
                  "typeSimple": "MP.Account.UserProfileDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Account.UserProfileDto",
                "typeSimple": "MP.Account.UserProfileDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Account.IUserProfileAppService"
            }
          }
        },
        "MP.Application.BoothTypes.BoothTypeAppService": {
          "controllerName": "BoothType",
          "controllerGroupName": "BoothType",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "MP.Application.BoothTypes.BoothTypeAppService",
          "interfaces": [
            {
              "type": "MP.Application.Contracts.BoothTypes.IBoothTypeAppService",
              "name": "IBoothTypeAppService",
              "methods": [
                {
                  "name": "GetActiveTypesAsync",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<MP.Application.Contracts.BoothTypes.BoothTypeDto>",
                    "typeSimple": "[MP.Application.Contracts.BoothTypes.BoothTypeDto]"
                  }
                },
                {
                  "name": "ActivateAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Application.Contracts.BoothTypes.BoothTypeDto",
                    "typeSimple": "MP.Application.Contracts.BoothTypes.BoothTypeDto"
                  }
                },
                {
                  "name": "DeactivateAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Application.Contracts.BoothTypes.BoothTypeDto",
                    "typeSimple": "MP.Application.Contracts.BoothTypes.BoothTypeDto"
                  }
                },
                {
                  "name": "GetAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Application.Contracts.BoothTypes.BoothTypeDto",
                    "typeSimple": "MP.Application.Contracts.BoothTypes.BoothTypeDto"
                  }
                },
                {
                  "name": "GetListAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto, Volo.Abp.Ddd.Application.Contracts",
                      "type": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
                      "typeSimple": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Application.Contracts.BoothTypes.BoothTypeDto>",
                    "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Application.Contracts.BoothTypes.BoothTypeDto>"
                  }
                },
                {
                  "name": "CreateAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "MP.Application.Contracts.BoothTypes.CreateBoothTypeDto, MP.Application.Contracts",
                      "type": "MP.Application.Contracts.BoothTypes.CreateBoothTypeDto",
                      "typeSimple": "MP.Application.Contracts.BoothTypes.CreateBoothTypeDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Application.Contracts.BoothTypes.BoothTypeDto",
                    "typeSimple": "MP.Application.Contracts.BoothTypes.BoothTypeDto"
                  }
                },
                {
                  "name": "UpdateAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "input",
                      "typeAsString": "MP.Application.Contracts.BoothTypes.UpdateBoothTypeDto, MP.Application.Contracts",
                      "type": "MP.Application.Contracts.BoothTypes.UpdateBoothTypeDto",
                      "typeSimple": "MP.Application.Contracts.BoothTypes.UpdateBoothTypeDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Application.Contracts.BoothTypes.BoothTypeDto",
                    "typeSimple": "MP.Application.Contracts.BoothTypes.BoothTypeDto"
                  }
                },
                {
                  "name": "DeleteAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                }
              ]
            }
          ],
          "actions": {
            "GetActiveTypesAsync": {
              "uniqueName": "GetActiveTypesAsync",
              "name": "GetActiveTypesAsync",
              "httpMethod": "GET",
              "url": "api/app/booth-type/active-types",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "System.Collections.Generic.List<MP.Application.Contracts.BoothTypes.BoothTypeDto>",
                "typeSimple": "[MP.Application.Contracts.BoothTypes.BoothTypeDto]"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Application.Contracts.BoothTypes.IBoothTypeAppService"
            },
            "CreateAsyncByInput": {
              "uniqueName": "CreateAsyncByInput",
              "name": "CreateAsync",
              "httpMethod": "POST",
              "url": "api/app/booth-type",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "MP.Application.Contracts.BoothTypes.CreateBoothTypeDto, MP.Application.Contracts",
                  "type": "MP.Application.Contracts.BoothTypes.CreateBoothTypeDto",
                  "typeSimple": "MP.Application.Contracts.BoothTypes.CreateBoothTypeDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "MP.Application.Contracts.BoothTypes.CreateBoothTypeDto",
                  "typeSimple": "MP.Application.Contracts.BoothTypes.CreateBoothTypeDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Application.Contracts.BoothTypes.BoothTypeDto",
                "typeSimple": "MP.Application.Contracts.BoothTypes.BoothTypeDto"
              },
              "allowAnonymous": false,
              "implementFrom": "Volo.Abp.Application.Services.ICreateAppService<MP.Application.Contracts.BoothTypes.BoothTypeDto,MP.Application.Contracts.BoothTypes.CreateBoothTypeDto>"
            },
            "UpdateAsyncByIdAndInput": {
              "uniqueName": "UpdateAsyncByIdAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/app/booth-type/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "MP.Application.Contracts.BoothTypes.UpdateBoothTypeDto, MP.Application.Contracts",
                  "type": "MP.Application.Contracts.BoothTypes.UpdateBoothTypeDto",
                  "typeSimple": "MP.Application.Contracts.BoothTypes.UpdateBoothTypeDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "MP.Application.Contracts.BoothTypes.UpdateBoothTypeDto",
                  "typeSimple": "MP.Application.Contracts.BoothTypes.UpdateBoothTypeDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Application.Contracts.BoothTypes.BoothTypeDto",
                "typeSimple": "MP.Application.Contracts.BoothTypes.BoothTypeDto"
              },
              "allowAnonymous": false,
              "implementFrom": "Volo.Abp.Application.Services.IUpdateAppService<MP.Application.Contracts.BoothTypes.BoothTypeDto,System.Guid,MP.Application.Contracts.BoothTypes.UpdateBoothTypeDto>"
            },
            "ActivateAsyncById": {
              "uniqueName": "ActivateAsyncById",
              "name": "ActivateAsync",
              "httpMethod": "POST",
              "url": "api/app/booth-type/{id}/activate",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Application.Contracts.BoothTypes.BoothTypeDto",
                "typeSimple": "MP.Application.Contracts.BoothTypes.BoothTypeDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Application.Contracts.BoothTypes.IBoothTypeAppService"
            },
            "DeactivateAsyncById": {
              "uniqueName": "DeactivateAsyncById",
              "name": "DeactivateAsync",
              "httpMethod": "POST",
              "url": "api/app/booth-type/{id}/deactivate",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Application.Contracts.BoothTypes.BoothTypeDto",
                "typeSimple": "MP.Application.Contracts.BoothTypes.BoothTypeDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Application.Contracts.BoothTypes.IBoothTypeAppService"
            },
            "DeleteAsyncById": {
              "uniqueName": "DeleteAsyncById",
              "name": "DeleteAsync",
              "httpMethod": "DELETE",
              "url": "api/app/booth-type/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": false,
              "implementFrom": "Volo.Abp.Application.Services.IDeleteAppService<System.Guid>"
            },
            "GetAsyncById": {
              "uniqueName": "GetAsyncById",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/app/booth-type/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Application.Contracts.BoothTypes.BoothTypeDto",
                "typeSimple": "MP.Application.Contracts.BoothTypes.BoothTypeDto"
              },
              "allowAnonymous": false,
              "implementFrom": "Volo.Abp.Application.Services.IReadOnlyAppService<MP.Application.Contracts.BoothTypes.BoothTypeDto,MP.Application.Contracts.BoothTypes.BoothTypeDto,System.Guid,Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto>"
            },
            "GetListAsyncByInput": {
              "uniqueName": "GetListAsyncByInput",
              "name": "GetListAsync",
              "httpMethod": "GET",
              "url": "api/app/booth-type",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto, Volo.Abp.Ddd.Application.Contracts",
                  "type": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
                  "typeSimple": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Application.Contracts.BoothTypes.BoothTypeDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Application.Contracts.BoothTypes.BoothTypeDto>"
              },
              "allowAnonymous": false,
              "implementFrom": "Volo.Abp.Application.Services.IReadOnlyAppService<MP.Application.Contracts.BoothTypes.BoothTypeDto,MP.Application.Contracts.BoothTypes.BoothTypeDto,System.Guid,Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto>"
            }
          }
        },
        "MP.Application.Chat.ChatAppService": {
          "controllerName": "Chat",
          "controllerGroupName": "Chat",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "MP.Application.Chat.ChatAppService",
          "interfaces": [
            {
              "type": "MP.Application.Contracts.Chat.IChatAppService",
              "name": "IChatAppService",
              "methods": [
                {
                  "name": "GetAvailableSupportUsersAsync",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<MP.Application.Contracts.Chat.SupportUserDto>",
                    "typeSimple": "[MP.Application.Contracts.Chat.SupportUserDto]"
                  }
                },
                {
                  "name": "GetAllCustomersAsync",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<MP.Application.Contracts.Chat.CustomerUserDto>",
                    "typeSimple": "[MP.Application.Contracts.Chat.CustomerUserDto]"
                  }
                },
                {
                  "name": "GetMyConversationsAsync",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<MP.Application.Contracts.Chat.ChatConversationDto>",
                    "typeSimple": "[MP.Application.Contracts.Chat.ChatConversationDto]"
                  }
                },
                {
                  "name": "GetMessagesAsync",
                  "parametersOnMethod": [
                    {
                      "name": "otherUserId",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<MP.Application.Contracts.Chat.ChatMessageDto>",
                    "typeSimple": "[MP.Application.Contracts.Chat.ChatMessageDto]"
                  }
                },
                {
                  "name": "MarkMessagesAsReadAsync",
                  "parametersOnMethod": [
                    {
                      "name": "senderId",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                }
              ]
            }
          ],
          "actions": {
            "GetAvailableSupportUsersAsync": {
              "uniqueName": "GetAvailableSupportUsersAsync",
              "name": "GetAvailableSupportUsersAsync",
              "httpMethod": "GET",
              "url": "api/app/chat/available-support-users",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "System.Collections.Generic.List<MP.Application.Contracts.Chat.SupportUserDto>",
                "typeSimple": "[MP.Application.Contracts.Chat.SupportUserDto]"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Application.Contracts.Chat.IChatAppService"
            },
            "GetAllCustomersAsync": {
              "uniqueName": "GetAllCustomersAsync",
              "name": "GetAllCustomersAsync",
              "httpMethod": "GET",
              "url": "api/app/chat/customers",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "System.Collections.Generic.List<MP.Application.Contracts.Chat.CustomerUserDto>",
                "typeSimple": "[MP.Application.Contracts.Chat.CustomerUserDto]"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Application.Contracts.Chat.IChatAppService"
            },
            "GetMyConversationsAsync": {
              "uniqueName": "GetMyConversationsAsync",
              "name": "GetMyConversationsAsync",
              "httpMethod": "GET",
              "url": "api/app/chat/my-conversations",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "System.Collections.Generic.List<MP.Application.Contracts.Chat.ChatConversationDto>",
                "typeSimple": "[MP.Application.Contracts.Chat.ChatConversationDto]"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Application.Contracts.Chat.IChatAppService"
            },
            "GetMessagesAsyncByOtherUserId": {
              "uniqueName": "GetMessagesAsyncByOtherUserId",
              "name": "GetMessagesAsync",
              "httpMethod": "GET",
              "url": "api/app/chat/messages/{otherUserId}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "otherUserId",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "otherUserId",
                  "name": "otherUserId",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Collections.Generic.List<MP.Application.Contracts.Chat.ChatMessageDto>",
                "typeSimple": "[MP.Application.Contracts.Chat.ChatMessageDto]"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Application.Contracts.Chat.IChatAppService"
            },
            "MarkMessagesAsReadAsyncBySenderId": {
              "uniqueName": "MarkMessagesAsReadAsyncBySenderId",
              "name": "MarkMessagesAsReadAsync",
              "httpMethod": "POST",
              "url": "api/app/chat/mark-messages-as-read/{senderId}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "senderId",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "senderId",
                  "name": "senderId",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Application.Contracts.Chat.IChatAppService"
            }
          }
        },
        "MP.Application.CustomerDashboard.CustomerDashboardAppService": {
          "controllerName": "CustomerDashboard",
          "controllerGroupName": "CustomerDashboard",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "MP.Application.CustomerDashboard.CustomerDashboardAppService",
          "interfaces": [
            {
              "type": "MP.Application.Contracts.CustomerDashboard.ICustomerDashboardAppService",
              "name": "ICustomerDashboardAppService",
              "methods": [
                {
                  "name": "GetDashboardAsync",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "MP.Application.Contracts.CustomerDashboard.CustomerDashboardDto",
                    "typeSimple": "MP.Application.Contracts.CustomerDashboard.CustomerDashboardDto"
                  }
                },
                {
                  "name": "GetSalesStatisticsAsync",
                  "parametersOnMethod": [
                    {
                      "name": "filter",
                      "typeAsString": "MP.Application.Contracts.CustomerDashboard.CustomerStatisticsFilterDto, MP.Application.Contracts",
                      "type": "MP.Application.Contracts.CustomerDashboard.CustomerStatisticsFilterDto",
                      "typeSimple": "MP.Application.Contracts.CustomerDashboard.CustomerStatisticsFilterDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Application.Contracts.CustomerDashboard.CustomerSalesStatisticsDto",
                    "typeSimple": "MP.Application.Contracts.CustomerDashboard.CustomerSalesStatisticsDto"
                  }
                },
                {
                  "name": "GetMyActiveRentalsAsync",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<MP.Application.Contracts.CustomerDashboard.MyActiveRentalDto>",
                    "typeSimple": "[MP.Application.Contracts.CustomerDashboard.MyActiveRentalDto]"
                  }
                },
                {
                  "name": "GetMySettlementsAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto, Volo.Abp.Ddd.Application.Contracts",
                      "type": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
                      "typeSimple": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Application.Contracts.CustomerDashboard.SettlementItemDto>",
                    "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Application.Contracts.CustomerDashboard.SettlementItemDto>"
                  }
                },
                {
                  "name": "GetSettlementSummaryAsync",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "MP.Application.Contracts.CustomerDashboard.SettlementSummaryDto",
                    "typeSimple": "MP.Application.Contracts.CustomerDashboard.SettlementSummaryDto"
                  }
                },
                {
                  "name": "RequestSettlementAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "MP.Application.Contracts.CustomerDashboard.RequestSettlementDto, MP.Application.Contracts",
                      "type": "MP.Application.Contracts.CustomerDashboard.RequestSettlementDto",
                      "typeSimple": "MP.Application.Contracts.CustomerDashboard.RequestSettlementDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Application.Contracts.CustomerDashboard.SettlementItemDto",
                    "typeSimple": "MP.Application.Contracts.CustomerDashboard.SettlementItemDto"
                  }
                },
                {
                  "name": "GetMyNotificationsAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto, Volo.Abp.Ddd.Application.Contracts",
                      "type": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
                      "typeSimple": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Application.Contracts.CustomerDashboard.CustomerNotificationDto>",
                    "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Application.Contracts.CustomerDashboard.CustomerNotificationDto>"
                  }
                },
                {
                  "name": "MarkNotificationAsReadAsync",
                  "parametersOnMethod": [
                    {
                      "name": "notificationId",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                },
                {
                  "name": "MarkAllNotificationsAsReadAsync",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                },
                {
                  "name": "GetBoothQRCodeAsync",
                  "parametersOnMethod": [
                    {
                      "name": "rentalId",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Application.Contracts.CustomerDashboard.QRCodeDto",
                    "typeSimple": "MP.Application.Contracts.CustomerDashboard.QRCodeDto"
                  }
                }
              ]
            }
          ],
          "actions": {
            "GetDashboardAsync": {
              "uniqueName": "GetDashboardAsync",
              "name": "GetDashboardAsync",
              "httpMethod": "GET",
              "url": "api/app/customer-dashboard/dashboard",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "MP.Application.Contracts.CustomerDashboard.CustomerDashboardDto",
                "typeSimple": "MP.Application.Contracts.CustomerDashboard.CustomerDashboardDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Application.Contracts.CustomerDashboard.ICustomerDashboardAppService"
            },
            "GetSalesStatisticsAsyncByFilter": {
              "uniqueName": "GetSalesStatisticsAsyncByFilter",
              "name": "GetSalesStatisticsAsync",
              "httpMethod": "GET",
              "url": "api/app/customer-dashboard/sales-statistics",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "filter",
                  "typeAsString": "MP.Application.Contracts.CustomerDashboard.CustomerStatisticsFilterDto, MP.Application.Contracts",
                  "type": "MP.Application.Contracts.CustomerDashboard.CustomerStatisticsFilterDto",
                  "typeSimple": "MP.Application.Contracts.CustomerDashboard.CustomerStatisticsFilterDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "filter",
                  "name": "StartDate",
                  "jsonName": null,
                  "type": "System.DateTime?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "filter"
                },
                {
                  "nameOnMethod": "filter",
                  "name": "EndDate",
                  "jsonName": null,
                  "type": "System.DateTime?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "filter"
                },
                {
                  "nameOnMethod": "filter",
                  "name": "RentalId",
                  "jsonName": null,
                  "type": "System.Guid?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "filter"
                }
              ],
              "returnValue": {
                "type": "MP.Application.Contracts.CustomerDashboard.CustomerSalesStatisticsDto",
                "typeSimple": "MP.Application.Contracts.CustomerDashboard.CustomerSalesStatisticsDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Application.Contracts.CustomerDashboard.ICustomerDashboardAppService"
            },
            "GetMyActiveRentalsAsync": {
              "uniqueName": "GetMyActiveRentalsAsync",
              "name": "GetMyActiveRentalsAsync",
              "httpMethod": "GET",
              "url": "api/app/customer-dashboard/my-active-rentals",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "System.Collections.Generic.List<MP.Application.Contracts.CustomerDashboard.MyActiveRentalDto>",
                "typeSimple": "[MP.Application.Contracts.CustomerDashboard.MyActiveRentalDto]"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Application.Contracts.CustomerDashboard.ICustomerDashboardAppService"
            },
            "GetSettlementSummaryAsync": {
              "uniqueName": "GetSettlementSummaryAsync",
              "name": "GetSettlementSummaryAsync",
              "httpMethod": "GET",
              "url": "api/app/customer-dashboard/settlement-summary",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "MP.Application.Contracts.CustomerDashboard.SettlementSummaryDto",
                "typeSimple": "MP.Application.Contracts.CustomerDashboard.SettlementSummaryDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Application.Contracts.CustomerDashboard.ICustomerDashboardAppService"
            },
            "GetMySettlementsAsyncByInput": {
              "uniqueName": "GetMySettlementsAsyncByInput",
              "name": "GetMySettlementsAsync",
              "httpMethod": "GET",
              "url": "api/app/customer-dashboard/my-settlements",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto, Volo.Abp.Ddd.Application.Contracts",
                  "type": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
                  "typeSimple": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Application.Contracts.CustomerDashboard.SettlementItemDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Application.Contracts.CustomerDashboard.SettlementItemDto>"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Application.Contracts.CustomerDashboard.ICustomerDashboardAppService"
            },
            "RequestSettlementAsyncByInput": {
              "uniqueName": "RequestSettlementAsyncByInput",
              "name": "RequestSettlementAsync",
              "httpMethod": "POST",
              "url": "api/app/customer-dashboard/request-settlement",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "MP.Application.Contracts.CustomerDashboard.RequestSettlementDto, MP.Application.Contracts",
                  "type": "MP.Application.Contracts.CustomerDashboard.RequestSettlementDto",
                  "typeSimple": "MP.Application.Contracts.CustomerDashboard.RequestSettlementDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "MP.Application.Contracts.CustomerDashboard.RequestSettlementDto",
                  "typeSimple": "MP.Application.Contracts.CustomerDashboard.RequestSettlementDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Application.Contracts.CustomerDashboard.SettlementItemDto",
                "typeSimple": "MP.Application.Contracts.CustomerDashboard.SettlementItemDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Application.Contracts.CustomerDashboard.ICustomerDashboardAppService"
            },
            "GetMyNotificationsAsyncByInput": {
              "uniqueName": "GetMyNotificationsAsyncByInput",
              "name": "GetMyNotificationsAsync",
              "httpMethod": "GET",
              "url": "api/app/customer-dashboard/my-notifications",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto, Volo.Abp.Ddd.Application.Contracts",
                  "type": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
                  "typeSimple": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Application.Contracts.CustomerDashboard.CustomerNotificationDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Application.Contracts.CustomerDashboard.CustomerNotificationDto>"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Application.Contracts.CustomerDashboard.ICustomerDashboardAppService"
            },
            "MarkNotificationAsReadAsyncByNotificationId": {
              "uniqueName": "MarkNotificationAsReadAsyncByNotificationId",
              "name": "MarkNotificationAsReadAsync",
              "httpMethod": "POST",
              "url": "api/app/customer-dashboard/mark-notification-as-read/{notificationId}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "notificationId",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "notificationId",
                  "name": "notificationId",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Application.Contracts.CustomerDashboard.ICustomerDashboardAppService"
            },
            "MarkAllNotificationsAsReadAsync": {
              "uniqueName": "MarkAllNotificationsAsReadAsync",
              "name": "MarkAllNotificationsAsReadAsync",
              "httpMethod": "POST",
              "url": "api/app/customer-dashboard/mark-all-notifications-as-read",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Application.Contracts.CustomerDashboard.ICustomerDashboardAppService"
            },
            "GetBoothQRCodeAsyncByRentalId": {
              "uniqueName": "GetBoothQRCodeAsyncByRentalId",
              "name": "GetBoothQRCodeAsync",
              "httpMethod": "GET",
              "url": "api/app/customer-dashboard/booth-qRCode/{rentalId}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "rentalId",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "rentalId",
                  "name": "rentalId",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Application.Contracts.CustomerDashboard.QRCodeDto",
                "typeSimple": "MP.Application.Contracts.CustomerDashboard.QRCodeDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Application.Contracts.CustomerDashboard.ICustomerDashboardAppService"
            }
          }
        },
        "MP.Application.CustomerDashboard.MyItemAppService": {
          "controllerName": "MyItem",
          "controllerGroupName": "MyItem",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "MP.Application.CustomerDashboard.MyItemAppService",
          "interfaces": [
            {
              "type": "MP.Application.Contracts.CustomerDashboard.IMyItemAppService",
              "name": "IMyItemAppService",
              "methods": [
                {
                  "name": "GetMyItemsAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "MP.Application.Contracts.CustomerDashboard.GetMyItemsDto, MP.Application.Contracts",
                      "type": "MP.Application.Contracts.CustomerDashboard.GetMyItemsDto",
                      "typeSimple": "MP.Application.Contracts.CustomerDashboard.GetMyItemsDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Application.Contracts.CustomerDashboard.MyItemDto>",
                    "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Application.Contracts.CustomerDashboard.MyItemDto>"
                  }
                },
                {
                  "name": "GetMyItemAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Application.Contracts.CustomerDashboard.MyItemDto",
                    "typeSimple": "MP.Application.Contracts.CustomerDashboard.MyItemDto"
                  }
                },
                {
                  "name": "CreateAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "MP.Application.Contracts.CustomerDashboard.CreateMyItemDto, MP.Application.Contracts",
                      "type": "MP.Application.Contracts.CustomerDashboard.CreateMyItemDto",
                      "typeSimple": "MP.Application.Contracts.CustomerDashboard.CreateMyItemDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Application.Contracts.CustomerDashboard.MyItemDto",
                    "typeSimple": "MP.Application.Contracts.CustomerDashboard.MyItemDto"
                  }
                },
                {
                  "name": "UpdateAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "input",
                      "typeAsString": "MP.Application.Contracts.CustomerDashboard.UpdateMyItemDto, MP.Application.Contracts",
                      "type": "MP.Application.Contracts.CustomerDashboard.UpdateMyItemDto",
                      "typeSimple": "MP.Application.Contracts.CustomerDashboard.UpdateMyItemDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Application.Contracts.CustomerDashboard.MyItemDto",
                    "typeSimple": "MP.Application.Contracts.CustomerDashboard.MyItemDto"
                  }
                },
                {
                  "name": "DeleteAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                },
                {
                  "name": "BulkUpdateAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "MP.Application.Contracts.CustomerDashboard.BulkUpdateMyItemsDto, MP.Application.Contracts",
                      "type": "MP.Application.Contracts.CustomerDashboard.BulkUpdateMyItemsDto",
                      "typeSimple": "MP.Application.Contracts.CustomerDashboard.BulkUpdateMyItemsDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                },
                {
                  "name": "GetMyItemCategoriesAsync",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<System.String>",
                    "typeSimple": "[string]"
                  }
                },
                {
                  "name": "GetMyItemStatisticsAsync",
                  "parametersOnMethod": [
                    {
                      "name": "rentalId",
                      "typeAsString": "System.Nullable`1[[System.Guid, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib",
                      "type": "System.Guid?",
                      "typeSimple": "string?",
                      "isOptional": true,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Application.Contracts.CustomerDashboard.MyItemStatisticsDto",
                    "typeSimple": "MP.Application.Contracts.CustomerDashboard.MyItemStatisticsDto"
                  }
                },
                {
                  "name": "GenerateItemLabelsAsync",
                  "parametersOnMethod": [
                    {
                      "name": "itemIds",
                      "typeAsString": "System.Collections.Generic.List`1[[System.Guid, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib",
                      "type": "System.Collections.Generic.List<System.Guid>",
                      "typeSimple": "[string]",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Byte[]",
                    "typeSimple": "[number]"
                  }
                }
              ]
            }
          ],
          "actions": {
            "GetMyItemsAsyncByInput": {
              "uniqueName": "GetMyItemsAsyncByInput",
              "name": "GetMyItemsAsync",
              "httpMethod": "GET",
              "url": "api/app/my-item/my-items",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "MP.Application.Contracts.CustomerDashboard.GetMyItemsDto, MP.Application.Contracts",
                  "type": "MP.Application.Contracts.CustomerDashboard.GetMyItemsDto",
                  "typeSimple": "MP.Application.Contracts.CustomerDashboard.GetMyItemsDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "RentalId",
                  "jsonName": null,
                  "type": "System.Guid?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Status",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Category",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SearchTerm",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "CreatedAfter",
                  "jsonName": null,
                  "type": "System.DateTime?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "CreatedBefore",
                  "jsonName": null,
                  "type": "System.DateTime?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Application.Contracts.CustomerDashboard.MyItemDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Application.Contracts.CustomerDashboard.MyItemDto>"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Application.Contracts.CustomerDashboard.IMyItemAppService"
            },
            "GetMyItemAsyncById": {
              "uniqueName": "GetMyItemAsyncById",
              "name": "GetMyItemAsync",
              "httpMethod": "GET",
              "url": "api/app/my-item/{id}/my-item",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Application.Contracts.CustomerDashboard.MyItemDto",
                "typeSimple": "MP.Application.Contracts.CustomerDashboard.MyItemDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Application.Contracts.CustomerDashboard.IMyItemAppService"
            },
            "CreateAsyncByInput": {
              "uniqueName": "CreateAsyncByInput",
              "name": "CreateAsync",
              "httpMethod": "POST",
              "url": "api/app/my-item",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "MP.Application.Contracts.CustomerDashboard.CreateMyItemDto, MP.Application.Contracts",
                  "type": "MP.Application.Contracts.CustomerDashboard.CreateMyItemDto",
                  "typeSimple": "MP.Application.Contracts.CustomerDashboard.CreateMyItemDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "MP.Application.Contracts.CustomerDashboard.CreateMyItemDto",
                  "typeSimple": "MP.Application.Contracts.CustomerDashboard.CreateMyItemDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Application.Contracts.CustomerDashboard.MyItemDto",
                "typeSimple": "MP.Application.Contracts.CustomerDashboard.MyItemDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Application.Contracts.CustomerDashboard.IMyItemAppService"
            },
            "UpdateAsyncByIdAndInput": {
              "uniqueName": "UpdateAsyncByIdAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/app/my-item/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "MP.Application.Contracts.CustomerDashboard.UpdateMyItemDto, MP.Application.Contracts",
                  "type": "MP.Application.Contracts.CustomerDashboard.UpdateMyItemDto",
                  "typeSimple": "MP.Application.Contracts.CustomerDashboard.UpdateMyItemDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "MP.Application.Contracts.CustomerDashboard.UpdateMyItemDto",
                  "typeSimple": "MP.Application.Contracts.CustomerDashboard.UpdateMyItemDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Application.Contracts.CustomerDashboard.MyItemDto",
                "typeSimple": "MP.Application.Contracts.CustomerDashboard.MyItemDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Application.Contracts.CustomerDashboard.IMyItemAppService"
            },
            "DeleteAsyncById": {
              "uniqueName": "DeleteAsyncById",
              "name": "DeleteAsync",
              "httpMethod": "DELETE",
              "url": "api/app/my-item/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Application.Contracts.CustomerDashboard.IMyItemAppService"
            },
            "BulkUpdateAsyncByInput": {
              "uniqueName": "BulkUpdateAsyncByInput",
              "name": "BulkUpdateAsync",
              "httpMethod": "POST",
              "url": "api/app/my-item/bulk-update",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "MP.Application.Contracts.CustomerDashboard.BulkUpdateMyItemsDto, MP.Application.Contracts",
                  "type": "MP.Application.Contracts.CustomerDashboard.BulkUpdateMyItemsDto",
                  "typeSimple": "MP.Application.Contracts.CustomerDashboard.BulkUpdateMyItemsDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "MP.Application.Contracts.CustomerDashboard.BulkUpdateMyItemsDto",
                  "typeSimple": "MP.Application.Contracts.CustomerDashboard.BulkUpdateMyItemsDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Application.Contracts.CustomerDashboard.IMyItemAppService"
            },
            "GetMyItemCategoriesAsync": {
              "uniqueName": "GetMyItemCategoriesAsync",
              "name": "GetMyItemCategoriesAsync",
              "httpMethod": "GET",
              "url": "api/app/my-item/my-item-categories",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "System.Collections.Generic.List<System.String>",
                "typeSimple": "[string]"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Application.Contracts.CustomerDashboard.IMyItemAppService"
            },
            "GetMyItemStatisticsAsyncByRentalId": {
              "uniqueName": "GetMyItemStatisticsAsyncByRentalId",
              "name": "GetMyItemStatisticsAsync",
              "httpMethod": "GET",
              "url": "api/app/my-item/my-item-statistics",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "rentalId",
                  "typeAsString": "System.Nullable`1[[System.Guid, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib",
                  "type": "System.Guid?",
                  "typeSimple": "string?",
                  "isOptional": true,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "rentalId",
                  "name": "rentalId",
                  "jsonName": null,
                  "type": "System.Guid?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Application.Contracts.CustomerDashboard.MyItemStatisticsDto",
                "typeSimple": "MP.Application.Contracts.CustomerDashboard.MyItemStatisticsDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Application.Contracts.CustomerDashboard.IMyItemAppService"
            },
            "GenerateItemLabelsAsyncByItemIds": {
              "uniqueName": "GenerateItemLabelsAsyncByItemIds",
              "name": "GenerateItemLabelsAsync",
              "httpMethod": "POST",
              "url": "api/app/my-item/generate-item-labels",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "itemIds",
                  "typeAsString": "System.Collections.Generic.List`1[[System.Guid, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib",
                  "type": "System.Collections.Generic.List<System.Guid>",
                  "typeSimple": "[string]",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "itemIds",
                  "name": "itemIds",
                  "jsonName": null,
                  "type": "System.Collections.Generic.List<System.Guid>",
                  "typeSimple": "[string]",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Byte[]",
                "typeSimple": "[number]"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Application.Contracts.CustomerDashboard.IMyItemAppService"
            }
          }
        },
        "MP.Application.CustomerDashboard.MyRentalAppService": {
          "controllerName": "MyRental",
          "controllerGroupName": "MyRental",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "MP.Application.CustomerDashboard.MyRentalAppService",
          "interfaces": [
            {
              "type": "MP.Application.Contracts.CustomerDashboard.IMyRentalAppService",
              "name": "IMyRentalAppService",
              "methods": [
                {
                  "name": "GetMyRentalsAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "MP.Application.Contracts.CustomerDashboard.GetMyRentalsDto, MP.Application.Contracts",
                      "type": "MP.Application.Contracts.CustomerDashboard.GetMyRentalsDto",
                      "typeSimple": "MP.Application.Contracts.CustomerDashboard.GetMyRentalsDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Application.Contracts.CustomerDashboard.MyActiveRentalDto>",
                    "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Application.Contracts.CustomerDashboard.MyActiveRentalDto>"
                  }
                },
                {
                  "name": "GetMyRentalDetailAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Application.Contracts.CustomerDashboard.MyRentalDetailDto",
                    "typeSimple": "MP.Application.Contracts.CustomerDashboard.MyRentalDetailDto"
                  }
                },
                {
                  "name": "GetMyRentalCalendarAsync",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "MP.Application.Contracts.CustomerDashboard.MyRentalCalendarDto",
                    "typeSimple": "MP.Application.Contracts.CustomerDashboard.MyRentalCalendarDto"
                  }
                },
                {
                  "name": "RequestExtensionAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "MP.Application.Contracts.CustomerDashboard.RequestRentalExtensionDto, MP.Application.Contracts",
                      "type": "MP.Application.Contracts.CustomerDashboard.RequestRentalExtensionDto",
                      "typeSimple": "MP.Application.Contracts.CustomerDashboard.RequestRentalExtensionDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Application.Contracts.CustomerDashboard.RentalExtensionResultDto",
                    "typeSimple": "MP.Application.Contracts.CustomerDashboard.RentalExtensionResultDto"
                  }
                },
                {
                  "name": "CalculateExtensionCostAsync",
                  "parametersOnMethod": [
                    {
                      "name": "rentalId",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "days",
                      "typeAsString": "System.Int32, System.Private.CoreLib",
                      "type": "System.Int32",
                      "typeSimple": "number",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Application.Contracts.CustomerDashboard.ExtensionCostCalculationDto",
                    "typeSimple": "MP.Application.Contracts.CustomerDashboard.ExtensionCostCalculationDto"
                  }
                },
                {
                  "name": "GetRentalActivityAsync",
                  "parametersOnMethod": [
                    {
                      "name": "rentalId",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<MP.Application.Contracts.CustomerDashboard.RentalActivityDto>",
                    "typeSimple": "[MP.Application.Contracts.CustomerDashboard.RentalActivityDto]"
                  }
                },
                {
                  "name": "CancelMyRentalAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "reason",
                      "typeAsString": "System.String, System.Private.CoreLib",
                      "type": "System.String",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                }
              ]
            }
          ],
          "actions": {
            "GetMyRentalsAsyncByInput": {
              "uniqueName": "GetMyRentalsAsyncByInput",
              "name": "GetMyRentalsAsync",
              "httpMethod": "GET",
              "url": "api/app/my-rental/my-rentals",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "MP.Application.Contracts.CustomerDashboard.GetMyRentalsDto, MP.Application.Contracts",
                  "type": "MP.Application.Contracts.CustomerDashboard.GetMyRentalsDto",
                  "typeSimple": "MP.Application.Contracts.CustomerDashboard.GetMyRentalsDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Status",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "StartDateFrom",
                  "jsonName": null,
                  "type": "System.DateTime?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "StartDateTo",
                  "jsonName": null,
                  "type": "System.DateTime?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "IncludeCompleted",
                  "jsonName": null,
                  "type": "System.Boolean?",
                  "typeSimple": "boolean?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Application.Contracts.CustomerDashboard.MyActiveRentalDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Application.Contracts.CustomerDashboard.MyActiveRentalDto>"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Application.Contracts.CustomerDashboard.IMyRentalAppService"
            },
            "GetMyRentalDetailAsyncById": {
              "uniqueName": "GetMyRentalDetailAsyncById",
              "name": "GetMyRentalDetailAsync",
              "httpMethod": "GET",
              "url": "api/app/my-rental/{id}/my-rental-detail",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Application.Contracts.CustomerDashboard.MyRentalDetailDto",
                "typeSimple": "MP.Application.Contracts.CustomerDashboard.MyRentalDetailDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Application.Contracts.CustomerDashboard.IMyRentalAppService"
            },
            "GetMyRentalCalendarAsync": {
              "uniqueName": "GetMyRentalCalendarAsync",
              "name": "GetMyRentalCalendarAsync",
              "httpMethod": "GET",
              "url": "api/app/my-rental/my-rental-calendar",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "MP.Application.Contracts.CustomerDashboard.MyRentalCalendarDto",
                "typeSimple": "MP.Application.Contracts.CustomerDashboard.MyRentalCalendarDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Application.Contracts.CustomerDashboard.IMyRentalAppService"
            },
            "RequestExtensionAsyncByInput": {
              "uniqueName": "RequestExtensionAsyncByInput",
              "name": "RequestExtensionAsync",
              "httpMethod": "POST",
              "url": "api/app/my-rental/request-extension",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "MP.Application.Contracts.CustomerDashboard.RequestRentalExtensionDto, MP.Application.Contracts",
                  "type": "MP.Application.Contracts.CustomerDashboard.RequestRentalExtensionDto",
                  "typeSimple": "MP.Application.Contracts.CustomerDashboard.RequestRentalExtensionDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "MP.Application.Contracts.CustomerDashboard.RequestRentalExtensionDto",
                  "typeSimple": "MP.Application.Contracts.CustomerDashboard.RequestRentalExtensionDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Application.Contracts.CustomerDashboard.RentalExtensionResultDto",
                "typeSimple": "MP.Application.Contracts.CustomerDashboard.RentalExtensionResultDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Application.Contracts.CustomerDashboard.IMyRentalAppService"
            },
            "CalculateExtensionCostAsyncByRentalIdAndDays": {
              "uniqueName": "CalculateExtensionCostAsyncByRentalIdAndDays",
              "name": "CalculateExtensionCostAsync",
              "httpMethod": "POST",
              "url": "api/app/my-rental/calculate-extension-cost/{rentalId}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "rentalId",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "days",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "rentalId",
                  "name": "rentalId",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "days",
                  "name": "days",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Application.Contracts.CustomerDashboard.ExtensionCostCalculationDto",
                "typeSimple": "MP.Application.Contracts.CustomerDashboard.ExtensionCostCalculationDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Application.Contracts.CustomerDashboard.IMyRentalAppService"
            },
            "GetRentalActivityAsyncByRentalId": {
              "uniqueName": "GetRentalActivityAsyncByRentalId",
              "name": "GetRentalActivityAsync",
              "httpMethod": "GET",
              "url": "api/app/my-rental/rental-activity/{rentalId}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "rentalId",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "rentalId",
                  "name": "rentalId",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Collections.Generic.List<MP.Application.Contracts.CustomerDashboard.RentalActivityDto>",
                "typeSimple": "[MP.Application.Contracts.CustomerDashboard.RentalActivityDto]"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Application.Contracts.CustomerDashboard.IMyRentalAppService"
            },
            "CancelMyRentalAsyncByIdAndReason": {
              "uniqueName": "CancelMyRentalAsyncByIdAndReason",
              "name": "CancelMyRentalAsync",
              "httpMethod": "POST",
              "url": "api/app/my-rental/{id}/cancel-my-rental",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "reason",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "reason",
                  "name": "reason",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Application.Contracts.CustomerDashboard.IMyRentalAppService"
            }
          }
        },
        "MP.Application.Dashboard.DashboardAppService": {
          "controllerName": "Dashboard",
          "controllerGroupName": "Dashboard",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "MP.Application.Dashboard.DashboardAppService",
          "interfaces": [
            {
              "type": "MP.Application.Contracts.Dashboard.IDashboardAppService",
              "name": "IDashboardAppService",
              "methods": [
                {
                  "name": "GetOverviewAsync",
                  "parametersOnMethod": [
                    {
                      "name": "filter",
                      "typeAsString": "MP.Application.Contracts.Dashboard.PeriodFilterDto, MP.Application.Contracts",
                      "type": "MP.Application.Contracts.Dashboard.PeriodFilterDto",
                      "typeSimple": "MP.Application.Contracts.Dashboard.PeriodFilterDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Application.Contracts.Dashboard.DashboardOverviewDto",
                    "typeSimple": "MP.Application.Contracts.Dashboard.DashboardOverviewDto"
                  }
                },
                {
                  "name": "GetSalesAnalyticsAsync",
                  "parametersOnMethod": [
                    {
                      "name": "filter",
                      "typeAsString": "MP.Application.Contracts.Dashboard.PeriodFilterDto, MP.Application.Contracts",
                      "type": "MP.Application.Contracts.Dashboard.PeriodFilterDto",
                      "typeSimple": "MP.Application.Contracts.Dashboard.PeriodFilterDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Application.Contracts.Dashboard.SalesOverviewDto",
                    "typeSimple": "MP.Application.Contracts.Dashboard.SalesOverviewDto"
                  }
                },
                {
                  "name": "GetBoothOccupancyAsync",
                  "parametersOnMethod": [
                    {
                      "name": "filter",
                      "typeAsString": "MP.Application.Contracts.Dashboard.PeriodFilterDto, MP.Application.Contracts",
                      "type": "MP.Application.Contracts.Dashboard.PeriodFilterDto",
                      "typeSimple": "MP.Application.Contracts.Dashboard.PeriodFilterDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Application.Contracts.Dashboard.BoothOccupancyOverviewDto",
                    "typeSimple": "MP.Application.Contracts.Dashboard.BoothOccupancyOverviewDto"
                  }
                },
                {
                  "name": "GetFinancialReportsAsync",
                  "parametersOnMethod": [
                    {
                      "name": "filter",
                      "typeAsString": "MP.Application.Contracts.Dashboard.PeriodFilterDto, MP.Application.Contracts",
                      "type": "MP.Application.Contracts.Dashboard.PeriodFilterDto",
                      "typeSimple": "MP.Application.Contracts.Dashboard.PeriodFilterDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Application.Contracts.Dashboard.FinancialOverviewDto",
                    "typeSimple": "MP.Application.Contracts.Dashboard.FinancialOverviewDto"
                  }
                },
                {
                  "name": "GetCustomerAnalyticsAsync",
                  "parametersOnMethod": [
                    {
                      "name": "filter",
                      "typeAsString": "MP.Application.Contracts.Dashboard.PeriodFilterDto, MP.Application.Contracts",
                      "type": "MP.Application.Contracts.Dashboard.PeriodFilterDto",
                      "typeSimple": "MP.Application.Contracts.Dashboard.PeriodFilterDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Application.Contracts.Dashboard.CustomerAnalyticsDto",
                    "typeSimple": "MP.Application.Contracts.Dashboard.CustomerAnalyticsDto"
                  }
                },
                {
                  "name": "GetPaymentAnalyticsAsync",
                  "parametersOnMethod": [
                    {
                      "name": "filter",
                      "typeAsString": "MP.Application.Contracts.Dashboard.PeriodFilterDto, MP.Application.Contracts",
                      "type": "MP.Application.Contracts.Dashboard.PeriodFilterDto",
                      "typeSimple": "MP.Application.Contracts.Dashboard.PeriodFilterDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Application.Contracts.Dashboard.PaymentAnalyticsDto",
                    "typeSimple": "MP.Application.Contracts.Dashboard.PaymentAnalyticsDto"
                  }
                },
                {
                  "name": "ExportSalesReportAsync",
                  "parametersOnMethod": [
                    {
                      "name": "filter",
                      "typeAsString": "MP.Application.Contracts.Dashboard.PeriodFilterDto, MP.Application.Contracts",
                      "type": "MP.Application.Contracts.Dashboard.PeriodFilterDto",
                      "typeSimple": "MP.Application.Contracts.Dashboard.PeriodFilterDto",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "format",
                      "typeAsString": "MP.Application.Contracts.Dashboard.ExportFormat, MP.Application.Contracts",
                      "type": "MP.Application.Contracts.Dashboard.ExportFormat",
                      "typeSimple": "enum",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Byte[]",
                    "typeSimple": "[number]"
                  }
                },
                {
                  "name": "ExportFinancialReportAsync",
                  "parametersOnMethod": [
                    {
                      "name": "filter",
                      "typeAsString": "MP.Application.Contracts.Dashboard.PeriodFilterDto, MP.Application.Contracts",
                      "type": "MP.Application.Contracts.Dashboard.PeriodFilterDto",
                      "typeSimple": "MP.Application.Contracts.Dashboard.PeriodFilterDto",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "format",
                      "typeAsString": "MP.Application.Contracts.Dashboard.ExportFormat, MP.Application.Contracts",
                      "type": "MP.Application.Contracts.Dashboard.ExportFormat",
                      "typeSimple": "enum",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Byte[]",
                    "typeSimple": "[number]"
                  }
                }
              ]
            }
          ],
          "actions": {
            "GetOverviewAsyncByFilter": {
              "uniqueName": "GetOverviewAsyncByFilter",
              "name": "GetOverviewAsync",
              "httpMethod": "GET",
              "url": "api/app/dashboard/overview",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "filter",
                  "typeAsString": "MP.Application.Contracts.Dashboard.PeriodFilterDto, MP.Application.Contracts",
                  "type": "MP.Application.Contracts.Dashboard.PeriodFilterDto",
                  "typeSimple": "MP.Application.Contracts.Dashboard.PeriodFilterDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "filter",
                  "name": "StartDate",
                  "jsonName": null,
                  "type": "System.DateTime?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "filter"
                },
                {
                  "nameOnMethod": "filter",
                  "name": "EndDate",
                  "jsonName": null,
                  "type": "System.DateTime?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "filter"
                },
                {
                  "nameOnMethod": "filter",
                  "name": "Period",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "filter"
                }
              ],
              "returnValue": {
                "type": "MP.Application.Contracts.Dashboard.DashboardOverviewDto",
                "typeSimple": "MP.Application.Contracts.Dashboard.DashboardOverviewDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Application.Contracts.Dashboard.IDashboardAppService"
            },
            "GetSalesAnalyticsAsyncByFilter": {
              "uniqueName": "GetSalesAnalyticsAsyncByFilter",
              "name": "GetSalesAnalyticsAsync",
              "httpMethod": "GET",
              "url": "api/app/dashboard/sales-analytics",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "filter",
                  "typeAsString": "MP.Application.Contracts.Dashboard.PeriodFilterDto, MP.Application.Contracts",
                  "type": "MP.Application.Contracts.Dashboard.PeriodFilterDto",
                  "typeSimple": "MP.Application.Contracts.Dashboard.PeriodFilterDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "filter",
                  "name": "StartDate",
                  "jsonName": null,
                  "type": "System.DateTime?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "filter"
                },
                {
                  "nameOnMethod": "filter",
                  "name": "EndDate",
                  "jsonName": null,
                  "type": "System.DateTime?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "filter"
                },
                {
                  "nameOnMethod": "filter",
                  "name": "Period",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "filter"
                }
              ],
              "returnValue": {
                "type": "MP.Application.Contracts.Dashboard.SalesOverviewDto",
                "typeSimple": "MP.Application.Contracts.Dashboard.SalesOverviewDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Application.Contracts.Dashboard.IDashboardAppService"
            },
            "GetBoothOccupancyAsyncByFilter": {
              "uniqueName": "GetBoothOccupancyAsyncByFilter",
              "name": "GetBoothOccupancyAsync",
              "httpMethod": "GET",
              "url": "api/app/dashboard/booth-occupancy",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "filter",
                  "typeAsString": "MP.Application.Contracts.Dashboard.PeriodFilterDto, MP.Application.Contracts",
                  "type": "MP.Application.Contracts.Dashboard.PeriodFilterDto",
                  "typeSimple": "MP.Application.Contracts.Dashboard.PeriodFilterDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "filter",
                  "name": "StartDate",
                  "jsonName": null,
                  "type": "System.DateTime?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "filter"
                },
                {
                  "nameOnMethod": "filter",
                  "name": "EndDate",
                  "jsonName": null,
                  "type": "System.DateTime?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "filter"
                },
                {
                  "nameOnMethod": "filter",
                  "name": "Period",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "filter"
                }
              ],
              "returnValue": {
                "type": "MP.Application.Contracts.Dashboard.BoothOccupancyOverviewDto",
                "typeSimple": "MP.Application.Contracts.Dashboard.BoothOccupancyOverviewDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Application.Contracts.Dashboard.IDashboardAppService"
            },
            "GetFinancialReportsAsyncByFilter": {
              "uniqueName": "GetFinancialReportsAsyncByFilter",
              "name": "GetFinancialReportsAsync",
              "httpMethod": "GET",
              "url": "api/app/dashboard/financial-reports",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "filter",
                  "typeAsString": "MP.Application.Contracts.Dashboard.PeriodFilterDto, MP.Application.Contracts",
                  "type": "MP.Application.Contracts.Dashboard.PeriodFilterDto",
                  "typeSimple": "MP.Application.Contracts.Dashboard.PeriodFilterDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "filter",
                  "name": "StartDate",
                  "jsonName": null,
                  "type": "System.DateTime?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "filter"
                },
                {
                  "nameOnMethod": "filter",
                  "name": "EndDate",
                  "jsonName": null,
                  "type": "System.DateTime?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "filter"
                },
                {
                  "nameOnMethod": "filter",
                  "name": "Period",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "filter"
                }
              ],
              "returnValue": {
                "type": "MP.Application.Contracts.Dashboard.FinancialOverviewDto",
                "typeSimple": "MP.Application.Contracts.Dashboard.FinancialOverviewDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Application.Contracts.Dashboard.IDashboardAppService"
            },
            "GetCustomerAnalyticsAsyncByFilter": {
              "uniqueName": "GetCustomerAnalyticsAsyncByFilter",
              "name": "GetCustomerAnalyticsAsync",
              "httpMethod": "GET",
              "url": "api/app/dashboard/customer-analytics",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "filter",
                  "typeAsString": "MP.Application.Contracts.Dashboard.PeriodFilterDto, MP.Application.Contracts",
                  "type": "MP.Application.Contracts.Dashboard.PeriodFilterDto",
                  "typeSimple": "MP.Application.Contracts.Dashboard.PeriodFilterDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "filter",
                  "name": "StartDate",
                  "jsonName": null,
                  "type": "System.DateTime?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "filter"
                },
                {
                  "nameOnMethod": "filter",
                  "name": "EndDate",
                  "jsonName": null,
                  "type": "System.DateTime?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "filter"
                },
                {
                  "nameOnMethod": "filter",
                  "name": "Period",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "filter"
                }
              ],
              "returnValue": {
                "type": "MP.Application.Contracts.Dashboard.CustomerAnalyticsDto",
                "typeSimple": "MP.Application.Contracts.Dashboard.CustomerAnalyticsDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Application.Contracts.Dashboard.IDashboardAppService"
            },
            "ExportSalesReportAsyncByFilterAndFormat": {
              "uniqueName": "ExportSalesReportAsyncByFilterAndFormat",
              "name": "ExportSalesReportAsync",
              "httpMethod": "POST",
              "url": "api/app/dashboard/export-sales-report",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "filter",
                  "typeAsString": "MP.Application.Contracts.Dashboard.PeriodFilterDto, MP.Application.Contracts",
                  "type": "MP.Application.Contracts.Dashboard.PeriodFilterDto",
                  "typeSimple": "MP.Application.Contracts.Dashboard.PeriodFilterDto",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "format",
                  "typeAsString": "MP.Application.Contracts.Dashboard.ExportFormat, MP.Application.Contracts",
                  "type": "MP.Application.Contracts.Dashboard.ExportFormat",
                  "typeSimple": "enum",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "filter",
                  "name": "filter",
                  "jsonName": null,
                  "type": "MP.Application.Contracts.Dashboard.PeriodFilterDto",
                  "typeSimple": "MP.Application.Contracts.Dashboard.PeriodFilterDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "format",
                  "name": "format",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Byte[]",
                "typeSimple": "[number]"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Application.Contracts.Dashboard.IDashboardAppService"
            },
            "ExportFinancialReportAsyncByFilterAndFormat": {
              "uniqueName": "ExportFinancialReportAsyncByFilterAndFormat",
              "name": "ExportFinancialReportAsync",
              "httpMethod": "POST",
              "url": "api/app/dashboard/export-financial-report",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "filter",
                  "typeAsString": "MP.Application.Contracts.Dashboard.PeriodFilterDto, MP.Application.Contracts",
                  "type": "MP.Application.Contracts.Dashboard.PeriodFilterDto",
                  "typeSimple": "MP.Application.Contracts.Dashboard.PeriodFilterDto",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "format",
                  "typeAsString": "MP.Application.Contracts.Dashboard.ExportFormat, MP.Application.Contracts",
                  "type": "MP.Application.Contracts.Dashboard.ExportFormat",
                  "typeSimple": "enum",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "filter",
                  "name": "filter",
                  "jsonName": null,
                  "type": "MP.Application.Contracts.Dashboard.PeriodFilterDto",
                  "typeSimple": "MP.Application.Contracts.Dashboard.PeriodFilterDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "format",
                  "name": "format",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Byte[]",
                "typeSimple": "[number]"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Application.Contracts.Dashboard.IDashboardAppService"
            },
            "GetPaymentAnalyticsAsyncByFilter": {
              "uniqueName": "GetPaymentAnalyticsAsyncByFilter",
              "name": "GetPaymentAnalyticsAsync",
              "httpMethod": "GET",
              "url": "api/app/dashboard/payment-analytics",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "filter",
                  "typeAsString": "MP.Application.Contracts.Dashboard.PeriodFilterDto, MP.Application.Contracts",
                  "type": "MP.Application.Contracts.Dashboard.PeriodFilterDto",
                  "typeSimple": "MP.Application.Contracts.Dashboard.PeriodFilterDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "filter",
                  "name": "StartDate",
                  "jsonName": null,
                  "type": "System.DateTime?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "filter"
                },
                {
                  "nameOnMethod": "filter",
                  "name": "EndDate",
                  "jsonName": null,
                  "type": "System.DateTime?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "filter"
                },
                {
                  "nameOnMethod": "filter",
                  "name": "Period",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "filter"
                }
              ],
              "returnValue": {
                "type": "MP.Application.Contracts.Dashboard.PaymentAnalyticsDto",
                "typeSimple": "MP.Application.Contracts.Dashboard.PaymentAnalyticsDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Application.Contracts.Dashboard.IDashboardAppService"
            }
          }
        },
        "MP.Application.Files.UploadedFileAppService": {
          "controllerName": "UploadedFile",
          "controllerGroupName": "UploadedFile",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "MP.Application.Files.UploadedFileAppService",
          "interfaces": [
            {
              "type": "MP.Application.Contracts.Files.IUploadedFileAppService",
              "name": "IUploadedFileAppService",
              "methods": [
                {
                  "name": "UploadAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "MP.Application.Contracts.Files.UploadFileDto, MP.Application.Contracts",
                      "type": "MP.Application.Contracts.Files.UploadFileDto",
                      "typeSimple": "MP.Application.Contracts.Files.UploadFileDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Application.Contracts.Files.UploadedFileDto",
                    "typeSimple": "MP.Application.Contracts.Files.UploadedFileDto"
                  }
                },
                {
                  "name": "GetAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Application.Contracts.Files.UploadedFileDto",
                    "typeSimple": "MP.Application.Contracts.Files.UploadedFileDto"
                  }
                },
                {
                  "name": "DeleteAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                }
              ]
            }
          ],
          "actions": {
            "UploadAsyncByInput": {
              "uniqueName": "UploadAsyncByInput",
              "name": "UploadAsync",
              "httpMethod": "POST",
              "url": "api/app/uploaded-file/upload",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "MP.Application.Contracts.Files.UploadFileDto, MP.Application.Contracts",
                  "type": "MP.Application.Contracts.Files.UploadFileDto",
                  "typeSimple": "MP.Application.Contracts.Files.UploadFileDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "MP.Application.Contracts.Files.UploadFileDto",
                  "typeSimple": "MP.Application.Contracts.Files.UploadFileDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Application.Contracts.Files.UploadedFileDto",
                "typeSimple": "MP.Application.Contracts.Files.UploadedFileDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Application.Contracts.Files.IUploadedFileAppService"
            },
            "GetAsyncById": {
              "uniqueName": "GetAsyncById",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/app/uploaded-file/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Application.Contracts.Files.UploadedFileDto",
                "typeSimple": "MP.Application.Contracts.Files.UploadedFileDto"
              },
              "allowAnonymous": true,
              "implementFrom": "MP.Application.Contracts.Files.IUploadedFileAppService"
            },
            "DeleteAsyncById": {
              "uniqueName": "DeleteAsyncById",
              "name": "DeleteAsync",
              "httpMethod": "DELETE",
              "url": "api/app/uploaded-file/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Application.Contracts.Files.IUploadedFileAppService"
            }
          }
        },
        "MP.Application.HomePageContent.HomePageSectionAppService": {
          "controllerName": "HomePageSection",
          "controllerGroupName": "HomePageSection",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "MP.Application.HomePageContent.HomePageSectionAppService",
          "interfaces": [
            {
              "type": "MP.Application.Contracts.HomePageContent.IHomePageSectionAppService",
              "name": "IHomePageSectionAppService",
              "methods": [
                {
                  "name": "GetAllOrderedAsync",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<MP.Application.Contracts.HomePageContent.HomePageSectionDto>",
                    "typeSimple": "[MP.Application.Contracts.HomePageContent.HomePageSectionDto]"
                  }
                },
                {
                  "name": "GetActiveForDisplayAsync",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<MP.Application.Contracts.HomePageContent.HomePageSectionDto>",
                    "typeSimple": "[MP.Application.Contracts.HomePageContent.HomePageSectionDto]"
                  }
                },
                {
                  "name": "ActivateAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Application.Contracts.HomePageContent.HomePageSectionDto",
                    "typeSimple": "MP.Application.Contracts.HomePageContent.HomePageSectionDto"
                  }
                },
                {
                  "name": "DeactivateAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Application.Contracts.HomePageContent.HomePageSectionDto",
                    "typeSimple": "MP.Application.Contracts.HomePageContent.HomePageSectionDto"
                  }
                },
                {
                  "name": "ReorderAsync",
                  "parametersOnMethod": [
                    {
                      "name": "reorderList",
                      "typeAsString": "System.Collections.Generic.List`1[[MP.Application.Contracts.HomePageContent.ReorderSectionDto, MP.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib",
                      "type": "System.Collections.Generic.List<MP.Application.Contracts.HomePageContent.ReorderSectionDto>",
                      "typeSimple": "[MP.Application.Contracts.HomePageContent.ReorderSectionDto]",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                },
                {
                  "name": "GetAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Application.Contracts.HomePageContent.HomePageSectionDto",
                    "typeSimple": "MP.Application.Contracts.HomePageContent.HomePageSectionDto"
                  }
                },
                {
                  "name": "GetListAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto, Volo.Abp.Ddd.Application.Contracts",
                      "type": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
                      "typeSimple": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Application.Contracts.HomePageContent.HomePageSectionDto>",
                    "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Application.Contracts.HomePageContent.HomePageSectionDto>"
                  }
                },
                {
                  "name": "CreateAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "MP.Application.Contracts.HomePageContent.CreateHomePageSectionDto, MP.Application.Contracts",
                      "type": "MP.Application.Contracts.HomePageContent.CreateHomePageSectionDto",
                      "typeSimple": "MP.Application.Contracts.HomePageContent.CreateHomePageSectionDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Application.Contracts.HomePageContent.HomePageSectionDto",
                    "typeSimple": "MP.Application.Contracts.HomePageContent.HomePageSectionDto"
                  }
                },
                {
                  "name": "UpdateAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "input",
                      "typeAsString": "MP.Application.Contracts.HomePageContent.UpdateHomePageSectionDto, MP.Application.Contracts",
                      "type": "MP.Application.Contracts.HomePageContent.UpdateHomePageSectionDto",
                      "typeSimple": "MP.Application.Contracts.HomePageContent.UpdateHomePageSectionDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Application.Contracts.HomePageContent.HomePageSectionDto",
                    "typeSimple": "MP.Application.Contracts.HomePageContent.HomePageSectionDto"
                  }
                },
                {
                  "name": "DeleteAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                }
              ]
            }
          ],
          "actions": {
            "CreateAsyncByInput": {
              "uniqueName": "CreateAsyncByInput",
              "name": "CreateAsync",
              "httpMethod": "POST",
              "url": "api/app/home-page-section",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "MP.Application.Contracts.HomePageContent.CreateHomePageSectionDto, MP.Application.Contracts",
                  "type": "MP.Application.Contracts.HomePageContent.CreateHomePageSectionDto",
                  "typeSimple": "MP.Application.Contracts.HomePageContent.CreateHomePageSectionDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "MP.Application.Contracts.HomePageContent.CreateHomePageSectionDto",
                  "typeSimple": "MP.Application.Contracts.HomePageContent.CreateHomePageSectionDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Application.Contracts.HomePageContent.HomePageSectionDto",
                "typeSimple": "MP.Application.Contracts.HomePageContent.HomePageSectionDto"
              },
              "allowAnonymous": false,
              "implementFrom": "Volo.Abp.Application.Services.ICreateAppService<MP.Application.Contracts.HomePageContent.HomePageSectionDto,MP.Application.Contracts.HomePageContent.CreateHomePageSectionDto>"
            },
            "UpdateAsyncByIdAndInput": {
              "uniqueName": "UpdateAsyncByIdAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/app/home-page-section/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "MP.Application.Contracts.HomePageContent.UpdateHomePageSectionDto, MP.Application.Contracts",
                  "type": "MP.Application.Contracts.HomePageContent.UpdateHomePageSectionDto",
                  "typeSimple": "MP.Application.Contracts.HomePageContent.UpdateHomePageSectionDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "MP.Application.Contracts.HomePageContent.UpdateHomePageSectionDto",
                  "typeSimple": "MP.Application.Contracts.HomePageContent.UpdateHomePageSectionDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Application.Contracts.HomePageContent.HomePageSectionDto",
                "typeSimple": "MP.Application.Contracts.HomePageContent.HomePageSectionDto"
              },
              "allowAnonymous": false,
              "implementFrom": "Volo.Abp.Application.Services.IUpdateAppService<MP.Application.Contracts.HomePageContent.HomePageSectionDto,System.Guid,MP.Application.Contracts.HomePageContent.UpdateHomePageSectionDto>"
            },
            "DeleteAsyncById": {
              "uniqueName": "DeleteAsyncById",
              "name": "DeleteAsync",
              "httpMethod": "DELETE",
              "url": "api/app/home-page-section/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": false,
              "implementFrom": "Volo.Abp.Application.Services.IDeleteAppService<System.Guid>"
            },
            "GetAllOrderedAsync": {
              "uniqueName": "GetAllOrderedAsync",
              "name": "GetAllOrderedAsync",
              "httpMethod": "GET",
              "url": "api/app/home-page-section/ordered",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "System.Collections.Generic.List<MP.Application.Contracts.HomePageContent.HomePageSectionDto>",
                "typeSimple": "[MP.Application.Contracts.HomePageContent.HomePageSectionDto]"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Application.Contracts.HomePageContent.IHomePageSectionAppService"
            },
            "GetActiveForDisplayAsync": {
              "uniqueName": "GetActiveForDisplayAsync",
              "name": "GetActiveForDisplayAsync",
              "httpMethod": "GET",
              "url": "api/app/home-page-section/active-for-display",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "System.Collections.Generic.List<MP.Application.Contracts.HomePageContent.HomePageSectionDto>",
                "typeSimple": "[MP.Application.Contracts.HomePageContent.HomePageSectionDto]"
              },
              "allowAnonymous": true,
              "implementFrom": "MP.Application.Contracts.HomePageContent.IHomePageSectionAppService"
            },
            "ActivateAsyncById": {
              "uniqueName": "ActivateAsyncById",
              "name": "ActivateAsync",
              "httpMethod": "POST",
              "url": "api/app/home-page-section/{id}/activate",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Application.Contracts.HomePageContent.HomePageSectionDto",
                "typeSimple": "MP.Application.Contracts.HomePageContent.HomePageSectionDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Application.Contracts.HomePageContent.IHomePageSectionAppService"
            },
            "DeactivateAsyncById": {
              "uniqueName": "DeactivateAsyncById",
              "name": "DeactivateAsync",
              "httpMethod": "POST",
              "url": "api/app/home-page-section/{id}/deactivate",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Application.Contracts.HomePageContent.HomePageSectionDto",
                "typeSimple": "MP.Application.Contracts.HomePageContent.HomePageSectionDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Application.Contracts.HomePageContent.IHomePageSectionAppService"
            },
            "ReorderAsyncByReorderList": {
              "uniqueName": "ReorderAsyncByReorderList",
              "name": "ReorderAsync",
              "httpMethod": "POST",
              "url": "api/app/home-page-section/reorder",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "reorderList",
                  "typeAsString": "System.Collections.Generic.List`1[[MP.Application.Contracts.HomePageContent.ReorderSectionDto, MP.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib",
                  "type": "System.Collections.Generic.List<MP.Application.Contracts.HomePageContent.ReorderSectionDto>",
                  "typeSimple": "[MP.Application.Contracts.HomePageContent.ReorderSectionDto]",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "reorderList",
                  "name": "reorderList",
                  "jsonName": null,
                  "type": "System.Collections.Generic.List<MP.Application.Contracts.HomePageContent.ReorderSectionDto>",
                  "typeSimple": "[MP.Application.Contracts.HomePageContent.ReorderSectionDto]",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Application.Contracts.HomePageContent.IHomePageSectionAppService"
            },
            "GetAsyncById": {
              "uniqueName": "GetAsyncById",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/app/home-page-section/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Application.Contracts.HomePageContent.HomePageSectionDto",
                "typeSimple": "MP.Application.Contracts.HomePageContent.HomePageSectionDto"
              },
              "allowAnonymous": false,
              "implementFrom": "Volo.Abp.Application.Services.IReadOnlyAppService<MP.Application.Contracts.HomePageContent.HomePageSectionDto,MP.Application.Contracts.HomePageContent.HomePageSectionDto,System.Guid,Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto>"
            },
            "GetListAsyncByInput": {
              "uniqueName": "GetListAsyncByInput",
              "name": "GetListAsync",
              "httpMethod": "GET",
              "url": "api/app/home-page-section",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto, Volo.Abp.Ddd.Application.Contracts",
                  "type": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
                  "typeSimple": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Application.Contracts.HomePageContent.HomePageSectionDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Application.Contracts.HomePageContent.HomePageSectionDto>"
              },
              "allowAnonymous": false,
              "implementFrom": "Volo.Abp.Application.Services.IReadOnlyAppService<MP.Application.Contracts.HomePageContent.HomePageSectionDto,MP.Application.Contracts.HomePageContent.HomePageSectionDto,System.Guid,Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto>"
            }
          }
        },
        "MP.Application.Notifications.NotificationAppService": {
          "controllerName": "Notification",
          "controllerGroupName": "Notification",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "MP.Application.Notifications.NotificationAppService",
          "interfaces": [
            {
              "type": "MP.Application.Contracts.Notifications.INotificationAppService",
              "name": "INotificationAppService",
              "methods": [
                {
                  "name": "SendToUserAsync",
                  "parametersOnMethod": [
                    {
                      "name": "userId",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "notification",
                      "typeAsString": "MP.Application.Contracts.SignalR.NotificationMessageDto, MP.Application.Contracts",
                      "type": "MP.Application.Contracts.SignalR.NotificationMessageDto",
                      "typeSimple": "MP.Application.Contracts.SignalR.NotificationMessageDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                },
                {
                  "name": "SendToTenantAsync",
                  "parametersOnMethod": [
                    {
                      "name": "notification",
                      "typeAsString": "MP.Application.Contracts.SignalR.NotificationMessageDto, MP.Application.Contracts",
                      "type": "MP.Application.Contracts.SignalR.NotificationMessageDto",
                      "typeSimple": "MP.Application.Contracts.SignalR.NotificationMessageDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                },
                {
                  "name": "GetListAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "MP.Application.Contracts.Notifications.GetNotificationsInput, MP.Application.Contracts",
                      "type": "MP.Application.Contracts.Notifications.GetNotificationsInput",
                      "typeSimple": "MP.Application.Contracts.Notifications.GetNotificationsInput",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Application.Contracts.Notifications.NotificationListDto",
                    "typeSimple": "MP.Application.Contracts.Notifications.NotificationListDto"
                  }
                },
                {
                  "name": "GetUnreadAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "MP.Application.Contracts.Notifications.GetNotificationsInput, MP.Application.Contracts",
                      "type": "MP.Application.Contracts.Notifications.GetNotificationsInput",
                      "typeSimple": "MP.Application.Contracts.Notifications.GetNotificationsInput",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Application.Contracts.Notifications.NotificationListDto",
                    "typeSimple": "MP.Application.Contracts.Notifications.NotificationListDto"
                  }
                },
                {
                  "name": "GetAllAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "MP.Application.Contracts.Notifications.GetNotificationsInput, MP.Application.Contracts",
                      "type": "MP.Application.Contracts.Notifications.GetNotificationsInput",
                      "typeSimple": "MP.Application.Contracts.Notifications.GetNotificationsInput",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Application.Contracts.Notifications.NotificationListDto",
                    "typeSimple": "MP.Application.Contracts.Notifications.NotificationListDto"
                  }
                },
                {
                  "name": "MarkAsReadAsync",
                  "parametersOnMethod": [
                    {
                      "name": "notificationId",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                },
                {
                  "name": "MarkMultipleAsReadAsync",
                  "parametersOnMethod": [
                    {
                      "name": "notificationIds",
                      "typeAsString": "System.Collections.Generic.List`1[[System.Guid, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib",
                      "type": "System.Collections.Generic.List<System.Guid>",
                      "typeSimple": "[string]",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                },
                {
                  "name": "MarkAllAsReadAsync",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                },
                {
                  "name": "GetStatsAsync",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "MP.Application.Contracts.Notifications.NotificationStatsDto",
                    "typeSimple": "MP.Application.Contracts.Notifications.NotificationStatsDto"
                  }
                },
                {
                  "name": "DeleteAsync",
                  "parametersOnMethod": [
                    {
                      "name": "notificationId",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                },
                {
                  "name": "DeleteExpiredNotificationsAsync",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "System.Int32",
                    "typeSimple": "number"
                  }
                },
                {
                  "name": "GetUnreadCountAsync",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "System.Int32",
                    "typeSimple": "number"
                  }
                }
              ]
            }
          ],
          "actions": {
            "SendToUserAsyncByUserIdAndNotification": {
              "uniqueName": "SendToUserAsyncByUserIdAndNotification",
              "name": "SendToUserAsync",
              "httpMethod": "POST",
              "url": "api/app/notification/send-to-user",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "userId",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "notification",
                  "typeAsString": "MP.Application.Contracts.SignalR.NotificationMessageDto, MP.Application.Contracts",
                  "type": "MP.Application.Contracts.SignalR.NotificationMessageDto",
                  "typeSimple": "MP.Application.Contracts.SignalR.NotificationMessageDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "userId",
                  "name": "userId",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "notification",
                  "name": "notification",
                  "jsonName": null,
                  "type": "MP.Application.Contracts.SignalR.NotificationMessageDto",
                  "typeSimple": "MP.Application.Contracts.SignalR.NotificationMessageDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": true,
              "implementFrom": "MP.Application.Contracts.Notifications.INotificationAppService"
            },
            "SendToTenantAsyncByNotification": {
              "uniqueName": "SendToTenantAsyncByNotification",
              "name": "SendToTenantAsync",
              "httpMethod": "POST",
              "url": "api/app/notification/send-to-tenant",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "notification",
                  "typeAsString": "MP.Application.Contracts.SignalR.NotificationMessageDto, MP.Application.Contracts",
                  "type": "MP.Application.Contracts.SignalR.NotificationMessageDto",
                  "typeSimple": "MP.Application.Contracts.SignalR.NotificationMessageDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "notification",
                  "name": "notification",
                  "jsonName": null,
                  "type": "MP.Application.Contracts.SignalR.NotificationMessageDto",
                  "typeSimple": "MP.Application.Contracts.SignalR.NotificationMessageDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Application.Contracts.Notifications.INotificationAppService"
            },
            "GetListAsyncByInput": {
              "uniqueName": "GetListAsyncByInput",
              "name": "GetListAsync",
              "httpMethod": "GET",
              "url": "api/app/notification",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "MP.Application.Contracts.Notifications.GetNotificationsInput, MP.Application.Contracts",
                  "type": "MP.Application.Contracts.Notifications.GetNotificationsInput",
                  "typeSimple": "MP.Application.Contracts.Notifications.GetNotificationsInput",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "IsRead",
                  "jsonName": null,
                  "type": "System.Boolean?",
                  "typeSimple": "boolean?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Severity",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Type",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "StartDate",
                  "jsonName": null,
                  "type": "System.DateTime?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "EndDate",
                  "jsonName": null,
                  "type": "System.DateTime?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "IncludeExpired",
                  "jsonName": null,
                  "type": "System.Boolean",
                  "typeSimple": "boolean",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "MP.Application.Contracts.Notifications.NotificationListDto",
                "typeSimple": "MP.Application.Contracts.Notifications.NotificationListDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Application.Contracts.Notifications.INotificationAppService"
            },
            "GetUnreadAsyncByInput": {
              "uniqueName": "GetUnreadAsyncByInput",
              "name": "GetUnreadAsync",
              "httpMethod": "GET",
              "url": "api/app/notification/unread",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "MP.Application.Contracts.Notifications.GetNotificationsInput, MP.Application.Contracts",
                  "type": "MP.Application.Contracts.Notifications.GetNotificationsInput",
                  "typeSimple": "MP.Application.Contracts.Notifications.GetNotificationsInput",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "IsRead",
                  "jsonName": null,
                  "type": "System.Boolean?",
                  "typeSimple": "boolean?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Severity",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Type",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "StartDate",
                  "jsonName": null,
                  "type": "System.DateTime?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "EndDate",
                  "jsonName": null,
                  "type": "System.DateTime?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "IncludeExpired",
                  "jsonName": null,
                  "type": "System.Boolean",
                  "typeSimple": "boolean",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "MP.Application.Contracts.Notifications.NotificationListDto",
                "typeSimple": "MP.Application.Contracts.Notifications.NotificationListDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Application.Contracts.Notifications.INotificationAppService"
            },
            "GetAllAsyncByInput": {
              "uniqueName": "GetAllAsyncByInput",
              "name": "GetAllAsync",
              "httpMethod": "GET",
              "url": "api/app/notification/all",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "MP.Application.Contracts.Notifications.GetNotificationsInput, MP.Application.Contracts",
                  "type": "MP.Application.Contracts.Notifications.GetNotificationsInput",
                  "typeSimple": "MP.Application.Contracts.Notifications.GetNotificationsInput",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "IsRead",
                  "jsonName": null,
                  "type": "System.Boolean?",
                  "typeSimple": "boolean?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Severity",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Type",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "StartDate",
                  "jsonName": null,
                  "type": "System.DateTime?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "EndDate",
                  "jsonName": null,
                  "type": "System.DateTime?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "IncludeExpired",
                  "jsonName": null,
                  "type": "System.Boolean",
                  "typeSimple": "boolean",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "MP.Application.Contracts.Notifications.NotificationListDto",
                "typeSimple": "MP.Application.Contracts.Notifications.NotificationListDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Application.Contracts.Notifications.INotificationAppService"
            },
            "MarkAsReadAsyncByNotificationId": {
              "uniqueName": "MarkAsReadAsyncByNotificationId",
              "name": "MarkAsReadAsync",
              "httpMethod": "POST",
              "url": "api/app/notification/{notificationId}/mark-as-read",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "notificationId",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "notificationId",
                  "name": "notificationId",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Application.Contracts.Notifications.INotificationAppService"
            },
            "MarkMultipleAsReadAsyncByNotificationIds": {
              "uniqueName": "MarkMultipleAsReadAsyncByNotificationIds",
              "name": "MarkMultipleAsReadAsync",
              "httpMethod": "POST",
              "url": "api/app/notification/mark-multiple-as-read",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "notificationIds",
                  "typeAsString": "System.Collections.Generic.List`1[[System.Guid, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib",
                  "type": "System.Collections.Generic.List<System.Guid>",
                  "typeSimple": "[string]",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "notificationIds",
                  "name": "notificationIds",
                  "jsonName": null,
                  "type": "System.Collections.Generic.List<System.Guid>",
                  "typeSimple": "[string]",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Application.Contracts.Notifications.INotificationAppService"
            },
            "MarkAllAsReadAsync": {
              "uniqueName": "MarkAllAsReadAsync",
              "name": "MarkAllAsReadAsync",
              "httpMethod": "POST",
              "url": "api/app/notification/mark-all-as-read",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Application.Contracts.Notifications.INotificationAppService"
            },
            "GetStatsAsync": {
              "uniqueName": "GetStatsAsync",
              "name": "GetStatsAsync",
              "httpMethod": "GET",
              "url": "api/app/notification/stats",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "MP.Application.Contracts.Notifications.NotificationStatsDto",
                "typeSimple": "MP.Application.Contracts.Notifications.NotificationStatsDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Application.Contracts.Notifications.INotificationAppService"
            },
            "DeleteAsyncByNotificationId": {
              "uniqueName": "DeleteAsyncByNotificationId",
              "name": "DeleteAsync",
              "httpMethod": "DELETE",
              "url": "api/app/notification/{notificationId}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "notificationId",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "notificationId",
                  "name": "notificationId",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Application.Contracts.Notifications.INotificationAppService"
            },
            "DeleteExpiredNotificationsAsync": {
              "uniqueName": "DeleteExpiredNotificationsAsync",
              "name": "DeleteExpiredNotificationsAsync",
              "httpMethod": "DELETE",
              "url": "api/app/notification/expired",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "System.Int32",
                "typeSimple": "number"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Application.Contracts.Notifications.INotificationAppService"
            },
            "GetUnreadCountAsync": {
              "uniqueName": "GetUnreadCountAsync",
              "name": "GetUnreadCountAsync",
              "httpMethod": "GET",
              "url": "api/app/notification/unread-count",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "System.Int32",
                "typeSimple": "number"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Application.Contracts.Notifications.INotificationAppService"
            }
          }
        },
        "MP.Application.PaymentProviders.PaymentProviderSettingsAppService": {
          "controllerName": "PaymentProviderSettings",
          "controllerGroupName": "PaymentProviderSettings",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "MP.Application.PaymentProviders.PaymentProviderSettingsAppService",
          "interfaces": [
            {
              "type": "MP.Application.Contracts.PaymentProviders.IPaymentProviderSettingsAppService",
              "name": "IPaymentProviderSettingsAppService",
              "methods": [
                {
                  "name": "GetAsync",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "MP.Application.Contracts.PaymentProviders.PaymentProviderSettingsDto",
                    "typeSimple": "MP.Application.Contracts.PaymentProviders.PaymentProviderSettingsDto"
                  }
                },
                {
                  "name": "UpdateAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "MP.Application.Contracts.PaymentProviders.UpdatePaymentProviderSettingsDto, MP.Application.Contracts",
                      "type": "MP.Application.Contracts.PaymentProviders.UpdatePaymentProviderSettingsDto",
                      "typeSimple": "MP.Application.Contracts.PaymentProviders.UpdatePaymentProviderSettingsDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                }
              ]
            }
          ],
          "actions": {
            "GetAsync": {
              "uniqueName": "GetAsync",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/app/payment-provider-settings",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "MP.Application.Contracts.PaymentProviders.PaymentProviderSettingsDto",
                "typeSimple": "MP.Application.Contracts.PaymentProviders.PaymentProviderSettingsDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Application.Contracts.PaymentProviders.IPaymentProviderSettingsAppService"
            },
            "UpdateAsyncByInput": {
              "uniqueName": "UpdateAsyncByInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/app/payment-provider-settings",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "MP.Application.Contracts.PaymentProviders.UpdatePaymentProviderSettingsDto, MP.Application.Contracts",
                  "type": "MP.Application.Contracts.PaymentProviders.UpdatePaymentProviderSettingsDto",
                  "typeSimple": "MP.Application.Contracts.PaymentProviders.UpdatePaymentProviderSettingsDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "MP.Application.Contracts.PaymentProviders.UpdatePaymentProviderSettingsDto",
                  "typeSimple": "MP.Application.Contracts.PaymentProviders.UpdatePaymentProviderSettingsDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Application.Contracts.PaymentProviders.IPaymentProviderSettingsAppService"
            }
          }
        },
        "MP.Application.Payments.P24StatusCheckService": {
          "controllerName": "P24StatusCheck",
          "controllerGroupName": "P24StatusCheck",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "MP.Application.Payments.P24StatusCheckService",
          "interfaces": [],
          "actions": {
            "ScheduleStatusCheckAsyncByDelayMinutes": {
              "uniqueName": "ScheduleStatusCheckAsyncByDelayMinutes",
              "name": "ScheduleStatusCheckAsync",
              "httpMethod": "POST",
              "url": "api/app/p24Status-check/schedule-status-check",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "delayMinutes",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": true,
                  "defaultValue": 15
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "delayMinutes",
                  "name": "delayMinutes",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null,
              "implementFrom": "MP.Application.Payments.P24StatusCheckService"
            },
            "StartPeriodicStatusCheckAsync": {
              "uniqueName": "StartPeriodicStatusCheckAsync",
              "name": "StartPeriodicStatusCheckAsync",
              "httpMethod": "POST",
              "url": "api/app/p24Status-check/start-periodic-status-check",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null,
              "implementFrom": "MP.Application.Payments.P24StatusCheckService"
            }
          }
        },
        "MP.Application.Payments.PaymentProviderAppService": {
          "controllerName": "PaymentProvider",
          "controllerGroupName": "PaymentProvider",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "MP.Application.Payments.PaymentProviderAppService",
          "interfaces": [
            {
              "type": "MP.Application.Contracts.Payments.IPaymentProviderAppService",
              "name": "IPaymentProviderAppService",
              "methods": [
                {
                  "name": "GetAvailableProvidersAsync",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<MP.Application.Contracts.Payments.PaymentProviderDto>",
                    "typeSimple": "[MP.Application.Contracts.Payments.PaymentProviderDto]"
                  }
                },
                {
                  "name": "GetPaymentMethodsAsync",
                  "parametersOnMethod": [
                    {
                      "name": "providerId",
                      "typeAsString": "System.String, System.Private.CoreLib",
                      "type": "System.String",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "currency",
                      "typeAsString": "System.String, System.Private.CoreLib",
                      "type": "System.String",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<MP.Application.Contracts.Payments.PaymentMethodDto>",
                    "typeSimple": "[MP.Application.Contracts.Payments.PaymentMethodDto]"
                  }
                },
                {
                  "name": "CreatePaymentAsync",
                  "parametersOnMethod": [
                    {
                      "name": "request",
                      "typeAsString": "MP.Application.Contracts.Payments.CreatePaymentRequestDto, MP.Application.Contracts",
                      "type": "MP.Application.Contracts.Payments.CreatePaymentRequestDto",
                      "typeSimple": "MP.Application.Contracts.Payments.CreatePaymentRequestDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Application.Contracts.Payments.PaymentCreationResultDto",
                    "typeSimple": "MP.Application.Contracts.Payments.PaymentCreationResultDto"
                  }
                }
              ]
            }
          ],
          "actions": {
            "GetAvailableProvidersAsync": {
              "uniqueName": "GetAvailableProvidersAsync",
              "name": "GetAvailableProvidersAsync",
              "httpMethod": "GET",
              "url": "api/app/payment-provider/available-providers",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "System.Collections.Generic.List<MP.Application.Contracts.Payments.PaymentProviderDto>",
                "typeSimple": "[MP.Application.Contracts.Payments.PaymentProviderDto]"
              },
              "allowAnonymous": null,
              "implementFrom": "MP.Application.Contracts.Payments.IPaymentProviderAppService"
            },
            "GetPaymentMethodsAsyncByProviderIdAndCurrency": {
              "uniqueName": "GetPaymentMethodsAsyncByProviderIdAndCurrency",
              "name": "GetPaymentMethodsAsync",
              "httpMethod": "GET",
              "url": "api/app/payment-provider/payment-methods/{providerId}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "providerId",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "currency",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "providerId",
                  "name": "providerId",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "currency",
                  "name": "currency",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Collections.Generic.List<MP.Application.Contracts.Payments.PaymentMethodDto>",
                "typeSimple": "[MP.Application.Contracts.Payments.PaymentMethodDto]"
              },
              "allowAnonymous": null,
              "implementFrom": "MP.Application.Contracts.Payments.IPaymentProviderAppService"
            },
            "CreatePaymentAsyncByRequest": {
              "uniqueName": "CreatePaymentAsyncByRequest",
              "name": "CreatePaymentAsync",
              "httpMethod": "POST",
              "url": "api/app/payment-provider/payment",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "request",
                  "typeAsString": "MP.Application.Contracts.Payments.CreatePaymentRequestDto, MP.Application.Contracts",
                  "type": "MP.Application.Contracts.Payments.CreatePaymentRequestDto",
                  "typeSimple": "MP.Application.Contracts.Payments.CreatePaymentRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "request",
                  "name": "request",
                  "jsonName": null,
                  "type": "MP.Application.Contracts.Payments.CreatePaymentRequestDto",
                  "typeSimple": "MP.Application.Contracts.Payments.CreatePaymentRequestDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Application.Contracts.Payments.PaymentCreationResultDto",
                "typeSimple": "MP.Application.Contracts.Payments.PaymentCreationResultDto"
              },
              "allowAnonymous": null,
              "implementFrom": "MP.Application.Contracts.Payments.IPaymentProviderAppService"
            }
          }
        },
        "MP.Application.Payments.PaymentProviderAppServiceNew": {
          "controllerName": "PaymentProviderAppServiceNew",
          "controllerGroupName": "PaymentProviderAppServiceNew",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "MP.Application.Payments.PaymentProviderAppServiceNew",
          "interfaces": [
            {
              "type": "MP.Application.Contracts.Payments.IPaymentProviderAppService",
              "name": "IPaymentProviderAppService",
              "methods": [
                {
                  "name": "GetAvailableProvidersAsync",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<MP.Application.Contracts.Payments.PaymentProviderDto>",
                    "typeSimple": "[MP.Application.Contracts.Payments.PaymentProviderDto]"
                  }
                },
                {
                  "name": "GetPaymentMethodsAsync",
                  "parametersOnMethod": [
                    {
                      "name": "providerId",
                      "typeAsString": "System.String, System.Private.CoreLib",
                      "type": "System.String",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "currency",
                      "typeAsString": "System.String, System.Private.CoreLib",
                      "type": "System.String",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<MP.Application.Contracts.Payments.PaymentMethodDto>",
                    "typeSimple": "[MP.Application.Contracts.Payments.PaymentMethodDto]"
                  }
                },
                {
                  "name": "CreatePaymentAsync",
                  "parametersOnMethod": [
                    {
                      "name": "request",
                      "typeAsString": "MP.Application.Contracts.Payments.CreatePaymentRequestDto, MP.Application.Contracts",
                      "type": "MP.Application.Contracts.Payments.CreatePaymentRequestDto",
                      "typeSimple": "MP.Application.Contracts.Payments.CreatePaymentRequestDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Application.Contracts.Payments.PaymentCreationResultDto",
                    "typeSimple": "MP.Application.Contracts.Payments.PaymentCreationResultDto"
                  }
                }
              ]
            }
          ],
          "actions": {
            "GetAvailableProvidersAsync": {
              "uniqueName": "GetAvailableProvidersAsync",
              "name": "GetAvailableProvidersAsync",
              "httpMethod": "GET",
              "url": "api/app/payment-provider-app-service-new/available-providers",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "System.Collections.Generic.List<MP.Application.Contracts.Payments.PaymentProviderDto>",
                "typeSimple": "[MP.Application.Contracts.Payments.PaymentProviderDto]"
              },
              "allowAnonymous": null,
              "implementFrom": "MP.Application.Contracts.Payments.IPaymentProviderAppService"
            },
            "GetPaymentMethodsAsyncByProviderIdAndCurrency": {
              "uniqueName": "GetPaymentMethodsAsyncByProviderIdAndCurrency",
              "name": "GetPaymentMethodsAsync",
              "httpMethod": "GET",
              "url": "api/app/payment-provider-app-service-new/payment-methods/{providerId}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "providerId",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "currency",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "providerId",
                  "name": "providerId",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "currency",
                  "name": "currency",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Collections.Generic.List<MP.Application.Contracts.Payments.PaymentMethodDto>",
                "typeSimple": "[MP.Application.Contracts.Payments.PaymentMethodDto]"
              },
              "allowAnonymous": null,
              "implementFrom": "MP.Application.Contracts.Payments.IPaymentProviderAppService"
            },
            "CreatePaymentAsyncByRequest": {
              "uniqueName": "CreatePaymentAsyncByRequest",
              "name": "CreatePaymentAsync",
              "httpMethod": "POST",
              "url": "api/app/payment-provider-app-service-new/payment",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "request",
                  "typeAsString": "MP.Application.Contracts.Payments.CreatePaymentRequestDto, MP.Application.Contracts",
                  "type": "MP.Application.Contracts.Payments.CreatePaymentRequestDto",
                  "typeSimple": "MP.Application.Contracts.Payments.CreatePaymentRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "request",
                  "name": "request",
                  "jsonName": null,
                  "type": "MP.Application.Contracts.Payments.CreatePaymentRequestDto",
                  "typeSimple": "MP.Application.Contracts.Payments.CreatePaymentRequestDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Application.Contracts.Payments.PaymentCreationResultDto",
                "typeSimple": "MP.Application.Contracts.Payments.PaymentCreationResultDto"
              },
              "allowAnonymous": null,
              "implementFrom": "MP.Application.Contracts.Payments.IPaymentProviderAppService"
            }
          }
        },
        "MP.Application.Payments.PaymentTransactionAppService": {
          "controllerName": "PaymentTransaction",
          "controllerGroupName": "PaymentTransaction",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "MP.Application.Payments.PaymentTransactionAppService",
          "interfaces": [
            {
              "type": "MP.Payments.IPaymentTransactionAppService",
              "name": "IPaymentTransactionAppService",
              "methods": [
                {
                  "name": "GetPaymentSuccessViewModelAsync",
                  "parametersOnMethod": [
                    {
                      "name": "sessionId",
                      "typeAsString": "System.String, System.Private.CoreLib",
                      "type": "System.String",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Payments.PaymentSuccessViewModel",
                    "typeSimple": "MP.Payments.PaymentSuccessViewModel"
                  }
                },
                {
                  "name": "GetAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Payments.PaymentTransactionDto",
                    "typeSimple": "MP.Payments.PaymentTransactionDto"
                  }
                },
                {
                  "name": "GetListAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "MP.Payments.GetPaymentTransactionListDto, MP.Application.Contracts",
                      "type": "MP.Payments.GetPaymentTransactionListDto",
                      "typeSimple": "MP.Payments.GetPaymentTransactionListDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Payments.PaymentTransactionDto>",
                    "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Payments.PaymentTransactionDto>"
                  }
                },
                {
                  "name": "CreateAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "MP.Payments.CreatePaymentTransactionDto, MP.Application.Contracts",
                      "type": "MP.Payments.CreatePaymentTransactionDto",
                      "typeSimple": "MP.Payments.CreatePaymentTransactionDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Payments.PaymentTransactionDto",
                    "typeSimple": "MP.Payments.PaymentTransactionDto"
                  }
                },
                {
                  "name": "UpdateAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "input",
                      "typeAsString": "MP.Payments.UpdatePaymentTransactionDto, MP.Application.Contracts",
                      "type": "MP.Payments.UpdatePaymentTransactionDto",
                      "typeSimple": "MP.Payments.UpdatePaymentTransactionDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Payments.PaymentTransactionDto",
                    "typeSimple": "MP.Payments.PaymentTransactionDto"
                  }
                },
                {
                  "name": "DeleteAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                }
              ]
            }
          ],
          "actions": {
            "GetListAsyncByInput": {
              "uniqueName": "GetListAsyncByInput",
              "name": "GetListAsync",
              "httpMethod": "GET",
              "url": "api/app/payment-transaction",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "MP.Payments.GetPaymentTransactionListDto, MP.Application.Contracts",
                  "type": "MP.Payments.GetPaymentTransactionListDto",
                  "typeSimple": "MP.Payments.GetPaymentTransactionListDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Filter",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Status",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "PaymentMethod",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "StartDate",
                  "jsonName": null,
                  "type": "System.DateTime?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "EndDate",
                  "jsonName": null,
                  "type": "System.DateTime?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MinAmount",
                  "jsonName": null,
                  "type": "System.Decimal?",
                  "typeSimple": "number?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxAmount",
                  "jsonName": null,
                  "type": "System.Decimal?",
                  "typeSimple": "number?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "RentalId",
                  "jsonName": null,
                  "type": "System.Guid?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Email",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Payments.PaymentTransactionDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Payments.PaymentTransactionDto>"
              },
              "allowAnonymous": false,
              "implementFrom": "Volo.Abp.Application.Services.IReadOnlyAppService<MP.Payments.PaymentTransactionDto,MP.Payments.PaymentTransactionDto,System.Guid,MP.Payments.GetPaymentTransactionListDto>"
            },
            "GetPaymentSuccessViewModelAsyncBySessionId": {
              "uniqueName": "GetPaymentSuccessViewModelAsyncBySessionId",
              "name": "GetPaymentSuccessViewModelAsync",
              "httpMethod": "GET",
              "url": "api/app/payment-transaction/payment-success-view-model/{sessionId}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "sessionId",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "sessionId",
                  "name": "sessionId",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Payments.PaymentSuccessViewModel",
                "typeSimple": "MP.Payments.PaymentSuccessViewModel"
              },
              "allowAnonymous": true,
              "implementFrom": "MP.Payments.IPaymentTransactionAppService"
            },
            "GetAsyncById": {
              "uniqueName": "GetAsyncById",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/app/payment-transaction/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Payments.PaymentTransactionDto",
                "typeSimple": "MP.Payments.PaymentTransactionDto"
              },
              "allowAnonymous": false,
              "implementFrom": "Volo.Abp.Application.Services.IReadOnlyAppService<MP.Payments.PaymentTransactionDto,MP.Payments.PaymentTransactionDto,System.Guid,MP.Payments.GetPaymentTransactionListDto>"
            },
            "CreateAsyncByInput": {
              "uniqueName": "CreateAsyncByInput",
              "name": "CreateAsync",
              "httpMethod": "POST",
              "url": "api/app/payment-transaction",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "MP.Payments.CreatePaymentTransactionDto, MP.Application.Contracts",
                  "type": "MP.Payments.CreatePaymentTransactionDto",
                  "typeSimple": "MP.Payments.CreatePaymentTransactionDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "MP.Payments.CreatePaymentTransactionDto",
                  "typeSimple": "MP.Payments.CreatePaymentTransactionDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Payments.PaymentTransactionDto",
                "typeSimple": "MP.Payments.PaymentTransactionDto"
              },
              "allowAnonymous": false,
              "implementFrom": "Volo.Abp.Application.Services.ICreateAppService<MP.Payments.PaymentTransactionDto,MP.Payments.CreatePaymentTransactionDto>"
            },
            "UpdateAsyncByIdAndInput": {
              "uniqueName": "UpdateAsyncByIdAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/app/payment-transaction/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "MP.Payments.UpdatePaymentTransactionDto, MP.Application.Contracts",
                  "type": "MP.Payments.UpdatePaymentTransactionDto",
                  "typeSimple": "MP.Payments.UpdatePaymentTransactionDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "MP.Payments.UpdatePaymentTransactionDto",
                  "typeSimple": "MP.Payments.UpdatePaymentTransactionDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Payments.PaymentTransactionDto",
                "typeSimple": "MP.Payments.PaymentTransactionDto"
              },
              "allowAnonymous": false,
              "implementFrom": "Volo.Abp.Application.Services.IUpdateAppService<MP.Payments.PaymentTransactionDto,System.Guid,MP.Payments.UpdatePaymentTransactionDto>"
            },
            "DeleteAsyncById": {
              "uniqueName": "DeleteAsyncById",
              "name": "DeleteAsync",
              "httpMethod": "DELETE",
              "url": "api/app/payment-transaction/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": false,
              "implementFrom": "Volo.Abp.Application.Services.IDeleteAppService<System.Guid>"
            }
          }
        },
        "MP.Application.Payments.Przelewy24Service": {
          "controllerName": "Przelewy24",
          "controllerGroupName": "Przelewy24",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "MP.Application.Payments.Przelewy24Service",
          "interfaces": [
            {
              "type": "MP.Domain.Payments.IPrzelewy24Service",
              "name": "IPrzelewy24Service",
              "methods": [
                {
                  "name": "CreatePaymentAsync",
                  "parametersOnMethod": [
                    {
                      "name": "request",
                      "typeAsString": "MP.Domain.Payments.Przelewy24PaymentRequest, MP.Domain",
                      "type": "MP.Domain.Payments.Przelewy24PaymentRequest",
                      "typeSimple": "MP.Domain.Payments.Przelewy24PaymentRequest",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Domain.Payments.Przelewy24PaymentResult",
                    "typeSimple": "MP.Domain.Payments.Przelewy24PaymentResult"
                  }
                },
                {
                  "name": "GetPaymentStatusAsync",
                  "parametersOnMethod": [
                    {
                      "name": "transactionId",
                      "typeAsString": "System.String, System.Private.CoreLib",
                      "type": "System.String",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Domain.Payments.Przelewy24PaymentStatus",
                    "typeSimple": "MP.Domain.Payments.Przelewy24PaymentStatus"
                  }
                },
                {
                  "name": "VerifyPaymentAsync",
                  "parametersOnMethod": [
                    {
                      "name": "transactionId",
                      "typeAsString": "System.String, System.Private.CoreLib",
                      "type": "System.String",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "amount",
                      "typeAsString": "System.Decimal, System.Private.CoreLib",
                      "type": "System.Decimal",
                      "typeSimple": "number",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Boolean",
                    "typeSimple": "boolean"
                  }
                },
                {
                  "name": "GetPaymentMethodsAsync",
                  "parametersOnMethod": [
                    {
                      "name": "currency",
                      "typeAsString": "System.String, System.Private.CoreLib",
                      "type": "System.String",
                      "typeSimple": "string",
                      "isOptional": true,
                      "defaultValue": "PLN"
                    }
                  ],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<MP.Domain.Payments.Przelewy24PaymentMethod>",
                    "typeSimple": "[MP.Domain.Payments.Przelewy24PaymentMethod]"
                  }
                },
                {
                  "name": "GeneratePaymentUrl",
                  "parametersOnMethod": [
                    {
                      "name": "transactionId",
                      "typeAsString": "System.String, System.Private.CoreLib",
                      "type": "System.String",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.String",
                    "typeSimple": "string"
                  }
                }
              ]
            }
          ],
          "actions": {
            "CreatePaymentAsyncByRequest": {
              "uniqueName": "CreatePaymentAsyncByRequest",
              "name": "CreatePaymentAsync",
              "httpMethod": "POST",
              "url": "api/app/przelewy24/payment",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "request",
                  "typeAsString": "MP.Domain.Payments.Przelewy24PaymentRequest, MP.Domain",
                  "type": "MP.Domain.Payments.Przelewy24PaymentRequest",
                  "typeSimple": "MP.Domain.Payments.Przelewy24PaymentRequest",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "request",
                  "name": "request",
                  "jsonName": null,
                  "type": "MP.Domain.Payments.Przelewy24PaymentRequest",
                  "typeSimple": "MP.Domain.Payments.Przelewy24PaymentRequest",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Domain.Payments.Przelewy24PaymentResult",
                "typeSimple": "MP.Domain.Payments.Przelewy24PaymentResult"
              },
              "allowAnonymous": null,
              "implementFrom": "MP.Domain.Payments.IPrzelewy24Service"
            },
            "GetPaymentStatusAsyncByTransactionId": {
              "uniqueName": "GetPaymentStatusAsyncByTransactionId",
              "name": "GetPaymentStatusAsync",
              "httpMethod": "GET",
              "url": "api/app/przelewy24/payment-status/{transactionId}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "transactionId",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "transactionId",
                  "name": "transactionId",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Domain.Payments.Przelewy24PaymentStatus",
                "typeSimple": "MP.Domain.Payments.Przelewy24PaymentStatus"
              },
              "allowAnonymous": null,
              "implementFrom": "MP.Domain.Payments.IPrzelewy24Service"
            },
            "VerifyPaymentAsyncByTransactionIdAndExpectedAmount": {
              "uniqueName": "VerifyPaymentAsyncByTransactionIdAndExpectedAmount",
              "name": "VerifyPaymentAsync",
              "httpMethod": "POST",
              "url": "api/app/przelewy24/verify-payment/{transactionId}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "transactionId",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "expectedAmount",
                  "typeAsString": "System.Decimal, System.Private.CoreLib",
                  "type": "System.Decimal",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "transactionId",
                  "name": "transactionId",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "expectedAmount",
                  "name": "expectedAmount",
                  "jsonName": null,
                  "type": "System.Decimal",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Boolean",
                "typeSimple": "boolean"
              },
              "allowAnonymous": null,
              "implementFrom": "MP.Domain.Payments.IPrzelewy24Service"
            },
            "GetPaymentMethodsAsyncByCurrency": {
              "uniqueName": "GetPaymentMethodsAsyncByCurrency",
              "name": "GetPaymentMethodsAsync",
              "httpMethod": "GET",
              "url": "api/app/przelewy24/payment-methods",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "currency",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": true,
                  "defaultValue": "PLN"
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "currency",
                  "name": "currency",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Collections.Generic.List<MP.Domain.Payments.Przelewy24PaymentMethod>",
                "typeSimple": "[MP.Domain.Payments.Przelewy24PaymentMethod]"
              },
              "allowAnonymous": null,
              "implementFrom": "MP.Domain.Payments.IPrzelewy24Service"
            },
            "GeneratePaymentUrlByTransactionId": {
              "uniqueName": "GeneratePaymentUrlByTransactionId",
              "name": "GeneratePaymentUrl",
              "httpMethod": "POST",
              "url": "api/app/przelewy24/generate-payment-url/{transactionId}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "transactionId",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "transactionId",
                  "name": "transactionId",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.String",
                "typeSimple": "string"
              },
              "allowAnonymous": null,
              "implementFrom": "MP.Domain.Payments.IPrzelewy24Service"
            }
          }
        },
        "MP.Application.Rentals.LabelGeneratorService": {
          "controllerName": "LabelGenerator",
          "controllerGroupName": "LabelGenerator",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "MP.Application.Rentals.LabelGeneratorService",
          "interfaces": [
            {
              "type": "MP.Application.Contracts.Rentals.ILabelGeneratorService",
              "name": "ILabelGeneratorService",
              "methods": [
                {
                  "name": "GenerateLabelPdfAsync",
                  "parametersOnMethod": [
                    {
                      "name": "rentalItemId",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Byte[]",
                    "typeSimple": "[number]"
                  }
                },
                {
                  "name": "GenerateMultipleLabelsPdfAsync",
                  "parametersOnMethod": [
                    {
                      "name": "rentalItemIds",
                      "typeAsString": "System.Guid[], System.Private.CoreLib",
                      "type": "System.Guid[]",
                      "typeSimple": "[string]",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Byte[]",
                    "typeSimple": "[number]"
                  }
                }
              ]
            }
          ],
          "actions": {
            "GenerateLabelPdfAsyncByItemSheetItemId": {
              "uniqueName": "GenerateLabelPdfAsyncByItemSheetItemId",
              "name": "GenerateLabelPdfAsync",
              "httpMethod": "POST",
              "url": "api/app/label-generator/generate-label-pdf/{itemSheetItemId}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "itemSheetItemId",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "itemSheetItemId",
                  "name": "itemSheetItemId",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Byte[]",
                "typeSimple": "[number]"
              },
              "allowAnonymous": null,
              "implementFrom": "MP.Application.Contracts.Rentals.ILabelGeneratorService"
            },
            "GenerateMultipleLabelsPdfAsyncByItemSheetItemIds": {
              "uniqueName": "GenerateMultipleLabelsPdfAsyncByItemSheetItemIds",
              "name": "GenerateMultipleLabelsPdfAsync",
              "httpMethod": "POST",
              "url": "api/app/label-generator/generate-multiple-labels-pdf",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "itemSheetItemIds",
                  "typeAsString": "System.Guid[], System.Private.CoreLib",
                  "type": "System.Guid[]",
                  "typeSimple": "[string]",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "itemSheetItemIds",
                  "name": "itemSheetItemIds",
                  "jsonName": null,
                  "type": "System.Guid[]",
                  "typeSimple": "[string]",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Byte[]",
                "typeSimple": "[number]"
              },
              "allowAnonymous": null,
              "implementFrom": "MP.Application.Contracts.Rentals.ILabelGeneratorService"
            }
          }
        },
        "MP.Application.Rentals.RentalPaymentService": {
          "controllerName": "RentalPayment",
          "controllerGroupName": "RentalPayment",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "MP.Application.Rentals.RentalPaymentService",
          "interfaces": [],
          "actions": {
            "InitiatePaymentAsyncByRentalId": {
              "uniqueName": "InitiatePaymentAsyncByRentalId",
              "name": "InitiatePaymentAsync",
              "httpMethod": "POST",
              "url": "api/app/rental-payment/initiate-payment/{rentalId}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "rentalId",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "rentalId",
                  "name": "rentalId",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.String",
                "typeSimple": "string"
              },
              "allowAnonymous": null,
              "implementFrom": "MP.Application.Rentals.RentalPaymentService"
            },
            "HandlePaymentCallbackAsyncByTransactionIdAndIsSuccess": {
              "uniqueName": "HandlePaymentCallbackAsyncByTransactionIdAndIsSuccess",
              "name": "HandlePaymentCallbackAsync",
              "httpMethod": "POST",
              "url": "api/app/rental-payment/handle-payment-callback/{transactionId}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "transactionId",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "isSuccess",
                  "typeAsString": "System.Boolean, System.Private.CoreLib",
                  "type": "System.Boolean",
                  "typeSimple": "boolean",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "transactionId",
                  "name": "transactionId",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "isSuccess",
                  "name": "isSuccess",
                  "jsonName": null,
                  "type": "System.Boolean",
                  "typeSimple": "boolean",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Boolean",
                "typeSimple": "boolean"
              },
              "allowAnonymous": null,
              "implementFrom": "MP.Application.Rentals.RentalPaymentService"
            },
            "GetPaymentStatusAsyncByRentalId": {
              "uniqueName": "GetPaymentStatusAsyncByRentalId",
              "name": "GetPaymentStatusAsync",
              "httpMethod": "GET",
              "url": "api/app/rental-payment/payment-status/{rentalId}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "rentalId",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "rentalId",
                  "name": "rentalId",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Domain.Rentals.PaymentStatus",
                "typeSimple": "enum"
              },
              "allowAnonymous": null,
              "implementFrom": "MP.Application.Rentals.RentalPaymentService"
            }
          }
        },
        "MP.Application.Sellers.ItemCheckoutAppService": {
          "controllerName": "ItemCheckout",
          "controllerGroupName": "ItemCheckout",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "MP.Application.Sellers.ItemCheckoutAppService",
          "interfaces": [
            {
              "type": "MP.Application.Contracts.Sellers.IItemCheckoutAppService",
              "name": "IItemCheckoutAppService",
              "methods": [
                {
                  "name": "FindItemByBarcodeAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "MP.Application.Contracts.Sellers.FindItemByBarcodeDto, MP.Application.Contracts",
                      "type": "MP.Application.Contracts.Sellers.FindItemByBarcodeDto",
                      "typeSimple": "MP.Application.Contracts.Sellers.FindItemByBarcodeDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Application.Contracts.Sellers.ItemForCheckoutDto",
                    "typeSimple": "MP.Application.Contracts.Sellers.ItemForCheckoutDto"
                  }
                },
                {
                  "name": "GetAvailablePaymentMethodsAsync",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "MP.Application.Contracts.Sellers.AvailablePaymentMethodsDto",
                    "typeSimple": "MP.Application.Contracts.Sellers.AvailablePaymentMethodsDto"
                  }
                },
                {
                  "name": "CheckoutItemAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "MP.Application.Contracts.Sellers.CheckoutItemDto, MP.Application.Contracts",
                      "type": "MP.Application.Contracts.Sellers.CheckoutItemDto",
                      "typeSimple": "MP.Application.Contracts.Sellers.CheckoutItemDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Application.Contracts.Sellers.CheckoutResultDto",
                    "typeSimple": "MP.Application.Contracts.Sellers.CheckoutResultDto"
                  }
                },
                {
                  "name": "CheckTerminalStatusAsync",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "System.Boolean",
                    "typeSimple": "boolean"
                  }
                }
              ]
            }
          ],
          "actions": {
            "FindItemByBarcodeAsyncByInput": {
              "uniqueName": "FindItemByBarcodeAsyncByInput",
              "name": "FindItemByBarcodeAsync",
              "httpMethod": "POST",
              "url": "api/app/item-checkout/find-item-by-barcode",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "MP.Application.Contracts.Sellers.FindItemByBarcodeDto, MP.Application.Contracts",
                  "type": "MP.Application.Contracts.Sellers.FindItemByBarcodeDto",
                  "typeSimple": "MP.Application.Contracts.Sellers.FindItemByBarcodeDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "MP.Application.Contracts.Sellers.FindItemByBarcodeDto",
                  "typeSimple": "MP.Application.Contracts.Sellers.FindItemByBarcodeDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Application.Contracts.Sellers.ItemForCheckoutDto",
                "typeSimple": "MP.Application.Contracts.Sellers.ItemForCheckoutDto"
              },
              "allowAnonymous": null,
              "implementFrom": "MP.Application.Contracts.Sellers.IItemCheckoutAppService"
            },
            "GetAvailablePaymentMethodsAsync": {
              "uniqueName": "GetAvailablePaymentMethodsAsync",
              "name": "GetAvailablePaymentMethodsAsync",
              "httpMethod": "GET",
              "url": "api/app/item-checkout/available-payment-methods",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "MP.Application.Contracts.Sellers.AvailablePaymentMethodsDto",
                "typeSimple": "MP.Application.Contracts.Sellers.AvailablePaymentMethodsDto"
              },
              "allowAnonymous": null,
              "implementFrom": "MP.Application.Contracts.Sellers.IItemCheckoutAppService"
            },
            "CheckoutItemAsyncByInput": {
              "uniqueName": "CheckoutItemAsyncByInput",
              "name": "CheckoutItemAsync",
              "httpMethod": "POST",
              "url": "api/app/item-checkout/checkout-item",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "MP.Application.Contracts.Sellers.CheckoutItemDto, MP.Application.Contracts",
                  "type": "MP.Application.Contracts.Sellers.CheckoutItemDto",
                  "typeSimple": "MP.Application.Contracts.Sellers.CheckoutItemDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "MP.Application.Contracts.Sellers.CheckoutItemDto",
                  "typeSimple": "MP.Application.Contracts.Sellers.CheckoutItemDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Application.Contracts.Sellers.CheckoutResultDto",
                "typeSimple": "MP.Application.Contracts.Sellers.CheckoutResultDto"
              },
              "allowAnonymous": null,
              "implementFrom": "MP.Application.Contracts.Sellers.IItemCheckoutAppService"
            },
            "CheckTerminalStatusAsync": {
              "uniqueName": "CheckTerminalStatusAsync",
              "name": "CheckTerminalStatusAsync",
              "httpMethod": "POST",
              "url": "api/app/item-checkout/check-terminal-status",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "System.Boolean",
                "typeSimple": "boolean"
              },
              "allowAnonymous": null,
              "implementFrom": "MP.Application.Contracts.Sellers.IItemCheckoutAppService"
            }
          }
        },
        "MP.Application.Terminals.TerminalSettingsAppService": {
          "controllerName": "TerminalSettings",
          "controllerGroupName": "TerminalSettings",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "MP.Application.Terminals.TerminalSettingsAppService",
          "interfaces": [
            {
              "type": "MP.Application.Contracts.Terminals.ITerminalSettingsAppService",
              "name": "ITerminalSettingsAppService",
              "methods": [
                {
                  "name": "GetCurrentTenantSettingsAsync",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "MP.Application.Contracts.Terminals.TerminalSettingsDto",
                    "typeSimple": "MP.Application.Contracts.Terminals.TerminalSettingsDto"
                  }
                },
                {
                  "name": "CreateAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "MP.Application.Contracts.Terminals.CreateTerminalSettingsDto, MP.Application.Contracts",
                      "type": "MP.Application.Contracts.Terminals.CreateTerminalSettingsDto",
                      "typeSimple": "MP.Application.Contracts.Terminals.CreateTerminalSettingsDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Application.Contracts.Terminals.TerminalSettingsDto",
                    "typeSimple": "MP.Application.Contracts.Terminals.TerminalSettingsDto"
                  }
                },
                {
                  "name": "UpdateAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "input",
                      "typeAsString": "MP.Application.Contracts.Terminals.UpdateTerminalSettingsDto, MP.Application.Contracts",
                      "type": "MP.Application.Contracts.Terminals.UpdateTerminalSettingsDto",
                      "typeSimple": "MP.Application.Contracts.Terminals.UpdateTerminalSettingsDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Application.Contracts.Terminals.TerminalSettingsDto",
                    "typeSimple": "MP.Application.Contracts.Terminals.TerminalSettingsDto"
                  }
                },
                {
                  "name": "DeleteAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                },
                {
                  "name": "GetAvailableProvidersAsync",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<MP.Application.Contracts.Terminals.TerminalProviderInfoDto>",
                    "typeSimple": "[MP.Application.Contracts.Terminals.TerminalProviderInfoDto]"
                  }
                }
              ]
            }
          ],
          "actions": {
            "GetCurrentTenantSettingsAsync": {
              "uniqueName": "GetCurrentTenantSettingsAsync",
              "name": "GetCurrentTenantSettingsAsync",
              "httpMethod": "GET",
              "url": "api/app/terminal-settings/current-tenant-settings",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "MP.Application.Contracts.Terminals.TerminalSettingsDto",
                "typeSimple": "MP.Application.Contracts.Terminals.TerminalSettingsDto"
              },
              "allowAnonymous": null,
              "implementFrom": "MP.Application.Contracts.Terminals.ITerminalSettingsAppService"
            },
            "CreateAsyncByInput": {
              "uniqueName": "CreateAsyncByInput",
              "name": "CreateAsync",
              "httpMethod": "POST",
              "url": "api/app/terminal-settings",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "MP.Application.Contracts.Terminals.CreateTerminalSettingsDto, MP.Application.Contracts",
                  "type": "MP.Application.Contracts.Terminals.CreateTerminalSettingsDto",
                  "typeSimple": "MP.Application.Contracts.Terminals.CreateTerminalSettingsDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "MP.Application.Contracts.Terminals.CreateTerminalSettingsDto",
                  "typeSimple": "MP.Application.Contracts.Terminals.CreateTerminalSettingsDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Application.Contracts.Terminals.TerminalSettingsDto",
                "typeSimple": "MP.Application.Contracts.Terminals.TerminalSettingsDto"
              },
              "allowAnonymous": null,
              "implementFrom": "MP.Application.Contracts.Terminals.ITerminalSettingsAppService"
            },
            "UpdateAsyncByIdAndInput": {
              "uniqueName": "UpdateAsyncByIdAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/app/terminal-settings/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "MP.Application.Contracts.Terminals.UpdateTerminalSettingsDto, MP.Application.Contracts",
                  "type": "MP.Application.Contracts.Terminals.UpdateTerminalSettingsDto",
                  "typeSimple": "MP.Application.Contracts.Terminals.UpdateTerminalSettingsDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "MP.Application.Contracts.Terminals.UpdateTerminalSettingsDto",
                  "typeSimple": "MP.Application.Contracts.Terminals.UpdateTerminalSettingsDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Application.Contracts.Terminals.TerminalSettingsDto",
                "typeSimple": "MP.Application.Contracts.Terminals.TerminalSettingsDto"
              },
              "allowAnonymous": null,
              "implementFrom": "MP.Application.Contracts.Terminals.ITerminalSettingsAppService"
            },
            "DeleteAsyncById": {
              "uniqueName": "DeleteAsyncById",
              "name": "DeleteAsync",
              "httpMethod": "DELETE",
              "url": "api/app/terminal-settings/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null,
              "implementFrom": "MP.Application.Contracts.Terminals.ITerminalSettingsAppService"
            },
            "GetAvailableProvidersAsync": {
              "uniqueName": "GetAvailableProvidersAsync",
              "name": "GetAvailableProvidersAsync",
              "httpMethod": "GET",
              "url": "api/app/terminal-settings/available-providers",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "System.Collections.Generic.List<MP.Application.Contracts.Terminals.TerminalProviderInfoDto>",
                "typeSimple": "[MP.Application.Contracts.Terminals.TerminalProviderInfoDto]"
              },
              "allowAnonymous": null,
              "implementFrom": "MP.Application.Contracts.Terminals.ITerminalSettingsAppService"
            }
          }
        },
        "MP.Booths.BoothAppService": {
          "controllerName": "Booth",
          "controllerGroupName": "Booth",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "MP.Booths.BoothAppService",
          "interfaces": [
            {
              "type": "MP.Booths.IBoothAppService",
              "name": "IBoothAppService",
              "methods": [
                {
                  "name": "GetAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Booths.BoothDto",
                    "typeSimple": "MP.Booths.BoothDto"
                  }
                },
                {
                  "name": "GetListAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "MP.Booths.GetBoothListDto, MP.Application.Contracts",
                      "type": "MP.Booths.GetBoothListDto",
                      "typeSimple": "MP.Booths.GetBoothListDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Booths.BoothListDto>",
                    "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Booths.BoothListDto>"
                  }
                },
                {
                  "name": "CreateAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "MP.Booths.CreateBoothDto, MP.Application.Contracts",
                      "type": "MP.Booths.CreateBoothDto",
                      "typeSimple": "MP.Booths.CreateBoothDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Booths.BoothDto",
                    "typeSimple": "MP.Booths.BoothDto"
                  }
                },
                {
                  "name": "UpdateAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "input",
                      "typeAsString": "MP.Booths.UpdateBoothDto, MP.Application.Contracts",
                      "type": "MP.Booths.UpdateBoothDto",
                      "typeSimple": "MP.Booths.UpdateBoothDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Booths.BoothDto",
                    "typeSimple": "MP.Booths.BoothDto"
                  }
                },
                {
                  "name": "DeleteAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                },
                {
                  "name": "GetAvailableBoothsAsync",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<MP.Booths.BoothDto>",
                    "typeSimple": "[MP.Booths.BoothDto]"
                  }
                },
                {
                  "name": "ChangeStatusAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "newStatus",
                      "typeAsString": "MP.Domain.Booths.BoothStatus, MP.Domain.Shared",
                      "type": "MP.Domain.Booths.BoothStatus",
                      "typeSimple": "enum",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Booths.BoothDto",
                    "typeSimple": "MP.Booths.BoothDto"
                  }
                },
                {
                  "name": "GetMyBoothsAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "MP.Booths.GetBoothListDto, MP.Application.Contracts",
                      "type": "MP.Booths.GetBoothListDto",
                      "typeSimple": "MP.Booths.GetBoothListDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Booths.BoothListDto>",
                    "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Booths.BoothListDto>"
                  }
                },
                {
                  "name": "CreateManualReservationAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "MP.Booths.CreateManualReservationDto, MP.Application.Contracts",
                      "type": "MP.Booths.CreateManualReservationDto",
                      "typeSimple": "MP.Booths.CreateManualReservationDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Booths.BoothDto",
                    "typeSimple": "MP.Booths.BoothDto"
                  }
                }
              ]
            }
          ],
          "actions": {
            "GetAsyncById": {
              "uniqueName": "GetAsyncById",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/app/booth/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Booths.BoothDto",
                "typeSimple": "MP.Booths.BoothDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Booths.IBoothAppService"
            },
            "GetListAsyncByInput": {
              "uniqueName": "GetListAsyncByInput",
              "name": "GetListAsync",
              "httpMethod": "GET",
              "url": "api/app/booth",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "MP.Booths.GetBoothListDto, MP.Application.Contracts",
                  "type": "MP.Booths.GetBoothListDto",
                  "typeSimple": "MP.Booths.GetBoothListDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Filter",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Status",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Booths.BoothListDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Booths.BoothListDto>"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Booths.IBoothAppService"
            },
            "CreateAsyncByInput": {
              "uniqueName": "CreateAsyncByInput",
              "name": "CreateAsync",
              "httpMethod": "POST",
              "url": "api/app/booth",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "MP.Booths.CreateBoothDto, MP.Application.Contracts",
                  "type": "MP.Booths.CreateBoothDto",
                  "typeSimple": "MP.Booths.CreateBoothDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "MP.Booths.CreateBoothDto",
                  "typeSimple": "MP.Booths.CreateBoothDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Booths.BoothDto",
                "typeSimple": "MP.Booths.BoothDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Booths.IBoothAppService"
            },
            "UpdateAsyncByIdAndInput": {
              "uniqueName": "UpdateAsyncByIdAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/app/booth/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "MP.Booths.UpdateBoothDto, MP.Application.Contracts",
                  "type": "MP.Booths.UpdateBoothDto",
                  "typeSimple": "MP.Booths.UpdateBoothDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "MP.Booths.UpdateBoothDto",
                  "typeSimple": "MP.Booths.UpdateBoothDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Booths.BoothDto",
                "typeSimple": "MP.Booths.BoothDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Booths.IBoothAppService"
            },
            "DeleteAsyncById": {
              "uniqueName": "DeleteAsyncById",
              "name": "DeleteAsync",
              "httpMethod": "DELETE",
              "url": "api/app/booth/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Booths.IBoothAppService"
            },
            "GetAvailableBoothsAsync": {
              "uniqueName": "GetAvailableBoothsAsync",
              "name": "GetAvailableBoothsAsync",
              "httpMethod": "GET",
              "url": "available",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "System.Collections.Generic.List<MP.Booths.BoothDto>",
                "typeSimple": "[MP.Booths.BoothDto]"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Booths.IBoothAppService"
            },
            "ChangeStatusAsyncByIdAndNewStatus": {
              "uniqueName": "ChangeStatusAsyncByIdAndNewStatus",
              "name": "ChangeStatusAsync",
              "httpMethod": "POST",
              "url": "{id}/change-status",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "newStatus",
                  "typeAsString": "MP.Domain.Booths.BoothStatus, MP.Domain.Shared",
                  "type": "MP.Domain.Booths.BoothStatus",
                  "typeSimple": "enum",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "newStatus",
                  "name": "newStatus",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Booths.BoothDto",
                "typeSimple": "MP.Booths.BoothDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Booths.IBoothAppService"
            },
            "GetMyBoothsAsyncByInput": {
              "uniqueName": "GetMyBoothsAsyncByInput",
              "name": "GetMyBoothsAsync",
              "httpMethod": "GET",
              "url": "my-booths",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "MP.Booths.GetBoothListDto, MP.Application.Contracts",
                  "type": "MP.Booths.GetBoothListDto",
                  "typeSimple": "MP.Booths.GetBoothListDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Filter",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Query",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Status",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Query",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Query",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Query",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Query",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Booths.BoothListDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Booths.BoothListDto>"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Booths.IBoothAppService"
            },
            "CreateManualReservationAsyncByInput": {
              "uniqueName": "CreateManualReservationAsyncByInput",
              "name": "CreateManualReservationAsync",
              "httpMethod": "POST",
              "url": "api/app/booth/manual-reservation",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "MP.Booths.CreateManualReservationDto, MP.Application.Contracts",
                  "type": "MP.Booths.CreateManualReservationDto",
                  "typeSimple": "MP.Booths.CreateManualReservationDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "MP.Booths.CreateManualReservationDto",
                  "typeSimple": "MP.Booths.CreateManualReservationDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Booths.BoothDto",
                "typeSimple": "MP.Booths.BoothDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Booths.IBoothAppService"
            }
          }
        },
        "MP.Booths.BoothSettingsAppService": {
          "controllerName": "BoothSettings",
          "controllerGroupName": "BoothSettings",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "MP.Booths.BoothSettingsAppService",
          "interfaces": [
            {
              "type": "MP.Booths.IBoothSettingsAppService",
              "name": "IBoothSettingsAppService",
              "methods": [
                {
                  "name": "GetAsync",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "MP.Booths.BoothSettingsDto",
                    "typeSimple": "MP.Booths.BoothSettingsDto"
                  }
                },
                {
                  "name": "UpdateAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "MP.Booths.BoothSettingsDto, MP.Application.Contracts",
                      "type": "MP.Booths.BoothSettingsDto",
                      "typeSimple": "MP.Booths.BoothSettingsDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                }
              ]
            }
          ],
          "actions": {
            "GetAsync": {
              "uniqueName": "GetAsync",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/app/booth-settings",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "MP.Booths.BoothSettingsDto",
                "typeSimple": "MP.Booths.BoothSettingsDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Booths.IBoothSettingsAppService"
            },
            "UpdateAsyncByInput": {
              "uniqueName": "UpdateAsyncByInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/app/booth-settings",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "MP.Booths.BoothSettingsDto, MP.Application.Contracts",
                  "type": "MP.Booths.BoothSettingsDto",
                  "typeSimple": "MP.Booths.BoothSettingsDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "MP.Booths.BoothSettingsDto",
                  "typeSimple": "MP.Booths.BoothSettingsDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Booths.IBoothSettingsAppService"
            }
          }
        },
        "MP.Carts.CartAppService": {
          "controllerName": "Cart",
          "controllerGroupName": "Cart",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "MP.Carts.CartAppService",
          "interfaces": [
            {
              "type": "MP.Carts.ICartAppService",
              "name": "ICartAppService",
              "methods": [
                {
                  "name": "GetMyCartAsync",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "MP.Carts.CartDto",
                    "typeSimple": "MP.Carts.CartDto"
                  }
                },
                {
                  "name": "AddItemAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "MP.Carts.AddToCartDto, MP.Application.Contracts",
                      "type": "MP.Carts.AddToCartDto",
                      "typeSimple": "MP.Carts.AddToCartDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Carts.CartDto",
                    "typeSimple": "MP.Carts.CartDto"
                  }
                },
                {
                  "name": "UpdateItemAsync",
                  "parametersOnMethod": [
                    {
                      "name": "itemId",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "input",
                      "typeAsString": "MP.Carts.UpdateCartItemDto, MP.Application.Contracts",
                      "type": "MP.Carts.UpdateCartItemDto",
                      "typeSimple": "MP.Carts.UpdateCartItemDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Carts.CartDto",
                    "typeSimple": "MP.Carts.CartDto"
                  }
                },
                {
                  "name": "RemoveItemAsync",
                  "parametersOnMethod": [
                    {
                      "name": "itemId",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Carts.CartDto",
                    "typeSimple": "MP.Carts.CartDto"
                  }
                },
                {
                  "name": "ClearCartAsync",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "MP.Carts.CartDto",
                    "typeSimple": "MP.Carts.CartDto"
                  }
                },
                {
                  "name": "CheckoutAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "MP.Carts.CheckoutCartDto, MP.Application.Contracts",
                      "type": "MP.Carts.CheckoutCartDto",
                      "typeSimple": "MP.Carts.CheckoutCartDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Carts.CheckoutResultDto",
                    "typeSimple": "MP.Carts.CheckoutResultDto"
                  }
                }
              ]
            }
          ],
          "actions": {
            "GetMyCartAsync": {
              "uniqueName": "GetMyCartAsync",
              "name": "GetMyCartAsync",
              "httpMethod": "GET",
              "url": "api/app/cart/my-cart",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "MP.Carts.CartDto",
                "typeSimple": "MP.Carts.CartDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Carts.ICartAppService"
            },
            "AddItemAsyncByInput": {
              "uniqueName": "AddItemAsyncByInput",
              "name": "AddItemAsync",
              "httpMethod": "POST",
              "url": "api/app/cart/item",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "MP.Carts.AddToCartDto, MP.Application.Contracts",
                  "type": "MP.Carts.AddToCartDto",
                  "typeSimple": "MP.Carts.AddToCartDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "MP.Carts.AddToCartDto",
                  "typeSimple": "MP.Carts.AddToCartDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Carts.CartDto",
                "typeSimple": "MP.Carts.CartDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Carts.ICartAppService"
            },
            "UpdateItemAsyncByItemIdAndInput": {
              "uniqueName": "UpdateItemAsyncByItemIdAndInput",
              "name": "UpdateItemAsync",
              "httpMethod": "PUT",
              "url": "api/app/cart/item/{itemId}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "itemId",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "MP.Carts.UpdateCartItemDto, MP.Application.Contracts",
                  "type": "MP.Carts.UpdateCartItemDto",
                  "typeSimple": "MP.Carts.UpdateCartItemDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "itemId",
                  "name": "itemId",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "MP.Carts.UpdateCartItemDto",
                  "typeSimple": "MP.Carts.UpdateCartItemDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Carts.CartDto",
                "typeSimple": "MP.Carts.CartDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Carts.ICartAppService"
            },
            "RemoveItemAsyncByItemId": {
              "uniqueName": "RemoveItemAsyncByItemId",
              "name": "RemoveItemAsync",
              "httpMethod": "DELETE",
              "url": "api/app/cart/item/{itemId}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "itemId",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "itemId",
                  "name": "itemId",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Carts.CartDto",
                "typeSimple": "MP.Carts.CartDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Carts.ICartAppService"
            },
            "ClearCartAsync": {
              "uniqueName": "ClearCartAsync",
              "name": "ClearCartAsync",
              "httpMethod": "POST",
              "url": "api/app/cart/clear-cart",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "MP.Carts.CartDto",
                "typeSimple": "MP.Carts.CartDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Carts.ICartAppService"
            },
            "CheckoutAsyncByInput": {
              "uniqueName": "CheckoutAsyncByInput",
              "name": "CheckoutAsync",
              "httpMethod": "POST",
              "url": "api/app/cart/checkout",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "MP.Carts.CheckoutCartDto, MP.Application.Contracts",
                  "type": "MP.Carts.CheckoutCartDto",
                  "typeSimple": "MP.Carts.CheckoutCartDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "MP.Carts.CheckoutCartDto",
                  "typeSimple": "MP.Carts.CheckoutCartDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Carts.CheckoutResultDto",
                "typeSimple": "MP.Carts.CheckoutResultDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Carts.ICartAppService"
            }
          }
        },
        "MP.Controllers.LabelController": {
          "controllerName": "Label",
          "controllerGroupName": "Label",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "MP.Controllers.LabelController",
          "interfaces": [],
          "actions": {
            "GenerateItemLabelAsyncByRentalItemId": {
              "uniqueName": "GenerateItemLabelAsyncByRentalItemId",
              "name": "GenerateItemLabelAsync",
              "httpMethod": "GET",
              "url": "api/app/labels/rental-item/{rentalItemId}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "rentalItemId",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "rentalItemId",
                  "name": "rentalItemId",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Microsoft.AspNetCore.Mvc.IActionResult",
                "typeSimple": "Microsoft.AspNetCore.Mvc.IActionResult"
              },
              "allowAnonymous": null,
              "implementFrom": "MP.Controllers.LabelController"
            },
            "GenerateMultipleLabelsAsyncByRentalItemIds": {
              "uniqueName": "GenerateMultipleLabelsAsyncByRentalItemIds",
              "name": "GenerateMultipleLabelsAsync",
              "httpMethod": "POST",
              "url": "api/app/labels/multiple",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "rentalItemIds",
                  "typeAsString": "System.Guid[], System.Private.CoreLib",
                  "type": "System.Guid[]",
                  "typeSimple": "[string]",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "rentalItemIds",
                  "name": "rentalItemIds",
                  "jsonName": null,
                  "type": "System.Guid[]",
                  "typeSimple": "[string]",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Microsoft.AspNetCore.Mvc.IActionResult",
                "typeSimple": "Microsoft.AspNetCore.Mvc.IActionResult"
              },
              "allowAnonymous": null,
              "implementFrom": "MP.Controllers.LabelController"
            }
          }
        },
        "MP.Controllers.PaymentController": {
          "controllerName": "Payment",
          "controllerGroupName": null,
          "isRemoteService": false,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "MP.Controllers.PaymentController",
          "interfaces": [],
          "actions": {
            "GetPaymentProvidersAsync": {
              "uniqueName": "GetPaymentProvidersAsync",
              "name": "GetPaymentProvidersAsync",
              "httpMethod": "GET",
              "url": "api/app/payments/providers",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "System.Collections.Generic.List<MP.Application.Contracts.Payments.PaymentProviderDto>",
                "typeSimple": "[MP.Application.Contracts.Payments.PaymentProviderDto]"
              },
              "allowAnonymous": null,
              "implementFrom": "MP.Controllers.PaymentController"
            },
            "GetPaymentMethodsAsyncByProviderIdAndCurrency": {
              "uniqueName": "GetPaymentMethodsAsyncByProviderIdAndCurrency",
              "name": "GetPaymentMethodsAsync",
              "httpMethod": "GET",
              "url": "api/app/payments/providers/{providerId}/methods",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "providerId",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "currency",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": true,
                  "defaultValue": "PLN"
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "providerId",
                  "name": "providerId",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "currency",
                  "name": "currency",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Query",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Collections.Generic.List<MP.Application.Contracts.Payments.PaymentMethodDto>",
                "typeSimple": "[MP.Application.Contracts.Payments.PaymentMethodDto]"
              },
              "allowAnonymous": null,
              "implementFrom": "MP.Controllers.PaymentController"
            },
            "CreatePaymentAsyncByRequest": {
              "uniqueName": "CreatePaymentAsyncByRequest",
              "name": "CreatePaymentAsync",
              "httpMethod": "POST",
              "url": "api/app/payments/create",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "request",
                  "typeAsString": "MP.Application.Contracts.Payments.CreatePaymentRequestDto, MP.Application.Contracts",
                  "type": "MP.Application.Contracts.Payments.CreatePaymentRequestDto",
                  "typeSimple": "MP.Application.Contracts.Payments.CreatePaymentRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "request",
                  "name": "Amount",
                  "jsonName": null,
                  "type": "System.Decimal",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "request"
                },
                {
                  "nameOnMethod": "request",
                  "name": "Currency",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "request"
                },
                {
                  "nameOnMethod": "request",
                  "name": "Description",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "request"
                },
                {
                  "nameOnMethod": "request",
                  "name": "ProviderId",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "request"
                },
                {
                  "nameOnMethod": "request",
                  "name": "MethodId",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "request"
                },
                {
                  "nameOnMethod": "request",
                  "name": "Metadata",
                  "jsonName": null,
                  "type": "System.Collections.Generic.Dictionary<System.String,System.Object>",
                  "typeSimple": "{string:object}",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "request"
                }
              ],
              "returnValue": {
                "type": "MP.Application.Contracts.Payments.PaymentCreationResultDto",
                "typeSimple": "MP.Application.Contracts.Payments.PaymentCreationResultDto"
              },
              "allowAnonymous": null,
              "implementFrom": "MP.Controllers.PaymentController"
            },
            "StripeWebhookAsync": {
              "uniqueName": "StripeWebhookAsync",
              "name": "StripeWebhookAsync",
              "httpMethod": "POST",
              "url": "api/app/payments/stripe/webhook",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "Microsoft.AspNetCore.Mvc.IActionResult",
                "typeSimple": "Microsoft.AspNetCore.Mvc.IActionResult"
              },
              "allowAnonymous": null,
              "implementFrom": "MP.Controllers.PaymentController"
            }
          }
        },
        "MP.Controllers.RentalController": {
          "controllerName": "Rental",
          "controllerGroupName": "Rental",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "MP.Controllers.RentalController",
          "interfaces": [
            {
              "type": "MP.Rentals.IRentalAppService",
              "name": "IRentalAppService",
              "methods": [
                {
                  "name": "GetAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Rentals.RentalDto",
                    "typeSimple": "MP.Rentals.RentalDto"
                  }
                },
                {
                  "name": "GetListAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "MP.Rentals.GetRentalListDto, MP.Application.Contracts",
                      "type": "MP.Rentals.GetRentalListDto",
                      "typeSimple": "MP.Rentals.GetRentalListDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Rentals.RentalListDto>",
                    "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Rentals.RentalListDto>"
                  }
                },
                {
                  "name": "CreateAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "MP.Rentals.CreateRentalDto, MP.Application.Contracts",
                      "type": "MP.Rentals.CreateRentalDto",
                      "typeSimple": "MP.Rentals.CreateRentalDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Rentals.RentalDto",
                    "typeSimple": "MP.Rentals.RentalDto"
                  }
                },
                {
                  "name": "UpdateAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "input",
                      "typeAsString": "MP.Rentals.UpdateRentalDto, MP.Application.Contracts",
                      "type": "MP.Rentals.UpdateRentalDto",
                      "typeSimple": "MP.Rentals.UpdateRentalDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Rentals.RentalDto",
                    "typeSimple": "MP.Rentals.RentalDto"
                  }
                },
                {
                  "name": "DeleteAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                },
                {
                  "name": "PayAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "input",
                      "typeAsString": "MP.Rentals.PaymentDto, MP.Application.Contracts",
                      "type": "MP.Rentals.PaymentDto",
                      "typeSimple": "MP.Rentals.PaymentDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Rentals.RentalDto",
                    "typeSimple": "MP.Rentals.RentalDto"
                  }
                },
                {
                  "name": "StartRentalAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Rentals.RentalDto",
                    "typeSimple": "MP.Rentals.RentalDto"
                  }
                },
                {
                  "name": "CompleteRentalAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Rentals.RentalDto",
                    "typeSimple": "MP.Rentals.RentalDto"
                  }
                },
                {
                  "name": "CancelRentalAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "reason",
                      "typeAsString": "System.String, System.Private.CoreLib",
                      "type": "System.String",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Rentals.RentalDto",
                    "typeSimple": "MP.Rentals.RentalDto"
                  }
                },
                {
                  "name": "ExtendRentalAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "input",
                      "typeAsString": "MP.Rentals.ExtendRentalDto, MP.Application.Contracts",
                      "type": "MP.Rentals.ExtendRentalDto",
                      "typeSimple": "MP.Rentals.ExtendRentalDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Rentals.RentalDto",
                    "typeSimple": "MP.Rentals.RentalDto"
                  }
                },
                {
                  "name": "GetActiveRentalForBoothAsync",
                  "parametersOnMethod": [
                    {
                      "name": "boothId",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Rentals.RentalDto",
                    "typeSimple": "MP.Rentals.RentalDto"
                  }
                },
                {
                  "name": "GetMyRentalsAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "MP.Rentals.GetRentalListDto, MP.Application.Contracts",
                      "type": "MP.Rentals.GetRentalListDto",
                      "typeSimple": "MP.Rentals.GetRentalListDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Rentals.RentalListDto>",
                    "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Rentals.RentalListDto>"
                  }
                },
                {
                  "name": "CreateMyRentalAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "MP.Rentals.CreateMyRentalDto, MP.Application.Contracts",
                      "type": "MP.Rentals.CreateMyRentalDto",
                      "typeSimple": "MP.Rentals.CreateMyRentalDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Rentals.RentalDto",
                    "typeSimple": "MP.Rentals.RentalDto"
                  }
                },
                {
                  "name": "CreateMyRentalWithPaymentAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "MP.Rentals.CreateRentalWithPaymentDto, MP.Application.Contracts",
                      "type": "MP.Rentals.CreateRentalWithPaymentDto",
                      "typeSimple": "MP.Rentals.CreateRentalWithPaymentDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Rentals.CreateRentalWithPaymentResultDto",
                    "typeSimple": "MP.Rentals.CreateRentalWithPaymentResultDto"
                  }
                },
                {
                  "name": "GetActiveRentalsAsync",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<MP.Rentals.RentalListDto>",
                    "typeSimple": "[MP.Rentals.RentalListDto]"
                  }
                },
                {
                  "name": "GetExpiredRentalsAsync",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<MP.Rentals.RentalListDto>",
                    "typeSimple": "[MP.Rentals.RentalListDto]"
                  }
                },
                {
                  "name": "GetOverdueRentalsAsync",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<MP.Rentals.RentalListDto>",
                    "typeSimple": "[MP.Rentals.RentalListDto]"
                  }
                },
                {
                  "name": "GetBoothCalendarAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "MP.Rentals.BoothCalendarRequestDto, MP.Application.Contracts",
                      "type": "MP.Rentals.BoothCalendarRequestDto",
                      "typeSimple": "MP.Rentals.BoothCalendarRequestDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Rentals.BoothCalendarResponseDto",
                    "typeSimple": "MP.Rentals.BoothCalendarResponseDto"
                  }
                },
                {
                  "name": "CheckAvailabilityAsync",
                  "parametersOnMethod": [
                    {
                      "name": "boothId",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "startDate",
                      "typeAsString": "System.DateTime, System.Private.CoreLib",
                      "type": "System.DateTime",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "endDate",
                      "typeAsString": "System.DateTime, System.Private.CoreLib",
                      "type": "System.DateTime",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Boolean",
                    "typeSimple": "boolean"
                  }
                },
                {
                  "name": "CalculateCostAsync",
                  "parametersOnMethod": [
                    {
                      "name": "boothId",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "boothTypeId",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "startDate",
                      "typeAsString": "System.DateTime, System.Private.CoreLib",
                      "type": "System.DateTime",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "endDate",
                      "typeAsString": "System.DateTime, System.Private.CoreLib",
                      "type": "System.DateTime",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Decimal",
                    "typeSimple": "number"
                  }
                },
                {
                  "name": "GetMaxExtensionDateAsync",
                  "parametersOnMethod": [
                    {
                      "name": "boothId",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "currentRentalEndDate",
                      "typeAsString": "System.DateTime, System.Private.CoreLib",
                      "type": "System.DateTime",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Rentals.MaxExtensionDateResponseDto",
                    "typeSimple": "MP.Rentals.MaxExtensionDateResponseDto"
                  }
                },
                {
                  "name": "AdminManageBoothRentalAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "MP.Rentals.AdminManageBoothRentalDto, MP.Application.Contracts",
                      "type": "MP.Rentals.AdminManageBoothRentalDto",
                      "typeSimple": "MP.Rentals.AdminManageBoothRentalDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Rentals.RentalDto",
                    "typeSimple": "MP.Rentals.RentalDto"
                  }
                }
              ]
            }
          ],
          "actions": {
            "GetAsyncById": {
              "uniqueName": "GetAsyncById",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/app/rentals/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Rentals.RentalDto",
                "typeSimple": "MP.Rentals.RentalDto"
              },
              "allowAnonymous": null,
              "implementFrom": "MP.Rentals.IRentalAppService"
            },
            "GetListAsyncByInput": {
              "uniqueName": "GetListAsyncByInput",
              "name": "GetListAsync",
              "httpMethod": "GET",
              "url": "api/app/rentals",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "MP.Rentals.GetRentalListDto, MP.Application.Contracts",
                  "type": "MP.Rentals.GetRentalListDto",
                  "typeSimple": "MP.Rentals.GetRentalListDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Filter",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Status",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "UserId",
                  "jsonName": null,
                  "type": "System.Guid?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "BoothId",
                  "jsonName": null,
                  "type": "System.Guid?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "FromDate",
                  "jsonName": null,
                  "type": "System.DateTime?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "ToDate",
                  "jsonName": null,
                  "type": "System.DateTime?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "IsOverdue",
                  "jsonName": null,
                  "type": "System.Boolean?",
                  "typeSimple": "boolean?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Rentals.RentalListDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Rentals.RentalListDto>"
              },
              "allowAnonymous": null,
              "implementFrom": "MP.Rentals.IRentalAppService"
            },
            "CreateAsyncByInput": {
              "uniqueName": "CreateAsyncByInput",
              "name": "CreateAsync",
              "httpMethod": "POST",
              "url": "api/app/rentals",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "MP.Rentals.CreateRentalDto, MP.Application.Contracts",
                  "type": "MP.Rentals.CreateRentalDto",
                  "typeSimple": "MP.Rentals.CreateRentalDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "MP.Rentals.CreateRentalDto",
                  "typeSimple": "MP.Rentals.CreateRentalDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Rentals.RentalDto",
                "typeSimple": "MP.Rentals.RentalDto"
              },
              "allowAnonymous": null,
              "implementFrom": "MP.Rentals.IRentalAppService"
            },
            "UpdateAsyncByIdAndInput": {
              "uniqueName": "UpdateAsyncByIdAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/app/rentals/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "MP.Rentals.UpdateRentalDto, MP.Application.Contracts",
                  "type": "MP.Rentals.UpdateRentalDto",
                  "typeSimple": "MP.Rentals.UpdateRentalDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "MP.Rentals.UpdateRentalDto",
                  "typeSimple": "MP.Rentals.UpdateRentalDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Rentals.RentalDto",
                "typeSimple": "MP.Rentals.RentalDto"
              },
              "allowAnonymous": null,
              "implementFrom": "MP.Rentals.IRentalAppService"
            },
            "DeleteAsyncById": {
              "uniqueName": "DeleteAsyncById",
              "name": "DeleteAsync",
              "httpMethod": "DELETE",
              "url": "api/app/rentals/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null,
              "implementFrom": "MP.Rentals.IRentalAppService"
            },
            "PayAsyncByIdAndInput": {
              "uniqueName": "PayAsyncByIdAndInput",
              "name": "PayAsync",
              "httpMethod": "POST",
              "url": "api/app/rentals/{id}/pay",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "MP.Rentals.PaymentDto, MP.Application.Contracts",
                  "type": "MP.Rentals.PaymentDto",
                  "typeSimple": "MP.Rentals.PaymentDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "MP.Rentals.PaymentDto",
                  "typeSimple": "MP.Rentals.PaymentDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Rentals.RentalDto",
                "typeSimple": "MP.Rentals.RentalDto"
              },
              "allowAnonymous": null,
              "implementFrom": "MP.Rentals.IRentalAppService"
            },
            "StartRentalAsyncById": {
              "uniqueName": "StartRentalAsyncById",
              "name": "StartRentalAsync",
              "httpMethod": "POST",
              "url": "api/app/rentals/{id}/start",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Rentals.RentalDto",
                "typeSimple": "MP.Rentals.RentalDto"
              },
              "allowAnonymous": null,
              "implementFrom": "MP.Rentals.IRentalAppService"
            },
            "CompleteRentalAsyncById": {
              "uniqueName": "CompleteRentalAsyncById",
              "name": "CompleteRentalAsync",
              "httpMethod": "POST",
              "url": "api/app/rentals/{id}/complete",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Rentals.RentalDto",
                "typeSimple": "MP.Rentals.RentalDto"
              },
              "allowAnonymous": null,
              "implementFrom": "MP.Rentals.IRentalAppService"
            },
            "CancelRentalAsyncByIdAndReason": {
              "uniqueName": "CancelRentalAsyncByIdAndReason",
              "name": "CancelRentalAsync",
              "httpMethod": "POST",
              "url": "api/app/rentals/{id}/cancel",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "reason",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "reason",
                  "name": "reason",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Rentals.RentalDto",
                "typeSimple": "MP.Rentals.RentalDto"
              },
              "allowAnonymous": null,
              "implementFrom": "MP.Rentals.IRentalAppService"
            },
            "ExtendRentalAsyncByIdAndInput": {
              "uniqueName": "ExtendRentalAsyncByIdAndInput",
              "name": "ExtendRentalAsync",
              "httpMethod": "POST",
              "url": "api/app/rentals/{id}/extend",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "MP.Rentals.ExtendRentalDto, MP.Application.Contracts",
                  "type": "MP.Rentals.ExtendRentalDto",
                  "typeSimple": "MP.Rentals.ExtendRentalDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "MP.Rentals.ExtendRentalDto",
                  "typeSimple": "MP.Rentals.ExtendRentalDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Rentals.RentalDto",
                "typeSimple": "MP.Rentals.RentalDto"
              },
              "allowAnonymous": null,
              "implementFrom": "MP.Rentals.IRentalAppService"
            },
            "GetMyRentalsAsyncByInput": {
              "uniqueName": "GetMyRentalsAsyncByInput",
              "name": "GetMyRentalsAsync",
              "httpMethod": "GET",
              "url": "api/app/rentals/my-rentals",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "MP.Rentals.GetRentalListDto, MP.Application.Contracts",
                  "type": "MP.Rentals.GetRentalListDto",
                  "typeSimple": "MP.Rentals.GetRentalListDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Filter",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Status",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "UserId",
                  "jsonName": null,
                  "type": "System.Guid?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "BoothId",
                  "jsonName": null,
                  "type": "System.Guid?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "FromDate",
                  "jsonName": null,
                  "type": "System.DateTime?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "ToDate",
                  "jsonName": null,
                  "type": "System.DateTime?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "IsOverdue",
                  "jsonName": null,
                  "type": "System.Boolean?",
                  "typeSimple": "boolean?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Rentals.RentalListDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Rentals.RentalListDto>"
              },
              "allowAnonymous": null,
              "implementFrom": "MP.Rentals.IRentalAppService"
            },
            "CreateMyRentalAsyncByInput": {
              "uniqueName": "CreateMyRentalAsyncByInput",
              "name": "CreateMyRentalAsync",
              "httpMethod": "POST",
              "url": "api/app/rentals/my-rental",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "MP.Rentals.CreateMyRentalDto, MP.Application.Contracts",
                  "type": "MP.Rentals.CreateMyRentalDto",
                  "typeSimple": "MP.Rentals.CreateMyRentalDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "MP.Rentals.CreateMyRentalDto",
                  "typeSimple": "MP.Rentals.CreateMyRentalDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Rentals.RentalDto",
                "typeSimple": "MP.Rentals.RentalDto"
              },
              "allowAnonymous": null,
              "implementFrom": "MP.Rentals.IRentalAppService"
            },
            "CreateMyRentalWithPaymentAsyncByInput": {
              "uniqueName": "CreateMyRentalWithPaymentAsyncByInput",
              "name": "CreateMyRentalWithPaymentAsync",
              "httpMethod": "POST",
              "url": "api/app/rentals/create-with-payment",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "MP.Rentals.CreateRentalWithPaymentDto, MP.Application.Contracts",
                  "type": "MP.Rentals.CreateRentalWithPaymentDto",
                  "typeSimple": "MP.Rentals.CreateRentalWithPaymentDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "MP.Rentals.CreateRentalWithPaymentDto",
                  "typeSimple": "MP.Rentals.CreateRentalWithPaymentDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Rentals.CreateRentalWithPaymentResultDto",
                "typeSimple": "MP.Rentals.CreateRentalWithPaymentResultDto"
              },
              "allowAnonymous": null,
              "implementFrom": "MP.Rentals.IRentalAppService"
            },
            "GetActiveRentalsAsync": {
              "uniqueName": "GetActiveRentalsAsync",
              "name": "GetActiveRentalsAsync",
              "httpMethod": "GET",
              "url": "api/app/rentals/active",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "System.Collections.Generic.List<MP.Rentals.RentalListDto>",
                "typeSimple": "[MP.Rentals.RentalListDto]"
              },
              "allowAnonymous": null,
              "implementFrom": "MP.Rentals.IRentalAppService"
            },
            "GetExpiredRentalsAsync": {
              "uniqueName": "GetExpiredRentalsAsync",
              "name": "GetExpiredRentalsAsync",
              "httpMethod": "GET",
              "url": "api/app/rentals/expired",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "System.Collections.Generic.List<MP.Rentals.RentalListDto>",
                "typeSimple": "[MP.Rentals.RentalListDto]"
              },
              "allowAnonymous": null,
              "implementFrom": "MP.Rentals.IRentalAppService"
            },
            "GetOverdueRentalsAsync": {
              "uniqueName": "GetOverdueRentalsAsync",
              "name": "GetOverdueRentalsAsync",
              "httpMethod": "GET",
              "url": "api/app/rentals/overdue",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "System.Collections.Generic.List<MP.Rentals.RentalListDto>",
                "typeSimple": "[MP.Rentals.RentalListDto]"
              },
              "allowAnonymous": null,
              "implementFrom": "MP.Rentals.IRentalAppService"
            },
            "GetActiveRentalForBoothAsyncByBoothId": {
              "uniqueName": "GetActiveRentalForBoothAsyncByBoothId",
              "name": "GetActiveRentalForBoothAsync",
              "httpMethod": "GET",
              "url": "api/app/rentals/active-for-booth/{boothId}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "boothId",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "boothId",
                  "name": "boothId",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Rentals.RentalDto",
                "typeSimple": "MP.Rentals.RentalDto"
              },
              "allowAnonymous": null,
              "implementFrom": "MP.Rentals.IRentalAppService"
            },
            "GetBoothCalendarAsyncByInput": {
              "uniqueName": "GetBoothCalendarAsyncByInput",
              "name": "GetBoothCalendarAsync",
              "httpMethod": "POST",
              "url": "api/app/rentals/booth-calendar",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "MP.Rentals.BoothCalendarRequestDto, MP.Application.Contracts",
                  "type": "MP.Rentals.BoothCalendarRequestDto",
                  "typeSimple": "MP.Rentals.BoothCalendarRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "MP.Rentals.BoothCalendarRequestDto",
                  "typeSimple": "MP.Rentals.BoothCalendarRequestDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Rentals.BoothCalendarResponseDto",
                "typeSimple": "MP.Rentals.BoothCalendarResponseDto"
              },
              "allowAnonymous": null,
              "implementFrom": "MP.Rentals.IRentalAppService"
            },
            "CheckAvailabilityAsyncByBoothIdAndStartDateAndEndDate": {
              "uniqueName": "CheckAvailabilityAsyncByBoothIdAndStartDateAndEndDate",
              "name": "CheckAvailabilityAsync",
              "httpMethod": "GET",
              "url": "api/app/rentals/check-availability",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "boothId",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "startDate",
                  "typeAsString": "System.DateTime, System.Private.CoreLib",
                  "type": "System.DateTime",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "endDate",
                  "typeAsString": "System.DateTime, System.Private.CoreLib",
                  "type": "System.DateTime",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "boothId",
                  "name": "boothId",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "startDate",
                  "name": "startDate",
                  "jsonName": null,
                  "type": "System.DateTime",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "endDate",
                  "name": "endDate",
                  "jsonName": null,
                  "type": "System.DateTime",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Boolean",
                "typeSimple": "boolean"
              },
              "allowAnonymous": null,
              "implementFrom": "MP.Rentals.IRentalAppService"
            },
            "CalculateCostAsyncByBoothIdAndBoothTypeIdAndStartDateAndEndDate": {
              "uniqueName": "CalculateCostAsyncByBoothIdAndBoothTypeIdAndStartDateAndEndDate",
              "name": "CalculateCostAsync",
              "httpMethod": "GET",
              "url": "api/app/rentals/calculate-cost",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "boothId",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "boothTypeId",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "startDate",
                  "typeAsString": "System.DateTime, System.Private.CoreLib",
                  "type": "System.DateTime",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "endDate",
                  "typeAsString": "System.DateTime, System.Private.CoreLib",
                  "type": "System.DateTime",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "boothId",
                  "name": "boothId",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "boothTypeId",
                  "name": "boothTypeId",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "startDate",
                  "name": "startDate",
                  "jsonName": null,
                  "type": "System.DateTime",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "endDate",
                  "name": "endDate",
                  "jsonName": null,
                  "type": "System.DateTime",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Decimal",
                "typeSimple": "number"
              },
              "allowAnonymous": null,
              "implementFrom": "MP.Rentals.IRentalAppService"
            },
            "GetMaxExtensionDateAsyncByBoothIdAndCurrentRentalEndDate": {
              "uniqueName": "GetMaxExtensionDateAsyncByBoothIdAndCurrentRentalEndDate",
              "name": "GetMaxExtensionDateAsync",
              "httpMethod": "GET",
              "url": "api/app/rentals/max-extension-date",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "boothId",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "currentRentalEndDate",
                  "typeAsString": "System.DateTime, System.Private.CoreLib",
                  "type": "System.DateTime",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "boothId",
                  "name": "boothId",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "currentRentalEndDate",
                  "name": "currentRentalEndDate",
                  "jsonName": null,
                  "type": "System.DateTime",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Rentals.MaxExtensionDateResponseDto",
                "typeSimple": "MP.Rentals.MaxExtensionDateResponseDto"
              },
              "allowAnonymous": null,
              "implementFrom": "MP.Rentals.IRentalAppService"
            },
            "AdminManageBoothRentalAsyncByInput": {
              "uniqueName": "AdminManageBoothRentalAsyncByInput",
              "name": "AdminManageBoothRentalAsync",
              "httpMethod": "POST",
              "url": "api/app/rentals/admin-manage",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "MP.Rentals.AdminManageBoothRentalDto, MP.Application.Contracts",
                  "type": "MP.Rentals.AdminManageBoothRentalDto",
                  "typeSimple": "MP.Rentals.AdminManageBoothRentalDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "MP.Rentals.AdminManageBoothRentalDto",
                  "typeSimple": "MP.Rentals.AdminManageBoothRentalDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Rentals.RentalDto",
                "typeSimple": "MP.Rentals.RentalDto"
              },
              "allowAnonymous": null,
              "implementFrom": "MP.Rentals.IRentalAppService"
            },
            "InitiatePaymentAsyncById": {
              "uniqueName": "InitiatePaymentAsyncById",
              "name": "InitiatePaymentAsync",
              "httpMethod": "POST",
              "url": "api/app/rentals/{id}/initiate-payment",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.String",
                "typeSimple": "string"
              },
              "allowAnonymous": null,
              "implementFrom": "MP.Controllers.RentalController"
            },
            "PaymentNotificationAsyncByNotification": {
              "uniqueName": "PaymentNotificationAsyncByNotification",
              "name": "PaymentNotificationAsync",
              "httpMethod": "POST",
              "url": "api/app/rentals/payment/notification",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "notification",
                  "typeAsString": "MP.Application.Contracts.Payments.P24NotificationDto, MP.Application.Contracts",
                  "type": "MP.Application.Contracts.Payments.P24NotificationDto",
                  "typeSimple": "MP.Application.Contracts.Payments.P24NotificationDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "notification",
                  "name": "P24_merchant_id",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Form",
                  "descriptorName": "notification"
                },
                {
                  "nameOnMethod": "notification",
                  "name": "P24_pos_id",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Form",
                  "descriptorName": "notification"
                },
                {
                  "nameOnMethod": "notification",
                  "name": "P24_session_id",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Form",
                  "descriptorName": "notification"
                },
                {
                  "nameOnMethod": "notification",
                  "name": "P24_amount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Form",
                  "descriptorName": "notification"
                },
                {
                  "nameOnMethod": "notification",
                  "name": "P24_currency",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Form",
                  "descriptorName": "notification"
                },
                {
                  "nameOnMethod": "notification",
                  "name": "P24_order_id",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Form",
                  "descriptorName": "notification"
                },
                {
                  "nameOnMethod": "notification",
                  "name": "P24_method",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Form",
                  "descriptorName": "notification"
                },
                {
                  "nameOnMethod": "notification",
                  "name": "P24_statement",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Form",
                  "descriptorName": "notification"
                },
                {
                  "nameOnMethod": "notification",
                  "name": "P24_sign",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Form",
                  "descriptorName": "notification"
                }
              ],
              "returnValue": {
                "type": "Microsoft.AspNetCore.Mvc.IActionResult",
                "typeSimple": "Microsoft.AspNetCore.Mvc.IActionResult"
              },
              "allowAnonymous": true,
              "implementFrom": "MP.Controllers.RentalController"
            },
            "GetPaymentStatusAsyncById": {
              "uniqueName": "GetPaymentStatusAsyncById",
              "name": "GetPaymentStatusAsync",
              "httpMethod": "GET",
              "url": "api/app/rentals/{id}/payment-status",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Domain.Rentals.PaymentStatus",
                "typeSimple": "enum"
              },
              "allowAnonymous": null,
              "implementFrom": "MP.Controllers.RentalController"
            }
          }
        },
        "MP.Controllers.SubdomainController": {
          "controllerName": "Subdomain",
          "controllerGroupName": null,
          "isRemoteService": false,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "MP.Controllers.SubdomainController",
          "interfaces": [],
          "actions": {
            "GetOAuthDebugInfoAsync": {
              "uniqueName": "GetOAuthDebugInfoAsync",
              "name": "GetOAuthDebugInfoAsync",
              "httpMethod": "GET",
              "url": "api/app/subdomain/oauth-debug",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "Microsoft.AspNetCore.Mvc.IActionResult",
                "typeSimple": "Microsoft.AspNetCore.Mvc.IActionResult"
              },
              "allowAnonymous": true,
              "implementFrom": "MP.Controllers.SubdomainController"
            },
            "GetSubdomainInfoAsync": {
              "uniqueName": "GetSubdomainInfoAsync",
              "name": "GetSubdomainInfoAsync",
              "httpMethod": "GET",
              "url": "api/app/subdomain/info",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "Microsoft.AspNetCore.Mvc.IActionResult",
                "typeSimple": "Microsoft.AspNetCore.Mvc.IActionResult"
              },
              "allowAnonymous": null,
              "implementFrom": "MP.Controllers.SubdomainController"
            }
          }
        },
        "MP.Controllers.SubdomainInfoController": {
          "controllerName": "SubdomainInfo",
          "controllerGroupName": null,
          "isRemoteService": false,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "MP.Controllers.SubdomainInfoController",
          "interfaces": [],
          "actions": {
            "GetSubdomainInfoAsync": {
              "uniqueName": "GetSubdomainInfoAsync",
              "name": "GetSubdomainInfoAsync",
              "httpMethod": "GET",
              "url": "api/subdomain/info",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "Microsoft.AspNetCore.Mvc.IActionResult",
                "typeSimple": "Microsoft.AspNetCore.Mvc.IActionResult"
              },
              "allowAnonymous": null,
              "implementFrom": "MP.Controllers.SubdomainInfoController"
            },
            "GetDebugInfoAsync": {
              "uniqueName": "GetDebugInfoAsync",
              "name": "GetDebugInfoAsync",
              "httpMethod": "GET",
              "url": "api/subdomain/debug",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "Microsoft.AspNetCore.Mvc.IActionResult",
                "typeSimple": "Microsoft.AspNetCore.Mvc.IActionResult"
              },
              "allowAnonymous": null,
              "implementFrom": "MP.Controllers.SubdomainInfoController"
            }
          }
        },
        "MP.FloorPlans.FloorPlanAppService": {
          "controllerName": "FloorPlan",
          "controllerGroupName": "FloorPlan",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "MP.FloorPlans.FloorPlanAppService",
          "interfaces": [
            {
              "type": "MP.FloorPlans.IFloorPlanAppService",
              "name": "IFloorPlanAppService",
              "methods": [
                {
                  "name": "GetAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.FloorPlans.FloorPlanDto",
                    "typeSimple": "MP.FloorPlans.FloorPlanDto"
                  }
                },
                {
                  "name": "GetListAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "MP.FloorPlans.GetFloorPlanListDto, MP.Application.Contracts",
                      "type": "MP.FloorPlans.GetFloorPlanListDto",
                      "typeSimple": "MP.FloorPlans.GetFloorPlanListDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Application.Dtos.PagedResultDto<MP.FloorPlans.FloorPlanDto>",
                    "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<MP.FloorPlans.FloorPlanDto>"
                  }
                },
                {
                  "name": "CreateAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "MP.FloorPlans.CreateFloorPlanDto, MP.Application.Contracts",
                      "type": "MP.FloorPlans.CreateFloorPlanDto",
                      "typeSimple": "MP.FloorPlans.CreateFloorPlanDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.FloorPlans.FloorPlanDto",
                    "typeSimple": "MP.FloorPlans.FloorPlanDto"
                  }
                },
                {
                  "name": "UpdateAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "input",
                      "typeAsString": "MP.FloorPlans.UpdateFloorPlanDto, MP.Application.Contracts",
                      "type": "MP.FloorPlans.UpdateFloorPlanDto",
                      "typeSimple": "MP.FloorPlans.UpdateFloorPlanDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.FloorPlans.FloorPlanDto",
                    "typeSimple": "MP.FloorPlans.FloorPlanDto"
                  }
                },
                {
                  "name": "DeleteAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                },
                {
                  "name": "PublishAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.FloorPlans.FloorPlanDto",
                    "typeSimple": "MP.FloorPlans.FloorPlanDto"
                  }
                },
                {
                  "name": "DeactivateAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.FloorPlans.FloorPlanDto",
                    "typeSimple": "MP.FloorPlans.FloorPlanDto"
                  }
                },
                {
                  "name": "GetBoothsAsync",
                  "parametersOnMethod": [
                    {
                      "name": "floorPlanId",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<MP.FloorPlans.FloorPlanBoothDto>",
                    "typeSimple": "[MP.FloorPlans.FloorPlanBoothDto]"
                  }
                },
                {
                  "name": "AddBoothAsync",
                  "parametersOnMethod": [
                    {
                      "name": "floorPlanId",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "input",
                      "typeAsString": "MP.FloorPlans.CreateFloorPlanBoothDto, MP.Application.Contracts",
                      "type": "MP.FloorPlans.CreateFloorPlanBoothDto",
                      "typeSimple": "MP.FloorPlans.CreateFloorPlanBoothDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.FloorPlans.FloorPlanBoothDto",
                    "typeSimple": "MP.FloorPlans.FloorPlanBoothDto"
                  }
                },
                {
                  "name": "UpdateBoothPositionAsync",
                  "parametersOnMethod": [
                    {
                      "name": "floorPlanId",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "boothId",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "input",
                      "typeAsString": "MP.FloorPlans.CreateFloorPlanBoothDto, MP.Application.Contracts",
                      "type": "MP.FloorPlans.CreateFloorPlanBoothDto",
                      "typeSimple": "MP.FloorPlans.CreateFloorPlanBoothDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.FloorPlans.FloorPlanBoothDto",
                    "typeSimple": "MP.FloorPlans.FloorPlanBoothDto"
                  }
                },
                {
                  "name": "RemoveBoothAsync",
                  "parametersOnMethod": [
                    {
                      "name": "floorPlanId",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "boothId",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                },
                {
                  "name": "GetBoothsAvailabilityAsync",
                  "parametersOnMethod": [
                    {
                      "name": "floorPlanId",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "startDate",
                      "typeAsString": "System.DateTime, System.Private.CoreLib",
                      "type": "System.DateTime",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "endDate",
                      "typeAsString": "System.DateTime, System.Private.CoreLib",
                      "type": "System.DateTime",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<MP.FloorPlans.BoothAvailabilityDto>",
                    "typeSimple": "[MP.FloorPlans.BoothAvailabilityDto]"
                  }
                }
              ]
            }
          ],
          "actions": {
            "GetAsyncById": {
              "uniqueName": "GetAsyncById",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/app/floor-plan/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.FloorPlans.FloorPlanDto",
                "typeSimple": "MP.FloorPlans.FloorPlanDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.FloorPlans.IFloorPlanAppService"
            },
            "GetListAsyncByInput": {
              "uniqueName": "GetListAsyncByInput",
              "name": "GetListAsync",
              "httpMethod": "GET",
              "url": "api/app/floor-plan",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "MP.FloorPlans.GetFloorPlanListDto, MP.Application.Contracts",
                  "type": "MP.FloorPlans.GetFloorPlanListDto",
                  "typeSimple": "MP.FloorPlans.GetFloorPlanListDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "TenantId",
                  "jsonName": null,
                  "type": "System.Guid?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "IsActive",
                  "jsonName": null,
                  "type": "System.Boolean?",
                  "typeSimple": "boolean?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Level",
                  "jsonName": null,
                  "type": "System.Int32?",
                  "typeSimple": "number?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Filter",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<MP.FloorPlans.FloorPlanDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<MP.FloorPlans.FloorPlanDto>"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.FloorPlans.IFloorPlanAppService"
            },
            "CreateAsyncByInput": {
              "uniqueName": "CreateAsyncByInput",
              "name": "CreateAsync",
              "httpMethod": "POST",
              "url": "api/app/floor-plan",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "MP.FloorPlans.CreateFloorPlanDto, MP.Application.Contracts",
                  "type": "MP.FloorPlans.CreateFloorPlanDto",
                  "typeSimple": "MP.FloorPlans.CreateFloorPlanDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "MP.FloorPlans.CreateFloorPlanDto",
                  "typeSimple": "MP.FloorPlans.CreateFloorPlanDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.FloorPlans.FloorPlanDto",
                "typeSimple": "MP.FloorPlans.FloorPlanDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.FloorPlans.IFloorPlanAppService"
            },
            "UpdateAsyncByIdAndInput": {
              "uniqueName": "UpdateAsyncByIdAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/app/floor-plan/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "MP.FloorPlans.UpdateFloorPlanDto, MP.Application.Contracts",
                  "type": "MP.FloorPlans.UpdateFloorPlanDto",
                  "typeSimple": "MP.FloorPlans.UpdateFloorPlanDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "MP.FloorPlans.UpdateFloorPlanDto",
                  "typeSimple": "MP.FloorPlans.UpdateFloorPlanDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.FloorPlans.FloorPlanDto",
                "typeSimple": "MP.FloorPlans.FloorPlanDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.FloorPlans.IFloorPlanAppService"
            },
            "DeleteAsyncById": {
              "uniqueName": "DeleteAsyncById",
              "name": "DeleteAsync",
              "httpMethod": "DELETE",
              "url": "api/app/floor-plan/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.FloorPlans.IFloorPlanAppService"
            },
            "PublishAsyncById": {
              "uniqueName": "PublishAsyncById",
              "name": "PublishAsync",
              "httpMethod": "POST",
              "url": "api/app/floor-plan/{id}/publish",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.FloorPlans.FloorPlanDto",
                "typeSimple": "MP.FloorPlans.FloorPlanDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.FloorPlans.IFloorPlanAppService"
            },
            "DeactivateAsyncById": {
              "uniqueName": "DeactivateAsyncById",
              "name": "DeactivateAsync",
              "httpMethod": "POST",
              "url": "api/app/floor-plan/{id}/deactivate",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.FloorPlans.FloorPlanDto",
                "typeSimple": "MP.FloorPlans.FloorPlanDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.FloorPlans.IFloorPlanAppService"
            },
            "GetBoothsAsyncByFloorPlanId": {
              "uniqueName": "GetBoothsAsyncByFloorPlanId",
              "name": "GetBoothsAsync",
              "httpMethod": "GET",
              "url": "api/app/floor-plan/{floorPlanId}/booths",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "floorPlanId",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "floorPlanId",
                  "name": "floorPlanId",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Collections.Generic.List<MP.FloorPlans.FloorPlanBoothDto>",
                "typeSimple": "[MP.FloorPlans.FloorPlanBoothDto]"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.FloorPlans.IFloorPlanAppService"
            },
            "AddBoothAsyncByFloorPlanIdAndInput": {
              "uniqueName": "AddBoothAsyncByFloorPlanIdAndInput",
              "name": "AddBoothAsync",
              "httpMethod": "POST",
              "url": "api/app/floor-plan/{floorPlanId}/booths",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "floorPlanId",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "MP.FloorPlans.CreateFloorPlanBoothDto, MP.Application.Contracts",
                  "type": "MP.FloorPlans.CreateFloorPlanBoothDto",
                  "typeSimple": "MP.FloorPlans.CreateFloorPlanBoothDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "floorPlanId",
                  "name": "floorPlanId",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "MP.FloorPlans.CreateFloorPlanBoothDto",
                  "typeSimple": "MP.FloorPlans.CreateFloorPlanBoothDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.FloorPlans.FloorPlanBoothDto",
                "typeSimple": "MP.FloorPlans.FloorPlanBoothDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.FloorPlans.IFloorPlanAppService"
            },
            "UpdateBoothPositionAsyncByFloorPlanIdAndBoothIdAndInput": {
              "uniqueName": "UpdateBoothPositionAsyncByFloorPlanIdAndBoothIdAndInput",
              "name": "UpdateBoothPositionAsync",
              "httpMethod": "PUT",
              "url": "api/app/floor-plan/{floorPlanId}/booths/{boothId}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "floorPlanId",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "boothId",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "MP.FloorPlans.CreateFloorPlanBoothDto, MP.Application.Contracts",
                  "type": "MP.FloorPlans.CreateFloorPlanBoothDto",
                  "typeSimple": "MP.FloorPlans.CreateFloorPlanBoothDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "floorPlanId",
                  "name": "floorPlanId",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "boothId",
                  "name": "boothId",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "MP.FloorPlans.CreateFloorPlanBoothDto",
                  "typeSimple": "MP.FloorPlans.CreateFloorPlanBoothDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.FloorPlans.FloorPlanBoothDto",
                "typeSimple": "MP.FloorPlans.FloorPlanBoothDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.FloorPlans.IFloorPlanAppService"
            },
            "RemoveBoothAsyncByFloorPlanIdAndBoothId": {
              "uniqueName": "RemoveBoothAsyncByFloorPlanIdAndBoothId",
              "name": "RemoveBoothAsync",
              "httpMethod": "DELETE",
              "url": "api/app/floor-plan/{floorPlanId}/booths/{boothId}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "floorPlanId",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "boothId",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "floorPlanId",
                  "name": "floorPlanId",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "boothId",
                  "name": "boothId",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.FloorPlans.IFloorPlanAppService"
            },
            "GetBoothsAvailabilityAsyncByFloorPlanIdAndStartDateAndEndDate": {
              "uniqueName": "GetBoothsAvailabilityAsyncByFloorPlanIdAndStartDateAndEndDate",
              "name": "GetBoothsAvailabilityAsync",
              "httpMethod": "GET",
              "url": "api/app/floor-plan/{floorPlanId}/booths-availability",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "floorPlanId",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "startDate",
                  "typeAsString": "System.DateTime, System.Private.CoreLib",
                  "type": "System.DateTime",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "endDate",
                  "typeAsString": "System.DateTime, System.Private.CoreLib",
                  "type": "System.DateTime",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "floorPlanId",
                  "name": "floorPlanId",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "startDate",
                  "name": "startDate",
                  "jsonName": null,
                  "type": "System.DateTime",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Query",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "endDate",
                  "name": "endDate",
                  "jsonName": null,
                  "type": "System.DateTime",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Query",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Collections.Generic.List<MP.FloorPlans.BoothAvailabilityDto>",
                "typeSimple": "[MP.FloorPlans.BoothAvailabilityDto]"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.FloorPlans.IFloorPlanAppService"
            }
          }
        },
        "MP.FloorPlans.FloorPlanElementAppService": {
          "controllerName": "FloorPlanElement",
          "controllerGroupName": "FloorPlanElement",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "MP.FloorPlans.FloorPlanElementAppService",
          "interfaces": [
            {
              "type": "MP.FloorPlans.IFloorPlanElementAppService",
              "name": "IFloorPlanElementAppService",
              "methods": [
                {
                  "name": "GetAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.FloorPlans.FloorPlanElementDto",
                    "typeSimple": "MP.FloorPlans.FloorPlanElementDto"
                  }
                },
                {
                  "name": "GetListAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "MP.FloorPlans.GetFloorPlanElementListDto, MP.Application.Contracts",
                      "type": "MP.FloorPlans.GetFloorPlanElementListDto",
                      "typeSimple": "MP.FloorPlans.GetFloorPlanElementListDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Application.Dtos.PagedResultDto<MP.FloorPlans.FloorPlanElementDto>",
                    "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<MP.FloorPlans.FloorPlanElementDto>"
                  }
                },
                {
                  "name": "GetListByFloorPlanAsync",
                  "parametersOnMethod": [
                    {
                      "name": "floorPlanId",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<MP.FloorPlans.FloorPlanElementDto>",
                    "typeSimple": "[MP.FloorPlans.FloorPlanElementDto]"
                  }
                },
                {
                  "name": "CreateAsync",
                  "parametersOnMethod": [
                    {
                      "name": "floorPlanId",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "input",
                      "typeAsString": "MP.FloorPlans.CreateFloorPlanElementDto, MP.Application.Contracts",
                      "type": "MP.FloorPlans.CreateFloorPlanElementDto",
                      "typeSimple": "MP.FloorPlans.CreateFloorPlanElementDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.FloorPlans.FloorPlanElementDto",
                    "typeSimple": "MP.FloorPlans.FloorPlanElementDto"
                  }
                },
                {
                  "name": "UpdateAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "input",
                      "typeAsString": "MP.FloorPlans.UpdateFloorPlanElementDto, MP.Application.Contracts",
                      "type": "MP.FloorPlans.UpdateFloorPlanElementDto",
                      "typeSimple": "MP.FloorPlans.UpdateFloorPlanElementDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.FloorPlans.FloorPlanElementDto",
                    "typeSimple": "MP.FloorPlans.FloorPlanElementDto"
                  }
                },
                {
                  "name": "DeleteAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                },
                {
                  "name": "DeleteByFloorPlanAsync",
                  "parametersOnMethod": [
                    {
                      "name": "floorPlanId",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                }
              ]
            }
          ],
          "actions": {
            "GetAsyncById": {
              "uniqueName": "GetAsyncById",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/app/floor-plan-element/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.FloorPlans.FloorPlanElementDto",
                "typeSimple": "MP.FloorPlans.FloorPlanElementDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.FloorPlans.IFloorPlanElementAppService"
            },
            "GetListAsyncByInput": {
              "uniqueName": "GetListAsyncByInput",
              "name": "GetListAsync",
              "httpMethod": "GET",
              "url": "api/app/floor-plan-element",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "MP.FloorPlans.GetFloorPlanElementListDto, MP.Application.Contracts",
                  "type": "MP.FloorPlans.GetFloorPlanElementListDto",
                  "typeSimple": "MP.FloorPlans.GetFloorPlanElementListDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "FloorPlanId",
                  "jsonName": null,
                  "type": "System.Guid?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "ElementType",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<MP.FloorPlans.FloorPlanElementDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<MP.FloorPlans.FloorPlanElementDto>"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.FloorPlans.IFloorPlanElementAppService"
            },
            "GetListByFloorPlanAsyncByFloorPlanId": {
              "uniqueName": "GetListByFloorPlanAsyncByFloorPlanId",
              "name": "GetListByFloorPlanAsync",
              "httpMethod": "GET",
              "url": "api/app/floor-plan-element/by-floor-plan/{floorPlanId}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "floorPlanId",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "floorPlanId",
                  "name": "floorPlanId",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Collections.Generic.List<MP.FloorPlans.FloorPlanElementDto>",
                "typeSimple": "[MP.FloorPlans.FloorPlanElementDto]"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.FloorPlans.IFloorPlanElementAppService"
            },
            "CreateAsyncByFloorPlanIdAndInput": {
              "uniqueName": "CreateAsyncByFloorPlanIdAndInput",
              "name": "CreateAsync",
              "httpMethod": "POST",
              "url": "api/app/floor-plan-element",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "floorPlanId",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "MP.FloorPlans.CreateFloorPlanElementDto, MP.Application.Contracts",
                  "type": "MP.FloorPlans.CreateFloorPlanElementDto",
                  "typeSimple": "MP.FloorPlans.CreateFloorPlanElementDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "floorPlanId",
                  "name": "floorPlanId",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "MP.FloorPlans.CreateFloorPlanElementDto",
                  "typeSimple": "MP.FloorPlans.CreateFloorPlanElementDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.FloorPlans.FloorPlanElementDto",
                "typeSimple": "MP.FloorPlans.FloorPlanElementDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.FloorPlans.IFloorPlanElementAppService"
            },
            "UpdateAsyncByIdAndInput": {
              "uniqueName": "UpdateAsyncByIdAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/app/floor-plan-element/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "MP.FloorPlans.UpdateFloorPlanElementDto, MP.Application.Contracts",
                  "type": "MP.FloorPlans.UpdateFloorPlanElementDto",
                  "typeSimple": "MP.FloorPlans.UpdateFloorPlanElementDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "MP.FloorPlans.UpdateFloorPlanElementDto",
                  "typeSimple": "MP.FloorPlans.UpdateFloorPlanElementDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.FloorPlans.FloorPlanElementDto",
                "typeSimple": "MP.FloorPlans.FloorPlanElementDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.FloorPlans.IFloorPlanElementAppService"
            },
            "DeleteAsyncById": {
              "uniqueName": "DeleteAsyncById",
              "name": "DeleteAsync",
              "httpMethod": "DELETE",
              "url": "api/app/floor-plan-element/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.FloorPlans.IFloorPlanElementAppService"
            },
            "DeleteByFloorPlanAsyncByFloorPlanId": {
              "uniqueName": "DeleteByFloorPlanAsyncByFloorPlanId",
              "name": "DeleteByFloorPlanAsync",
              "httpMethod": "DELETE",
              "url": "api/app/floor-plan-element/by-floor-plan/{floorPlanId}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "floorPlanId",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "floorPlanId",
                  "name": "floorPlanId",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.FloorPlans.IFloorPlanElementAppService"
            }
          }
        },
        "MP.Items.ItemAppService": {
          "controllerName": "Item",
          "controllerGroupName": "Item",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "MP.Items.ItemAppService",
          "interfaces": [
            {
              "type": "MP.Items.IItemAppService",
              "name": "IItemAppService",
              "methods": [
                {
                  "name": "GetAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Items.ItemDto",
                    "typeSimple": "MP.Items.ItemDto"
                  }
                },
                {
                  "name": "GetListAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto, Volo.Abp.Ddd.Application.Contracts",
                      "type": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
                      "typeSimple": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Items.ItemDto>",
                    "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Items.ItemDto>"
                  }
                },
                {
                  "name": "GetMyItemsAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto, Volo.Abp.Ddd.Application.Contracts",
                      "type": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
                      "typeSimple": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Items.ItemDto>",
                    "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Items.ItemDto>"
                  }
                },
                {
                  "name": "CreateAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "MP.Items.CreateItemDto, MP.Application.Contracts",
                      "type": "MP.Items.CreateItemDto",
                      "typeSimple": "MP.Items.CreateItemDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Items.ItemDto",
                    "typeSimple": "MP.Items.ItemDto"
                  }
                },
                {
                  "name": "CreateBulkAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "MP.Items.CreateBulkItemsDto, MP.Application.Contracts",
                      "type": "MP.Items.CreateBulkItemsDto",
                      "typeSimple": "MP.Items.CreateBulkItemsDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Items.BulkItemCreationResultDto",
                    "typeSimple": "MP.Items.BulkItemCreationResultDto"
                  }
                },
                {
                  "name": "UpdateAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "input",
                      "typeAsString": "MP.Items.UpdateItemDto, MP.Application.Contracts",
                      "type": "MP.Items.UpdateItemDto",
                      "typeSimple": "MP.Items.UpdateItemDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Items.ItemDto",
                    "typeSimple": "MP.Items.ItemDto"
                  }
                },
                {
                  "name": "DeleteAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                }
              ]
            }
          ],
          "actions": {
            "GetAsyncById": {
              "uniqueName": "GetAsyncById",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/app/item/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Items.ItemDto",
                "typeSimple": "MP.Items.ItemDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Items.IItemAppService"
            },
            "GetListAsyncByInput": {
              "uniqueName": "GetListAsyncByInput",
              "name": "GetListAsync",
              "httpMethod": "GET",
              "url": "api/app/item",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto, Volo.Abp.Ddd.Application.Contracts",
                  "type": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
                  "typeSimple": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Items.ItemDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Items.ItemDto>"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Items.IItemAppService"
            },
            "GetMyItemsAsyncByInput": {
              "uniqueName": "GetMyItemsAsyncByInput",
              "name": "GetMyItemsAsync",
              "httpMethod": "GET",
              "url": "api/app/item/my-items",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto, Volo.Abp.Ddd.Application.Contracts",
                  "type": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
                  "typeSimple": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Items.ItemDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Items.ItemDto>"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Items.IItemAppService"
            },
            "CreateAsyncByInput": {
              "uniqueName": "CreateAsyncByInput",
              "name": "CreateAsync",
              "httpMethod": "POST",
              "url": "api/app/item",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "MP.Items.CreateItemDto, MP.Application.Contracts",
                  "type": "MP.Items.CreateItemDto",
                  "typeSimple": "MP.Items.CreateItemDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "MP.Items.CreateItemDto",
                  "typeSimple": "MP.Items.CreateItemDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Items.ItemDto",
                "typeSimple": "MP.Items.ItemDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Items.IItemAppService"
            },
            "CreateBulkAsyncByInput": {
              "uniqueName": "CreateBulkAsyncByInput",
              "name": "CreateBulkAsync",
              "httpMethod": "POST",
              "url": "api/app/item/bulk",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "MP.Items.CreateBulkItemsDto, MP.Application.Contracts",
                  "type": "MP.Items.CreateBulkItemsDto",
                  "typeSimple": "MP.Items.CreateBulkItemsDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "MP.Items.CreateBulkItemsDto",
                  "typeSimple": "MP.Items.CreateBulkItemsDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Items.BulkItemCreationResultDto",
                "typeSimple": "MP.Items.BulkItemCreationResultDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Items.IItemAppService"
            },
            "UpdateAsyncByIdAndInput": {
              "uniqueName": "UpdateAsyncByIdAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/app/item/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "MP.Items.UpdateItemDto, MP.Application.Contracts",
                  "type": "MP.Items.UpdateItemDto",
                  "typeSimple": "MP.Items.UpdateItemDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "MP.Items.UpdateItemDto",
                  "typeSimple": "MP.Items.UpdateItemDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Items.ItemDto",
                "typeSimple": "MP.Items.ItemDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Items.IItemAppService"
            },
            "DeleteAsyncById": {
              "uniqueName": "DeleteAsyncById",
              "name": "DeleteAsync",
              "httpMethod": "DELETE",
              "url": "api/app/item/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Items.IItemAppService"
            }
          }
        },
        "MP.Items.ItemSheetAppService": {
          "controllerName": "ItemSheet",
          "controllerGroupName": "ItemSheet",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "MP.Items.ItemSheetAppService",
          "interfaces": [
            {
              "type": "MP.Items.IItemSheetAppService",
              "name": "IItemSheetAppService",
              "methods": [
                {
                  "name": "GetAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Items.ItemSheetDto",
                    "typeSimple": "MP.Items.ItemSheetDto"
                  }
                },
                {
                  "name": "GetListAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto, Volo.Abp.Ddd.Application.Contracts",
                      "type": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
                      "typeSimple": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Items.ItemSheetDto>",
                    "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Items.ItemSheetDto>"
                  }
                },
                {
                  "name": "GetMyItemSheetsAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto, Volo.Abp.Ddd.Application.Contracts",
                      "type": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
                      "typeSimple": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Items.ItemSheetDto>",
                    "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Items.ItemSheetDto>"
                  }
                },
                {
                  "name": "CreateAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "MP.Items.CreateItemSheetDto, MP.Application.Contracts",
                      "type": "MP.Items.CreateItemSheetDto",
                      "typeSimple": "MP.Items.CreateItemSheetDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Items.ItemSheetDto",
                    "typeSimple": "MP.Items.ItemSheetDto"
                  }
                },
                {
                  "name": "AddItemToSheetAsync",
                  "parametersOnMethod": [
                    {
                      "name": "sheetId",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "input",
                      "typeAsString": "MP.Items.AddItemToSheetDto, MP.Application.Contracts",
                      "type": "MP.Items.AddItemToSheetDto",
                      "typeSimple": "MP.Items.AddItemToSheetDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Items.ItemSheetDto",
                    "typeSimple": "MP.Items.ItemSheetDto"
                  }
                },
                {
                  "name": "BatchAddItemsAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "MP.Items.BatchAddItemsDto, MP.Application.Contracts",
                      "type": "MP.Items.BatchAddItemsDto",
                      "typeSimple": "MP.Items.BatchAddItemsDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Items.BatchAddItemsResultDto",
                    "typeSimple": "MP.Items.BatchAddItemsResultDto"
                  }
                },
                {
                  "name": "RemoveItemFromSheetAsync",
                  "parametersOnMethod": [
                    {
                      "name": "sheetId",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "itemId",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Items.ItemSheetDto",
                    "typeSimple": "MP.Items.ItemSheetDto"
                  }
                },
                {
                  "name": "AssignToRentalAsync",
                  "parametersOnMethod": [
                    {
                      "name": "sheetId",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "input",
                      "typeAsString": "MP.Items.AssignSheetToRentalDto, MP.Application.Contracts",
                      "type": "MP.Items.AssignSheetToRentalDto",
                      "typeSimple": "MP.Items.AssignSheetToRentalDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Items.ItemSheetDto",
                    "typeSimple": "MP.Items.ItemSheetDto"
                  }
                },
                {
                  "name": "UnassignFromRentalAsync",
                  "parametersOnMethod": [
                    {
                      "name": "sheetId",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Items.ItemSheetDto",
                    "typeSimple": "MP.Items.ItemSheetDto"
                  }
                },
                {
                  "name": "GenerateBarcodesAsync",
                  "parametersOnMethod": [
                    {
                      "name": "sheetId",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Items.ItemSheetDto",
                    "typeSimple": "MP.Items.ItemSheetDto"
                  }
                },
                {
                  "name": "FindByBarcodeAsync",
                  "parametersOnMethod": [
                    {
                      "name": "barcode",
                      "typeAsString": "System.String, System.Private.CoreLib",
                      "type": "System.String",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Items.ItemSheetDto",
                    "typeSimple": "MP.Items.ItemSheetDto"
                  }
                },
                {
                  "name": "DeleteAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                }
              ]
            }
          ],
          "actions": {
            "GetAsyncById": {
              "uniqueName": "GetAsyncById",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/app/item-sheet/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Items.ItemSheetDto",
                "typeSimple": "MP.Items.ItemSheetDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Items.IItemSheetAppService"
            },
            "GetListAsyncByInput": {
              "uniqueName": "GetListAsyncByInput",
              "name": "GetListAsync",
              "httpMethod": "GET",
              "url": "api/app/item-sheet",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto, Volo.Abp.Ddd.Application.Contracts",
                  "type": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
                  "typeSimple": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Items.ItemSheetDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Items.ItemSheetDto>"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Items.IItemSheetAppService"
            },
            "GetMyItemSheetsAsyncByInput": {
              "uniqueName": "GetMyItemSheetsAsyncByInput",
              "name": "GetMyItemSheetsAsync",
              "httpMethod": "GET",
              "url": "api/app/item-sheet/my-item-sheets",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto, Volo.Abp.Ddd.Application.Contracts",
                  "type": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
                  "typeSimple": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Items.ItemSheetDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Items.ItemSheetDto>"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Items.IItemSheetAppService"
            },
            "CreateAsyncByInput": {
              "uniqueName": "CreateAsyncByInput",
              "name": "CreateAsync",
              "httpMethod": "POST",
              "url": "api/app/item-sheet",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "MP.Items.CreateItemSheetDto, MP.Application.Contracts",
                  "type": "MP.Items.CreateItemSheetDto",
                  "typeSimple": "MP.Items.CreateItemSheetDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "MP.Items.CreateItemSheetDto",
                  "typeSimple": "MP.Items.CreateItemSheetDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Items.ItemSheetDto",
                "typeSimple": "MP.Items.ItemSheetDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Items.IItemSheetAppService"
            },
            "AddItemToSheetAsyncBySheetIdAndInput": {
              "uniqueName": "AddItemToSheetAsyncBySheetIdAndInput",
              "name": "AddItemToSheetAsync",
              "httpMethod": "POST",
              "url": "api/app/item-sheet/item-to-sheet/{sheetId}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "sheetId",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "MP.Items.AddItemToSheetDto, MP.Application.Contracts",
                  "type": "MP.Items.AddItemToSheetDto",
                  "typeSimple": "MP.Items.AddItemToSheetDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "sheetId",
                  "name": "sheetId",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "MP.Items.AddItemToSheetDto",
                  "typeSimple": "MP.Items.AddItemToSheetDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Items.ItemSheetDto",
                "typeSimple": "MP.Items.ItemSheetDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Items.IItemSheetAppService"
            },
            "BatchAddItemsAsyncByInput": {
              "uniqueName": "BatchAddItemsAsyncByInput",
              "name": "BatchAddItemsAsync",
              "httpMethod": "POST",
              "url": "api/app/item-sheet/batch-add-items",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "MP.Items.BatchAddItemsDto, MP.Application.Contracts",
                  "type": "MP.Items.BatchAddItemsDto",
                  "typeSimple": "MP.Items.BatchAddItemsDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "MP.Items.BatchAddItemsDto",
                  "typeSimple": "MP.Items.BatchAddItemsDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Items.BatchAddItemsResultDto",
                "typeSimple": "MP.Items.BatchAddItemsResultDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Items.IItemSheetAppService"
            },
            "RemoveItemFromSheetAsyncBySheetIdAndItemId": {
              "uniqueName": "RemoveItemFromSheetAsyncBySheetIdAndItemId",
              "name": "RemoveItemFromSheetAsync",
              "httpMethod": "DELETE",
              "url": "api/app/item-sheet/item-from-sheet",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "sheetId",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "itemId",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "sheetId",
                  "name": "sheetId",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "itemId",
                  "name": "itemId",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Items.ItemSheetDto",
                "typeSimple": "MP.Items.ItemSheetDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Items.IItemSheetAppService"
            },
            "AssignToRentalAsyncBySheetIdAndInput": {
              "uniqueName": "AssignToRentalAsyncBySheetIdAndInput",
              "name": "AssignToRentalAsync",
              "httpMethod": "POST",
              "url": "api/app/item-sheet/assign-to-rental/{sheetId}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "sheetId",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "MP.Items.AssignSheetToRentalDto, MP.Application.Contracts",
                  "type": "MP.Items.AssignSheetToRentalDto",
                  "typeSimple": "MP.Items.AssignSheetToRentalDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "sheetId",
                  "name": "sheetId",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "MP.Items.AssignSheetToRentalDto",
                  "typeSimple": "MP.Items.AssignSheetToRentalDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Items.ItemSheetDto",
                "typeSimple": "MP.Items.ItemSheetDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Items.IItemSheetAppService"
            },
            "UnassignFromRentalAsyncBySheetId": {
              "uniqueName": "UnassignFromRentalAsyncBySheetId",
              "name": "UnassignFromRentalAsync",
              "httpMethod": "POST",
              "url": "api/app/item-sheet/unassign-from-rental/{sheetId}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "sheetId",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "sheetId",
                  "name": "sheetId",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Items.ItemSheetDto",
                "typeSimple": "MP.Items.ItemSheetDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Items.IItemSheetAppService"
            },
            "GenerateBarcodesAsyncBySheetId": {
              "uniqueName": "GenerateBarcodesAsyncBySheetId",
              "name": "GenerateBarcodesAsync",
              "httpMethod": "POST",
              "url": "api/app/item-sheet/generate-barcodes/{sheetId}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "sheetId",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "sheetId",
                  "name": "sheetId",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Items.ItemSheetDto",
                "typeSimple": "MP.Items.ItemSheetDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Items.IItemSheetAppService"
            },
            "FindByBarcodeAsyncByBarcode": {
              "uniqueName": "FindByBarcodeAsyncByBarcode",
              "name": "FindByBarcodeAsync",
              "httpMethod": "POST",
              "url": "api/app/item-sheet/find-by-barcode",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "barcode",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "barcode",
                  "name": "barcode",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Items.ItemSheetDto",
                "typeSimple": "MP.Items.ItemSheetDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Items.IItemSheetAppService"
            },
            "DeleteAsyncById": {
              "uniqueName": "DeleteAsyncById",
              "name": "DeleteAsync",
              "httpMethod": "DELETE",
              "url": "api/app/item-sheet/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Items.IItemSheetAppService"
            }
          }
        },
        "MP.Promotions.PromotionAppService": {
          "controllerName": "Promotion",
          "controllerGroupName": "Promotion",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "MP.Promotions.PromotionAppService",
          "interfaces": [
            {
              "type": "MP.Promotions.IPromotionAppService",
              "name": "IPromotionAppService",
              "methods": [
                {
                  "name": "GetListAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "MP.Promotions.GetPromotionsInput, MP.Application.Contracts",
                      "type": "MP.Promotions.GetPromotionsInput",
                      "typeSimple": "MP.Promotions.GetPromotionsInput",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Promotions.PromotionDto>",
                    "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Promotions.PromotionDto>"
                  }
                },
                {
                  "name": "GetAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Promotions.PromotionDto",
                    "typeSimple": "MP.Promotions.PromotionDto"
                  }
                },
                {
                  "name": "CreateAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "MP.Promotions.CreatePromotionDto, MP.Application.Contracts",
                      "type": "MP.Promotions.CreatePromotionDto",
                      "typeSimple": "MP.Promotions.CreatePromotionDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Promotions.PromotionDto",
                    "typeSimple": "MP.Promotions.PromotionDto"
                  }
                },
                {
                  "name": "UpdateAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "input",
                      "typeAsString": "MP.Promotions.UpdatePromotionDto, MP.Application.Contracts",
                      "type": "MP.Promotions.UpdatePromotionDto",
                      "typeSimple": "MP.Promotions.UpdatePromotionDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Promotions.PromotionDto",
                    "typeSimple": "MP.Promotions.PromotionDto"
                  }
                },
                {
                  "name": "DeleteAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                },
                {
                  "name": "ActivateAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Promotions.PromotionDto",
                    "typeSimple": "MP.Promotions.PromotionDto"
                  }
                },
                {
                  "name": "DeactivateAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Promotions.PromotionDto",
                    "typeSimple": "MP.Promotions.PromotionDto"
                  }
                },
                {
                  "name": "GetActivePromotionsAsync",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<MP.Promotions.PromotionDto>",
                    "typeSimple": "[MP.Promotions.PromotionDto]"
                  }
                },
                {
                  "name": "ValidatePromoCodeAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "MP.Promotions.ValidatePromoCodeInput, MP.Application.Contracts",
                      "type": "MP.Promotions.ValidatePromoCodeInput",
                      "typeSimple": "MP.Promotions.ValidatePromoCodeInput",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Promotions.PromotionDto",
                    "typeSimple": "MP.Promotions.PromotionDto"
                  }
                },
                {
                  "name": "CalculateDiscountAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "MP.Promotions.CalculateDiscountInput, MP.Application.Contracts",
                      "type": "MP.Promotions.CalculateDiscountInput",
                      "typeSimple": "MP.Promotions.CalculateDiscountInput",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Promotions.CalculateDiscountOutput",
                    "typeSimple": "MP.Promotions.CalculateDiscountOutput"
                  }
                },
                {
                  "name": "ApplyPromotionToCartAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "MP.Promotions.ApplyPromotionToCartInput, MP.Application.Contracts",
                      "type": "MP.Promotions.ApplyPromotionToCartInput",
                      "typeSimple": "MP.Promotions.ApplyPromotionToCartInput",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                },
                {
                  "name": "RemovePromotionFromCartAsync",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                }
              ]
            }
          ],
          "actions": {
            "GetListAsyncByInput": {
              "uniqueName": "GetListAsyncByInput",
              "name": "GetListAsync",
              "httpMethod": "GET",
              "url": "api/app/promotion",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "MP.Promotions.GetPromotionsInput, MP.Application.Contracts",
                  "type": "MP.Promotions.GetPromotionsInput",
                  "typeSimple": "MP.Promotions.GetPromotionsInput",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "FilterText",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "IsActive",
                  "jsonName": null,
                  "type": "System.Boolean?",
                  "typeSimple": "boolean?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Type",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Promotions.PromotionDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Promotions.PromotionDto>"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Promotions.IPromotionAppService"
            },
            "GetAsyncById": {
              "uniqueName": "GetAsyncById",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/app/promotion/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Promotions.PromotionDto",
                "typeSimple": "MP.Promotions.PromotionDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Promotions.IPromotionAppService"
            },
            "CreateAsyncByInput": {
              "uniqueName": "CreateAsyncByInput",
              "name": "CreateAsync",
              "httpMethod": "POST",
              "url": "api/app/promotion",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "MP.Promotions.CreatePromotionDto, MP.Application.Contracts",
                  "type": "MP.Promotions.CreatePromotionDto",
                  "typeSimple": "MP.Promotions.CreatePromotionDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "MP.Promotions.CreatePromotionDto",
                  "typeSimple": "MP.Promotions.CreatePromotionDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Promotions.PromotionDto",
                "typeSimple": "MP.Promotions.PromotionDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Promotions.IPromotionAppService"
            },
            "UpdateAsyncByIdAndInput": {
              "uniqueName": "UpdateAsyncByIdAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/app/promotion/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "MP.Promotions.UpdatePromotionDto, MP.Application.Contracts",
                  "type": "MP.Promotions.UpdatePromotionDto",
                  "typeSimple": "MP.Promotions.UpdatePromotionDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "MP.Promotions.UpdatePromotionDto",
                  "typeSimple": "MP.Promotions.UpdatePromotionDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Promotions.PromotionDto",
                "typeSimple": "MP.Promotions.PromotionDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Promotions.IPromotionAppService"
            },
            "DeleteAsyncById": {
              "uniqueName": "DeleteAsyncById",
              "name": "DeleteAsync",
              "httpMethod": "DELETE",
              "url": "api/app/promotion/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Promotions.IPromotionAppService"
            },
            "ActivateAsyncById": {
              "uniqueName": "ActivateAsyncById",
              "name": "ActivateAsync",
              "httpMethod": "POST",
              "url": "api/app/promotion/{id}/activate",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Promotions.PromotionDto",
                "typeSimple": "MP.Promotions.PromotionDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Promotions.IPromotionAppService"
            },
            "DeactivateAsyncById": {
              "uniqueName": "DeactivateAsyncById",
              "name": "DeactivateAsync",
              "httpMethod": "POST",
              "url": "api/app/promotion/{id}/deactivate",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Promotions.PromotionDto",
                "typeSimple": "MP.Promotions.PromotionDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Promotions.IPromotionAppService"
            },
            "GetActivePromotionsAsync": {
              "uniqueName": "GetActivePromotionsAsync",
              "name": "GetActivePromotionsAsync",
              "httpMethod": "GET",
              "url": "api/app/promotion/active-promotions",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "System.Collections.Generic.List<MP.Promotions.PromotionDto>",
                "typeSimple": "[MP.Promotions.PromotionDto]"
              },
              "allowAnonymous": true,
              "implementFrom": "MP.Promotions.IPromotionAppService"
            },
            "ValidatePromoCodeAsyncByInput": {
              "uniqueName": "ValidatePromoCodeAsyncByInput",
              "name": "ValidatePromoCodeAsync",
              "httpMethod": "POST",
              "url": "api/app/promotion/validate-promo-code",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "MP.Promotions.ValidatePromoCodeInput, MP.Application.Contracts",
                  "type": "MP.Promotions.ValidatePromoCodeInput",
                  "typeSimple": "MP.Promotions.ValidatePromoCodeInput",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "MP.Promotions.ValidatePromoCodeInput",
                  "typeSimple": "MP.Promotions.ValidatePromoCodeInput",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Promotions.PromotionDto",
                "typeSimple": "MP.Promotions.PromotionDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Promotions.IPromotionAppService"
            },
            "CalculateDiscountAsyncByInput": {
              "uniqueName": "CalculateDiscountAsyncByInput",
              "name": "CalculateDiscountAsync",
              "httpMethod": "POST",
              "url": "api/app/promotion/calculate-discount",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "MP.Promotions.CalculateDiscountInput, MP.Application.Contracts",
                  "type": "MP.Promotions.CalculateDiscountInput",
                  "typeSimple": "MP.Promotions.CalculateDiscountInput",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "MP.Promotions.CalculateDiscountInput",
                  "typeSimple": "MP.Promotions.CalculateDiscountInput",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Promotions.CalculateDiscountOutput",
                "typeSimple": "MP.Promotions.CalculateDiscountOutput"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Promotions.IPromotionAppService"
            },
            "ApplyPromotionToCartAsyncByInput": {
              "uniqueName": "ApplyPromotionToCartAsyncByInput",
              "name": "ApplyPromotionToCartAsync",
              "httpMethod": "POST",
              "url": "api/app/promotion/apply-promotion-to-cart",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "MP.Promotions.ApplyPromotionToCartInput, MP.Application.Contracts",
                  "type": "MP.Promotions.ApplyPromotionToCartInput",
                  "typeSimple": "MP.Promotions.ApplyPromotionToCartInput",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "MP.Promotions.ApplyPromotionToCartInput",
                  "typeSimple": "MP.Promotions.ApplyPromotionToCartInput",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Promotions.IPromotionAppService"
            },
            "RemovePromotionFromCartAsync": {
              "uniqueName": "RemovePromotionFromCartAsync",
              "name": "RemovePromotionFromCartAsync",
              "httpMethod": "DELETE",
              "url": "api/app/promotion/promotion-from-cart",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Promotions.IPromotionAppService"
            }
          }
        },
        "MP.Rentals.RentalAppService": {
          "controllerName": "Rental",
          "controllerGroupName": "Rental",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "MP.Rentals.RentalAppService",
          "interfaces": [
            {
              "type": "MP.Rentals.IRentalAppService",
              "name": "IRentalAppService",
              "methods": [
                {
                  "name": "GetAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Rentals.RentalDto",
                    "typeSimple": "MP.Rentals.RentalDto"
                  }
                },
                {
                  "name": "GetListAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "MP.Rentals.GetRentalListDto, MP.Application.Contracts",
                      "type": "MP.Rentals.GetRentalListDto",
                      "typeSimple": "MP.Rentals.GetRentalListDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Rentals.RentalListDto>",
                    "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Rentals.RentalListDto>"
                  }
                },
                {
                  "name": "CreateAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "MP.Rentals.CreateRentalDto, MP.Application.Contracts",
                      "type": "MP.Rentals.CreateRentalDto",
                      "typeSimple": "MP.Rentals.CreateRentalDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Rentals.RentalDto",
                    "typeSimple": "MP.Rentals.RentalDto"
                  }
                },
                {
                  "name": "UpdateAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "input",
                      "typeAsString": "MP.Rentals.UpdateRentalDto, MP.Application.Contracts",
                      "type": "MP.Rentals.UpdateRentalDto",
                      "typeSimple": "MP.Rentals.UpdateRentalDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Rentals.RentalDto",
                    "typeSimple": "MP.Rentals.RentalDto"
                  }
                },
                {
                  "name": "DeleteAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                },
                {
                  "name": "PayAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "input",
                      "typeAsString": "MP.Rentals.PaymentDto, MP.Application.Contracts",
                      "type": "MP.Rentals.PaymentDto",
                      "typeSimple": "MP.Rentals.PaymentDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Rentals.RentalDto",
                    "typeSimple": "MP.Rentals.RentalDto"
                  }
                },
                {
                  "name": "StartRentalAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Rentals.RentalDto",
                    "typeSimple": "MP.Rentals.RentalDto"
                  }
                },
                {
                  "name": "CompleteRentalAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Rentals.RentalDto",
                    "typeSimple": "MP.Rentals.RentalDto"
                  }
                },
                {
                  "name": "CancelRentalAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "reason",
                      "typeAsString": "System.String, System.Private.CoreLib",
                      "type": "System.String",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Rentals.RentalDto",
                    "typeSimple": "MP.Rentals.RentalDto"
                  }
                },
                {
                  "name": "ExtendRentalAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "input",
                      "typeAsString": "MP.Rentals.ExtendRentalDto, MP.Application.Contracts",
                      "type": "MP.Rentals.ExtendRentalDto",
                      "typeSimple": "MP.Rentals.ExtendRentalDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Rentals.RentalDto",
                    "typeSimple": "MP.Rentals.RentalDto"
                  }
                },
                {
                  "name": "GetActiveRentalForBoothAsync",
                  "parametersOnMethod": [
                    {
                      "name": "boothId",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Rentals.RentalDto",
                    "typeSimple": "MP.Rentals.RentalDto"
                  }
                },
                {
                  "name": "GetMyRentalsAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "MP.Rentals.GetRentalListDto, MP.Application.Contracts",
                      "type": "MP.Rentals.GetRentalListDto",
                      "typeSimple": "MP.Rentals.GetRentalListDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Rentals.RentalListDto>",
                    "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Rentals.RentalListDto>"
                  }
                },
                {
                  "name": "CreateMyRentalAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "MP.Rentals.CreateMyRentalDto, MP.Application.Contracts",
                      "type": "MP.Rentals.CreateMyRentalDto",
                      "typeSimple": "MP.Rentals.CreateMyRentalDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Rentals.RentalDto",
                    "typeSimple": "MP.Rentals.RentalDto"
                  }
                },
                {
                  "name": "CreateMyRentalWithPaymentAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "MP.Rentals.CreateRentalWithPaymentDto, MP.Application.Contracts",
                      "type": "MP.Rentals.CreateRentalWithPaymentDto",
                      "typeSimple": "MP.Rentals.CreateRentalWithPaymentDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Rentals.CreateRentalWithPaymentResultDto",
                    "typeSimple": "MP.Rentals.CreateRentalWithPaymentResultDto"
                  }
                },
                {
                  "name": "GetActiveRentalsAsync",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<MP.Rentals.RentalListDto>",
                    "typeSimple": "[MP.Rentals.RentalListDto]"
                  }
                },
                {
                  "name": "GetExpiredRentalsAsync",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<MP.Rentals.RentalListDto>",
                    "typeSimple": "[MP.Rentals.RentalListDto]"
                  }
                },
                {
                  "name": "GetOverdueRentalsAsync",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<MP.Rentals.RentalListDto>",
                    "typeSimple": "[MP.Rentals.RentalListDto]"
                  }
                },
                {
                  "name": "GetBoothCalendarAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "MP.Rentals.BoothCalendarRequestDto, MP.Application.Contracts",
                      "type": "MP.Rentals.BoothCalendarRequestDto",
                      "typeSimple": "MP.Rentals.BoothCalendarRequestDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Rentals.BoothCalendarResponseDto",
                    "typeSimple": "MP.Rentals.BoothCalendarResponseDto"
                  }
                },
                {
                  "name": "CheckAvailabilityAsync",
                  "parametersOnMethod": [
                    {
                      "name": "boothId",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "startDate",
                      "typeAsString": "System.DateTime, System.Private.CoreLib",
                      "type": "System.DateTime",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "endDate",
                      "typeAsString": "System.DateTime, System.Private.CoreLib",
                      "type": "System.DateTime",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Boolean",
                    "typeSimple": "boolean"
                  }
                },
                {
                  "name": "CalculateCostAsync",
                  "parametersOnMethod": [
                    {
                      "name": "boothId",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "boothTypeId",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "startDate",
                      "typeAsString": "System.DateTime, System.Private.CoreLib",
                      "type": "System.DateTime",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "endDate",
                      "typeAsString": "System.DateTime, System.Private.CoreLib",
                      "type": "System.DateTime",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Decimal",
                    "typeSimple": "number"
                  }
                },
                {
                  "name": "GetMaxExtensionDateAsync",
                  "parametersOnMethod": [
                    {
                      "name": "boothId",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "currentRentalEndDate",
                      "typeAsString": "System.DateTime, System.Private.CoreLib",
                      "type": "System.DateTime",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Rentals.MaxExtensionDateResponseDto",
                    "typeSimple": "MP.Rentals.MaxExtensionDateResponseDto"
                  }
                },
                {
                  "name": "AdminManageBoothRentalAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "MP.Rentals.AdminManageBoothRentalDto, MP.Application.Contracts",
                      "type": "MP.Rentals.AdminManageBoothRentalDto",
                      "typeSimple": "MP.Rentals.AdminManageBoothRentalDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "MP.Rentals.RentalDto",
                    "typeSimple": "MP.Rentals.RentalDto"
                  }
                }
              ]
            }
          ],
          "actions": {
            "GetAsyncById": {
              "uniqueName": "GetAsyncById",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/app/rental/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Rentals.RentalDto",
                "typeSimple": "MP.Rentals.RentalDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Rentals.IRentalAppService"
            },
            "GetListAsyncByInput": {
              "uniqueName": "GetListAsyncByInput",
              "name": "GetListAsync",
              "httpMethod": "GET",
              "url": "api/app/rental",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "MP.Rentals.GetRentalListDto, MP.Application.Contracts",
                  "type": "MP.Rentals.GetRentalListDto",
                  "typeSimple": "MP.Rentals.GetRentalListDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Filter",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Status",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "UserId",
                  "jsonName": null,
                  "type": "System.Guid?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "BoothId",
                  "jsonName": null,
                  "type": "System.Guid?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "FromDate",
                  "jsonName": null,
                  "type": "System.DateTime?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "ToDate",
                  "jsonName": null,
                  "type": "System.DateTime?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "IsOverdue",
                  "jsonName": null,
                  "type": "System.Boolean?",
                  "typeSimple": "boolean?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Rentals.RentalListDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Rentals.RentalListDto>"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Rentals.IRentalAppService"
            },
            "CreateAsyncByInput": {
              "uniqueName": "CreateAsyncByInput",
              "name": "CreateAsync",
              "httpMethod": "POST",
              "url": "api/app/rental",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "MP.Rentals.CreateRentalDto, MP.Application.Contracts",
                  "type": "MP.Rentals.CreateRentalDto",
                  "typeSimple": "MP.Rentals.CreateRentalDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "MP.Rentals.CreateRentalDto",
                  "typeSimple": "MP.Rentals.CreateRentalDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Rentals.RentalDto",
                "typeSimple": "MP.Rentals.RentalDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Rentals.IRentalAppService"
            },
            "UpdateAsyncByIdAndInput": {
              "uniqueName": "UpdateAsyncByIdAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/app/rental/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "MP.Rentals.UpdateRentalDto, MP.Application.Contracts",
                  "type": "MP.Rentals.UpdateRentalDto",
                  "typeSimple": "MP.Rentals.UpdateRentalDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "MP.Rentals.UpdateRentalDto",
                  "typeSimple": "MP.Rentals.UpdateRentalDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Rentals.RentalDto",
                "typeSimple": "MP.Rentals.RentalDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Rentals.IRentalAppService"
            },
            "DeleteAsyncById": {
              "uniqueName": "DeleteAsyncById",
              "name": "DeleteAsync",
              "httpMethod": "DELETE",
              "url": "api/app/rental/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Rentals.IRentalAppService"
            },
            "PayAsyncByIdAndInput": {
              "uniqueName": "PayAsyncByIdAndInput",
              "name": "PayAsync",
              "httpMethod": "POST",
              "url": "api/app/rental/{id}/pay",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "MP.Rentals.PaymentDto, MP.Application.Contracts",
                  "type": "MP.Rentals.PaymentDto",
                  "typeSimple": "MP.Rentals.PaymentDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "MP.Rentals.PaymentDto",
                  "typeSimple": "MP.Rentals.PaymentDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Rentals.RentalDto",
                "typeSimple": "MP.Rentals.RentalDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Rentals.IRentalAppService"
            },
            "StartRentalAsyncById": {
              "uniqueName": "StartRentalAsyncById",
              "name": "StartRentalAsync",
              "httpMethod": "POST",
              "url": "api/app/rental/{id}/start-rental",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Rentals.RentalDto",
                "typeSimple": "MP.Rentals.RentalDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Rentals.IRentalAppService"
            },
            "CompleteRentalAsyncById": {
              "uniqueName": "CompleteRentalAsyncById",
              "name": "CompleteRentalAsync",
              "httpMethod": "POST",
              "url": "api/app/rental/{id}/complete-rental",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Rentals.RentalDto",
                "typeSimple": "MP.Rentals.RentalDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Rentals.IRentalAppService"
            },
            "CancelRentalAsyncByIdAndReason": {
              "uniqueName": "CancelRentalAsyncByIdAndReason",
              "name": "CancelRentalAsync",
              "httpMethod": "POST",
              "url": "api/app/rental/{id}/cancel-rental",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "reason",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "reason",
                  "name": "reason",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Rentals.RentalDto",
                "typeSimple": "MP.Rentals.RentalDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Rentals.IRentalAppService"
            },
            "ExtendRentalAsyncByIdAndInput": {
              "uniqueName": "ExtendRentalAsyncByIdAndInput",
              "name": "ExtendRentalAsync",
              "httpMethod": "POST",
              "url": "api/app/rental/{id}/extend-rental",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "MP.Rentals.ExtendRentalDto, MP.Application.Contracts",
                  "type": "MP.Rentals.ExtendRentalDto",
                  "typeSimple": "MP.Rentals.ExtendRentalDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "MP.Rentals.ExtendRentalDto",
                  "typeSimple": "MP.Rentals.ExtendRentalDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Rentals.RentalDto",
                "typeSimple": "MP.Rentals.RentalDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Rentals.IRentalAppService"
            },
            "GetActiveRentalForBoothAsyncByBoothId": {
              "uniqueName": "GetActiveRentalForBoothAsyncByBoothId",
              "name": "GetActiveRentalForBoothAsync",
              "httpMethod": "GET",
              "url": "api/app/rental/active-rental-for-booth/{boothId}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "boothId",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "boothId",
                  "name": "boothId",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Rentals.RentalDto",
                "typeSimple": "MP.Rentals.RentalDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Rentals.IRentalAppService"
            },
            "GetMyRentalsAsyncByInput": {
              "uniqueName": "GetMyRentalsAsyncByInput",
              "name": "GetMyRentalsAsync",
              "httpMethod": "GET",
              "url": "api/app/rental/my-rentals",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "MP.Rentals.GetRentalListDto, MP.Application.Contracts",
                  "type": "MP.Rentals.GetRentalListDto",
                  "typeSimple": "MP.Rentals.GetRentalListDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Filter",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Status",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "UserId",
                  "jsonName": null,
                  "type": "System.Guid?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "BoothId",
                  "jsonName": null,
                  "type": "System.Guid?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "FromDate",
                  "jsonName": null,
                  "type": "System.DateTime?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "ToDate",
                  "jsonName": null,
                  "type": "System.DateTime?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "IsOverdue",
                  "jsonName": null,
                  "type": "System.Boolean?",
                  "typeSimple": "boolean?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Rentals.RentalListDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Rentals.RentalListDto>"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Rentals.IRentalAppService"
            },
            "CreateMyRentalAsyncByInput": {
              "uniqueName": "CreateMyRentalAsyncByInput",
              "name": "CreateMyRentalAsync",
              "httpMethod": "POST",
              "url": "api/app/rental/my-rental",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "MP.Rentals.CreateMyRentalDto, MP.Application.Contracts",
                  "type": "MP.Rentals.CreateMyRentalDto",
                  "typeSimple": "MP.Rentals.CreateMyRentalDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "MP.Rentals.CreateMyRentalDto",
                  "typeSimple": "MP.Rentals.CreateMyRentalDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Rentals.RentalDto",
                "typeSimple": "MP.Rentals.RentalDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Rentals.IRentalAppService"
            },
            "CreateMyRentalWithPaymentAsyncByInput": {
              "uniqueName": "CreateMyRentalWithPaymentAsyncByInput",
              "name": "CreateMyRentalWithPaymentAsync",
              "httpMethod": "POST",
              "url": "api/app/rental/my-rental-with-payment",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "MP.Rentals.CreateRentalWithPaymentDto, MP.Application.Contracts",
                  "type": "MP.Rentals.CreateRentalWithPaymentDto",
                  "typeSimple": "MP.Rentals.CreateRentalWithPaymentDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "MP.Rentals.CreateRentalWithPaymentDto",
                  "typeSimple": "MP.Rentals.CreateRentalWithPaymentDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Rentals.CreateRentalWithPaymentResultDto",
                "typeSimple": "MP.Rentals.CreateRentalWithPaymentResultDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Rentals.IRentalAppService"
            },
            "GetActiveRentalsAsync": {
              "uniqueName": "GetActiveRentalsAsync",
              "name": "GetActiveRentalsAsync",
              "httpMethod": "GET",
              "url": "api/app/rental/active-rentals",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "System.Collections.Generic.List<MP.Rentals.RentalListDto>",
                "typeSimple": "[MP.Rentals.RentalListDto]"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Rentals.IRentalAppService"
            },
            "GetExpiredRentalsAsync": {
              "uniqueName": "GetExpiredRentalsAsync",
              "name": "GetExpiredRentalsAsync",
              "httpMethod": "GET",
              "url": "api/app/rental/expired-rentals",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "System.Collections.Generic.List<MP.Rentals.RentalListDto>",
                "typeSimple": "[MP.Rentals.RentalListDto]"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Rentals.IRentalAppService"
            },
            "GetOverdueRentalsAsync": {
              "uniqueName": "GetOverdueRentalsAsync",
              "name": "GetOverdueRentalsAsync",
              "httpMethod": "GET",
              "url": "api/app/rental/overdue-rentals",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "System.Collections.Generic.List<MP.Rentals.RentalListDto>",
                "typeSimple": "[MP.Rentals.RentalListDto]"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Rentals.IRentalAppService"
            },
            "GetBoothCalendarAsyncByInput": {
              "uniqueName": "GetBoothCalendarAsyncByInput",
              "name": "GetBoothCalendarAsync",
              "httpMethod": "GET",
              "url": "api/app/rental/booth-calendar",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "MP.Rentals.BoothCalendarRequestDto, MP.Application.Contracts",
                  "type": "MP.Rentals.BoothCalendarRequestDto",
                  "typeSimple": "MP.Rentals.BoothCalendarRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "BoothId",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "StartDate",
                  "jsonName": null,
                  "type": "System.DateTime",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "EndDate",
                  "jsonName": null,
                  "type": "System.DateTime",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "ExcludeCartId",
                  "jsonName": null,
                  "type": "System.Guid?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "MP.Rentals.BoothCalendarResponseDto",
                "typeSimple": "MP.Rentals.BoothCalendarResponseDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Rentals.IRentalAppService"
            },
            "CheckAvailabilityAsyncByBoothIdAndStartDateAndEndDate": {
              "uniqueName": "CheckAvailabilityAsyncByBoothIdAndStartDateAndEndDate",
              "name": "CheckAvailabilityAsync",
              "httpMethod": "POST",
              "url": "api/app/rental/check-availability/{boothId}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "boothId",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "startDate",
                  "typeAsString": "System.DateTime, System.Private.CoreLib",
                  "type": "System.DateTime",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "endDate",
                  "typeAsString": "System.DateTime, System.Private.CoreLib",
                  "type": "System.DateTime",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "boothId",
                  "name": "boothId",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "startDate",
                  "name": "startDate",
                  "jsonName": null,
                  "type": "System.DateTime",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "endDate",
                  "name": "endDate",
                  "jsonName": null,
                  "type": "System.DateTime",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Boolean",
                "typeSimple": "boolean"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Rentals.IRentalAppService"
            },
            "CalculateCostAsyncByBoothIdAndBoothTypeIdAndStartDateAndEndDate": {
              "uniqueName": "CalculateCostAsyncByBoothIdAndBoothTypeIdAndStartDateAndEndDate",
              "name": "CalculateCostAsync",
              "httpMethod": "POST",
              "url": "api/app/rental/calculate-cost",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "boothId",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "boothTypeId",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "startDate",
                  "typeAsString": "System.DateTime, System.Private.CoreLib",
                  "type": "System.DateTime",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "endDate",
                  "typeAsString": "System.DateTime, System.Private.CoreLib",
                  "type": "System.DateTime",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "boothId",
                  "name": "boothId",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "boothTypeId",
                  "name": "boothTypeId",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "startDate",
                  "name": "startDate",
                  "jsonName": null,
                  "type": "System.DateTime",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "endDate",
                  "name": "endDate",
                  "jsonName": null,
                  "type": "System.DateTime",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Decimal",
                "typeSimple": "number"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Rentals.IRentalAppService"
            },
            "GetMaxExtensionDateAsyncByBoothIdAndCurrentRentalEndDate": {
              "uniqueName": "GetMaxExtensionDateAsyncByBoothIdAndCurrentRentalEndDate",
              "name": "GetMaxExtensionDateAsync",
              "httpMethod": "GET",
              "url": "api/app/rental/max-extension-date/{boothId}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "boothId",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "currentRentalEndDate",
                  "typeAsString": "System.DateTime, System.Private.CoreLib",
                  "type": "System.DateTime",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "boothId",
                  "name": "boothId",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "currentRentalEndDate",
                  "name": "currentRentalEndDate",
                  "jsonName": null,
                  "type": "System.DateTime",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Rentals.MaxExtensionDateResponseDto",
                "typeSimple": "MP.Rentals.MaxExtensionDateResponseDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Rentals.IRentalAppService"
            },
            "AdminManageBoothRentalAsyncByInput": {
              "uniqueName": "AdminManageBoothRentalAsyncByInput",
              "name": "AdminManageBoothRentalAsync",
              "httpMethod": "POST",
              "url": "api/app/rental/admin-manage-booth-rental",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "MP.Rentals.AdminManageBoothRentalDto, MP.Application.Contracts",
                  "type": "MP.Rentals.AdminManageBoothRentalDto",
                  "typeSimple": "MP.Rentals.AdminManageBoothRentalDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "MP.Rentals.AdminManageBoothRentalDto",
                  "typeSimple": "MP.Rentals.AdminManageBoothRentalDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "MP.Rentals.RentalDto",
                "typeSimple": "MP.Rentals.RentalDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Rentals.IRentalAppService"
            }
          }
        },
        "MP.Tenants.TenantCurrencyAppService": {
          "controllerName": "TenantCurrency",
          "controllerGroupName": "TenantCurrency",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "MP.Tenants.TenantCurrencyAppService",
          "interfaces": [
            {
              "type": "MP.Tenants.ITenantCurrencyAppService",
              "name": "ITenantCurrencyAppService",
              "methods": [
                {
                  "name": "GetTenantCurrencyAsync",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "MP.Tenants.TenantCurrencyDto",
                    "typeSimple": "MP.Tenants.TenantCurrencyDto"
                  }
                },
                {
                  "name": "UpdateTenantCurrencyAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "MP.Tenants.TenantCurrencyDto, MP.Application.Contracts",
                      "type": "MP.Tenants.TenantCurrencyDto",
                      "typeSimple": "MP.Tenants.TenantCurrencyDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                }
              ]
            }
          ],
          "actions": {
            "GetTenantCurrencyAsync": {
              "uniqueName": "GetTenantCurrencyAsync",
              "name": "GetTenantCurrencyAsync",
              "httpMethod": "GET",
              "url": "api/app/tenant-currency/tenant-currency",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "MP.Tenants.TenantCurrencyDto",
                "typeSimple": "MP.Tenants.TenantCurrencyDto"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Tenants.ITenantCurrencyAppService"
            },
            "UpdateTenantCurrencyAsyncByInput": {
              "uniqueName": "UpdateTenantCurrencyAsyncByInput",
              "name": "UpdateTenantCurrencyAsync",
              "httpMethod": "PUT",
              "url": "api/app/tenant-currency/tenant-currency",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "MP.Tenants.TenantCurrencyDto, MP.Application.Contracts",
                  "type": "MP.Tenants.TenantCurrencyDto",
                  "typeSimple": "MP.Tenants.TenantCurrencyDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "MP.Tenants.TenantCurrencyDto",
                  "typeSimple": "MP.Tenants.TenantCurrencyDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": false,
              "implementFrom": "MP.Tenants.ITenantCurrencyAppService"
            }
          }
        }
      }
    },
    "featureManagement": {
      "rootPath": "featureManagement",
      "remoteServiceName": "AbpFeatureManagement",
      "controllers": {
        "Volo.Abp.FeatureManagement.FeaturesController": {
          "controllerName": "Features",
          "controllerGroupName": "Features",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "Volo.Abp.FeatureManagement.FeaturesController",
          "interfaces": [
            {
              "type": "Volo.Abp.FeatureManagement.IFeatureAppService",
              "name": "IFeatureAppService",
              "methods": [
                {
                  "name": "GetAsync",
                  "parametersOnMethod": [
                    {
                      "name": "providerName",
                      "typeAsString": "System.String, System.Private.CoreLib",
                      "type": "System.String",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "providerKey",
                      "typeAsString": "System.String, System.Private.CoreLib",
                      "type": "System.String",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.FeatureManagement.GetFeatureListResultDto",
                    "typeSimple": "Volo.Abp.FeatureManagement.GetFeatureListResultDto"
                  }
                },
                {
                  "name": "UpdateAsync",
                  "parametersOnMethod": [
                    {
                      "name": "providerName",
                      "typeAsString": "System.String, System.Private.CoreLib",
                      "type": "System.String",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "providerKey",
                      "typeAsString": "System.String, System.Private.CoreLib",
                      "type": "System.String",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "input",
                      "typeAsString": "Volo.Abp.FeatureManagement.UpdateFeaturesDto, Volo.Abp.FeatureManagement.Application.Contracts",
                      "type": "Volo.Abp.FeatureManagement.UpdateFeaturesDto",
                      "typeSimple": "Volo.Abp.FeatureManagement.UpdateFeaturesDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                },
                {
                  "name": "DeleteAsync",
                  "parametersOnMethod": [
                    {
                      "name": "providerName",
                      "typeAsString": "System.String, System.Private.CoreLib",
                      "type": "System.String",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "providerKey",
                      "typeAsString": "System.String, System.Private.CoreLib",
                      "type": "System.String",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                }
              ]
            }
          ],
          "actions": {
            "GetAsyncByProviderNameAndProviderKey": {
              "uniqueName": "GetAsyncByProviderNameAndProviderKey",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/feature-management/features",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "providerName",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "providerKey",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "providerName",
                  "name": "providerName",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "providerKey",
                  "name": "providerKey",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.FeatureManagement.GetFeatureListResultDto",
                "typeSimple": "Volo.Abp.FeatureManagement.GetFeatureListResultDto"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.FeatureManagement.IFeatureAppService"
            },
            "UpdateAsyncByProviderNameAndProviderKeyAndInput": {
              "uniqueName": "UpdateAsyncByProviderNameAndProviderKeyAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/feature-management/features",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "providerName",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "providerKey",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.FeatureManagement.UpdateFeaturesDto, Volo.Abp.FeatureManagement.Application.Contracts",
                  "type": "Volo.Abp.FeatureManagement.UpdateFeaturesDto",
                  "typeSimple": "Volo.Abp.FeatureManagement.UpdateFeaturesDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "providerName",
                  "name": "providerName",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "providerKey",
                  "name": "providerKey",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "Volo.Abp.FeatureManagement.UpdateFeaturesDto",
                  "typeSimple": "Volo.Abp.FeatureManagement.UpdateFeaturesDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.FeatureManagement.IFeatureAppService"
            },
            "DeleteAsyncByProviderNameAndProviderKey": {
              "uniqueName": "DeleteAsyncByProviderNameAndProviderKey",
              "name": "DeleteAsync",
              "httpMethod": "DELETE",
              "url": "api/feature-management/features",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "providerName",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "providerKey",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "providerName",
                  "name": "providerName",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "providerKey",
                  "name": "providerKey",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.FeatureManagement.IFeatureAppService"
            }
          }
        }
      }
    },
    "identity": {
      "rootPath": "identity",
      "remoteServiceName": "AbpIdentity",
      "controllers": {
        "Volo.Abp.Identity.IdentityRoleController": {
          "controllerName": "IdentityRole",
          "controllerGroupName": "Role",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "Volo.Abp.Identity.IdentityRoleController",
          "interfaces": [
            {
              "type": "Volo.Abp.Identity.IIdentityRoleAppService",
              "name": "IIdentityRoleAppService",
              "methods": [
                {
                  "name": "GetAllListAsync",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Identity.IdentityRoleDto>",
                    "typeSimple": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Identity.IdentityRoleDto>"
                  }
                },
                {
                  "name": "GetAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Identity.IdentityRoleDto",
                    "typeSimple": "Volo.Abp.Identity.IdentityRoleDto"
                  }
                },
                {
                  "name": "GetListAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "Volo.Abp.Identity.GetIdentityRolesInput, Volo.Abp.Identity.Application.Contracts",
                      "type": "Volo.Abp.Identity.GetIdentityRolesInput",
                      "typeSimple": "Volo.Abp.Identity.GetIdentityRolesInput",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Application.Dtos.PagedResultDto<Volo.Abp.Identity.IdentityRoleDto>",
                    "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<Volo.Abp.Identity.IdentityRoleDto>"
                  }
                },
                {
                  "name": "CreateAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "Volo.Abp.Identity.IdentityRoleCreateDto, Volo.Abp.Identity.Application.Contracts",
                      "type": "Volo.Abp.Identity.IdentityRoleCreateDto",
                      "typeSimple": "Volo.Abp.Identity.IdentityRoleCreateDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Identity.IdentityRoleDto",
                    "typeSimple": "Volo.Abp.Identity.IdentityRoleDto"
                  }
                },
                {
                  "name": "UpdateAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "input",
                      "typeAsString": "Volo.Abp.Identity.IdentityRoleUpdateDto, Volo.Abp.Identity.Application.Contracts",
                      "type": "Volo.Abp.Identity.IdentityRoleUpdateDto",
                      "typeSimple": "Volo.Abp.Identity.IdentityRoleUpdateDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Identity.IdentityRoleDto",
                    "typeSimple": "Volo.Abp.Identity.IdentityRoleDto"
                  }
                },
                {
                  "name": "DeleteAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                }
              ]
            }
          ],
          "actions": {
            "GetAllListAsync": {
              "uniqueName": "GetAllListAsync",
              "name": "GetAllListAsync",
              "httpMethod": "GET",
              "url": "api/identity/roles/all",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Identity.IdentityRoleDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Identity.IdentityRoleDto>"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Identity.IIdentityRoleAppService"
            },
            "GetListAsyncByInput": {
              "uniqueName": "GetListAsyncByInput",
              "name": "GetListAsync",
              "httpMethod": "GET",
              "url": "api/identity/roles",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Identity.GetIdentityRolesInput, Volo.Abp.Identity.Application.Contracts",
                  "type": "Volo.Abp.Identity.GetIdentityRolesInput",
                  "typeSimple": "Volo.Abp.Identity.GetIdentityRolesInput",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Filter",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "ExtraProperties",
                  "jsonName": null,
                  "type": "Volo.Abp.Data.ExtraPropertyDictionary",
                  "typeSimple": "{string:object}",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<Volo.Abp.Identity.IdentityRoleDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<Volo.Abp.Identity.IdentityRoleDto>"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Application.Services.IReadOnlyAppService<Volo.Abp.Identity.IdentityRoleDto,Volo.Abp.Identity.IdentityRoleDto,System.Guid,Volo.Abp.Identity.GetIdentityRolesInput>"
            },
            "GetAsyncById": {
              "uniqueName": "GetAsyncById",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/identity/roles/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Identity.IdentityRoleDto",
                "typeSimple": "Volo.Abp.Identity.IdentityRoleDto"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Application.Services.IReadOnlyAppService<Volo.Abp.Identity.IdentityRoleDto,Volo.Abp.Identity.IdentityRoleDto,System.Guid,Volo.Abp.Identity.GetIdentityRolesInput>"
            },
            "CreateAsyncByInput": {
              "uniqueName": "CreateAsyncByInput",
              "name": "CreateAsync",
              "httpMethod": "POST",
              "url": "api/identity/roles",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Identity.IdentityRoleCreateDto, Volo.Abp.Identity.Application.Contracts",
                  "type": "Volo.Abp.Identity.IdentityRoleCreateDto",
                  "typeSimple": "Volo.Abp.Identity.IdentityRoleCreateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "Volo.Abp.Identity.IdentityRoleCreateDto",
                  "typeSimple": "Volo.Abp.Identity.IdentityRoleCreateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Identity.IdentityRoleDto",
                "typeSimple": "Volo.Abp.Identity.IdentityRoleDto"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Application.Services.ICreateAppService<Volo.Abp.Identity.IdentityRoleDto,Volo.Abp.Identity.IdentityRoleCreateDto>"
            },
            "UpdateAsyncByIdAndInput": {
              "uniqueName": "UpdateAsyncByIdAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/identity/roles/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Identity.IdentityRoleUpdateDto, Volo.Abp.Identity.Application.Contracts",
                  "type": "Volo.Abp.Identity.IdentityRoleUpdateDto",
                  "typeSimple": "Volo.Abp.Identity.IdentityRoleUpdateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "Volo.Abp.Identity.IdentityRoleUpdateDto",
                  "typeSimple": "Volo.Abp.Identity.IdentityRoleUpdateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Identity.IdentityRoleDto",
                "typeSimple": "Volo.Abp.Identity.IdentityRoleDto"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Application.Services.IUpdateAppService<Volo.Abp.Identity.IdentityRoleDto,System.Guid,Volo.Abp.Identity.IdentityRoleUpdateDto>"
            },
            "DeleteAsyncById": {
              "uniqueName": "DeleteAsyncById",
              "name": "DeleteAsync",
              "httpMethod": "DELETE",
              "url": "api/identity/roles/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Application.Services.IDeleteAppService<System.Guid>"
            }
          }
        },
        "Volo.Abp.Identity.IdentityUserController": {
          "controllerName": "IdentityUser",
          "controllerGroupName": "User",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "Volo.Abp.Identity.IdentityUserController",
          "interfaces": [
            {
              "type": "Volo.Abp.Identity.IIdentityUserAppService",
              "name": "IIdentityUserAppService",
              "methods": [
                {
                  "name": "GetRolesAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Identity.IdentityRoleDto>",
                    "typeSimple": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Identity.IdentityRoleDto>"
                  }
                },
                {
                  "name": "GetAssignableRolesAsync",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Identity.IdentityRoleDto>",
                    "typeSimple": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Identity.IdentityRoleDto>"
                  }
                },
                {
                  "name": "UpdateRolesAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "input",
                      "typeAsString": "Volo.Abp.Identity.IdentityUserUpdateRolesDto, Volo.Abp.Identity.Application.Contracts",
                      "type": "Volo.Abp.Identity.IdentityUserUpdateRolesDto",
                      "typeSimple": "Volo.Abp.Identity.IdentityUserUpdateRolesDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                },
                {
                  "name": "FindByUsernameAsync",
                  "parametersOnMethod": [
                    {
                      "name": "userName",
                      "typeAsString": "System.String, System.Private.CoreLib",
                      "type": "System.String",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Identity.IdentityUserDto",
                    "typeSimple": "Volo.Abp.Identity.IdentityUserDto"
                  }
                },
                {
                  "name": "FindByEmailAsync",
                  "parametersOnMethod": [
                    {
                      "name": "email",
                      "typeAsString": "System.String, System.Private.CoreLib",
                      "type": "System.String",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Identity.IdentityUserDto",
                    "typeSimple": "Volo.Abp.Identity.IdentityUserDto"
                  }
                },
                {
                  "name": "GetAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Identity.IdentityUserDto",
                    "typeSimple": "Volo.Abp.Identity.IdentityUserDto"
                  }
                },
                {
                  "name": "GetListAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "Volo.Abp.Identity.GetIdentityUsersInput, Volo.Abp.Identity.Application.Contracts",
                      "type": "Volo.Abp.Identity.GetIdentityUsersInput",
                      "typeSimple": "Volo.Abp.Identity.GetIdentityUsersInput",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Application.Dtos.PagedResultDto<Volo.Abp.Identity.IdentityUserDto>",
                    "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<Volo.Abp.Identity.IdentityUserDto>"
                  }
                },
                {
                  "name": "CreateAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "Volo.Abp.Identity.IdentityUserCreateDto, Volo.Abp.Identity.Application.Contracts",
                      "type": "Volo.Abp.Identity.IdentityUserCreateDto",
                      "typeSimple": "Volo.Abp.Identity.IdentityUserCreateDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Identity.IdentityUserDto",
                    "typeSimple": "Volo.Abp.Identity.IdentityUserDto"
                  }
                },
                {
                  "name": "UpdateAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "input",
                      "typeAsString": "Volo.Abp.Identity.IdentityUserUpdateDto, Volo.Abp.Identity.Application.Contracts",
                      "type": "Volo.Abp.Identity.IdentityUserUpdateDto",
                      "typeSimple": "Volo.Abp.Identity.IdentityUserUpdateDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Identity.IdentityUserDto",
                    "typeSimple": "Volo.Abp.Identity.IdentityUserDto"
                  }
                },
                {
                  "name": "DeleteAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                }
              ]
            }
          ],
          "actions": {
            "GetAsyncById": {
              "uniqueName": "GetAsyncById",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/identity/users/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Identity.IdentityUserDto",
                "typeSimple": "Volo.Abp.Identity.IdentityUserDto"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Application.Services.IReadOnlyAppService<Volo.Abp.Identity.IdentityUserDto,Volo.Abp.Identity.IdentityUserDto,System.Guid,Volo.Abp.Identity.GetIdentityUsersInput>"
            },
            "GetListAsyncByInput": {
              "uniqueName": "GetListAsyncByInput",
              "name": "GetListAsync",
              "httpMethod": "GET",
              "url": "api/identity/users",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Identity.GetIdentityUsersInput, Volo.Abp.Identity.Application.Contracts",
                  "type": "Volo.Abp.Identity.GetIdentityUsersInput",
                  "typeSimple": "Volo.Abp.Identity.GetIdentityUsersInput",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Filter",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "ExtraProperties",
                  "jsonName": null,
                  "type": "Volo.Abp.Data.ExtraPropertyDictionary",
                  "typeSimple": "{string:object}",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<Volo.Abp.Identity.IdentityUserDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<Volo.Abp.Identity.IdentityUserDto>"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Application.Services.IReadOnlyAppService<Volo.Abp.Identity.IdentityUserDto,Volo.Abp.Identity.IdentityUserDto,System.Guid,Volo.Abp.Identity.GetIdentityUsersInput>"
            },
            "CreateAsyncByInput": {
              "uniqueName": "CreateAsyncByInput",
              "name": "CreateAsync",
              "httpMethod": "POST",
              "url": "api/identity/users",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Identity.IdentityUserCreateDto, Volo.Abp.Identity.Application.Contracts",
                  "type": "Volo.Abp.Identity.IdentityUserCreateDto",
                  "typeSimple": "Volo.Abp.Identity.IdentityUserCreateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "Volo.Abp.Identity.IdentityUserCreateDto",
                  "typeSimple": "Volo.Abp.Identity.IdentityUserCreateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Identity.IdentityUserDto",
                "typeSimple": "Volo.Abp.Identity.IdentityUserDto"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Application.Services.ICreateAppService<Volo.Abp.Identity.IdentityUserDto,Volo.Abp.Identity.IdentityUserCreateDto>"
            },
            "UpdateAsyncByIdAndInput": {
              "uniqueName": "UpdateAsyncByIdAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/identity/users/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Identity.IdentityUserUpdateDto, Volo.Abp.Identity.Application.Contracts",
                  "type": "Volo.Abp.Identity.IdentityUserUpdateDto",
                  "typeSimple": "Volo.Abp.Identity.IdentityUserUpdateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "Volo.Abp.Identity.IdentityUserUpdateDto",
                  "typeSimple": "Volo.Abp.Identity.IdentityUserUpdateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Identity.IdentityUserDto",
                "typeSimple": "Volo.Abp.Identity.IdentityUserDto"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Application.Services.IUpdateAppService<Volo.Abp.Identity.IdentityUserDto,System.Guid,Volo.Abp.Identity.IdentityUserUpdateDto>"
            },
            "DeleteAsyncById": {
              "uniqueName": "DeleteAsyncById",
              "name": "DeleteAsync",
              "httpMethod": "DELETE",
              "url": "api/identity/users/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Application.Services.IDeleteAppService<System.Guid>"
            },
            "GetRolesAsyncById": {
              "uniqueName": "GetRolesAsyncById",
              "name": "GetRolesAsync",
              "httpMethod": "GET",
              "url": "api/identity/users/{id}/roles",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Identity.IdentityRoleDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Identity.IdentityRoleDto>"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Identity.IIdentityUserAppService"
            },
            "GetAssignableRolesAsync": {
              "uniqueName": "GetAssignableRolesAsync",
              "name": "GetAssignableRolesAsync",
              "httpMethod": "GET",
              "url": "api/identity/users/assignable-roles",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Identity.IdentityRoleDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Identity.IdentityRoleDto>"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Identity.IIdentityUserAppService"
            },
            "UpdateRolesAsyncByIdAndInput": {
              "uniqueName": "UpdateRolesAsyncByIdAndInput",
              "name": "UpdateRolesAsync",
              "httpMethod": "PUT",
              "url": "api/identity/users/{id}/roles",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Identity.IdentityUserUpdateRolesDto, Volo.Abp.Identity.Application.Contracts",
                  "type": "Volo.Abp.Identity.IdentityUserUpdateRolesDto",
                  "typeSimple": "Volo.Abp.Identity.IdentityUserUpdateRolesDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "Volo.Abp.Identity.IdentityUserUpdateRolesDto",
                  "typeSimple": "Volo.Abp.Identity.IdentityUserUpdateRolesDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Identity.IIdentityUserAppService"
            },
            "FindByUsernameAsyncByUserName": {
              "uniqueName": "FindByUsernameAsyncByUserName",
              "name": "FindByUsernameAsync",
              "httpMethod": "GET",
              "url": "api/identity/users/by-username/{userName}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "userName",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "userName",
                  "name": "userName",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Identity.IdentityUserDto",
                "typeSimple": "Volo.Abp.Identity.IdentityUserDto"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Identity.IIdentityUserAppService"
            },
            "FindByEmailAsyncByEmail": {
              "uniqueName": "FindByEmailAsyncByEmail",
              "name": "FindByEmailAsync",
              "httpMethod": "GET",
              "url": "api/identity/users/by-email/{email}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "email",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "email",
                  "name": "email",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Identity.IdentityUserDto",
                "typeSimple": "Volo.Abp.Identity.IdentityUserDto"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Identity.IIdentityUserAppService"
            }
          }
        },
        "Volo.Abp.Identity.IdentityUserLookupController": {
          "controllerName": "IdentityUserLookup",
          "controllerGroupName": "UserLookup",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "Volo.Abp.Identity.IdentityUserLookupController",
          "interfaces": [
            {
              "type": "Volo.Abp.Identity.IIdentityUserLookupAppService",
              "name": "IIdentityUserLookupAppService",
              "methods": [
                {
                  "name": "FindByIdAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Users.UserData",
                    "typeSimple": "Volo.Abp.Users.UserData"
                  }
                },
                {
                  "name": "FindByUserNameAsync",
                  "parametersOnMethod": [
                    {
                      "name": "userName",
                      "typeAsString": "System.String, System.Private.CoreLib",
                      "type": "System.String",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Users.UserData",
                    "typeSimple": "Volo.Abp.Users.UserData"
                  }
                },
                {
                  "name": "SearchAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "Volo.Abp.Identity.UserLookupSearchInputDto, Volo.Abp.Identity.Application.Contracts",
                      "type": "Volo.Abp.Identity.UserLookupSearchInputDto",
                      "typeSimple": "Volo.Abp.Identity.UserLookupSearchInputDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Users.UserData>",
                    "typeSimple": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Users.UserData>"
                  }
                },
                {
                  "name": "GetCountAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "Volo.Abp.Identity.UserLookupCountInputDto, Volo.Abp.Identity.Application.Contracts",
                      "type": "Volo.Abp.Identity.UserLookupCountInputDto",
                      "typeSimple": "Volo.Abp.Identity.UserLookupCountInputDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Int64",
                    "typeSimple": "number"
                  }
                }
              ]
            }
          ],
          "actions": {
            "FindByIdAsyncById": {
              "uniqueName": "FindByIdAsyncById",
              "name": "FindByIdAsync",
              "httpMethod": "GET",
              "url": "api/identity/users/lookup/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Users.UserData",
                "typeSimple": "Volo.Abp.Users.UserData"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Identity.IIdentityUserLookupAppService"
            },
            "FindByUserNameAsyncByUserName": {
              "uniqueName": "FindByUserNameAsyncByUserName",
              "name": "FindByUserNameAsync",
              "httpMethod": "GET",
              "url": "api/identity/users/lookup/by-username/{userName}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "userName",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "userName",
                  "name": "userName",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Users.UserData",
                "typeSimple": "Volo.Abp.Users.UserData"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Identity.IIdentityUserLookupAppService"
            },
            "SearchAsyncByInput": {
              "uniqueName": "SearchAsyncByInput",
              "name": "SearchAsync",
              "httpMethod": "GET",
              "url": "api/identity/users/lookup/search",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Identity.UserLookupSearchInputDto, Volo.Abp.Identity.Application.Contracts",
                  "type": "Volo.Abp.Identity.UserLookupSearchInputDto",
                  "typeSimple": "Volo.Abp.Identity.UserLookupSearchInputDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Filter",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "ExtraProperties",
                  "jsonName": null,
                  "type": "Volo.Abp.Data.ExtraPropertyDictionary",
                  "typeSimple": "{string:object}",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Users.UserData>",
                "typeSimple": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Users.UserData>"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Identity.IIdentityUserLookupAppService"
            },
            "GetCountAsyncByInput": {
              "uniqueName": "GetCountAsyncByInput",
              "name": "GetCountAsync",
              "httpMethod": "GET",
              "url": "api/identity/users/lookup/count",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Identity.UserLookupCountInputDto, Volo.Abp.Identity.Application.Contracts",
                  "type": "Volo.Abp.Identity.UserLookupCountInputDto",
                  "typeSimple": "Volo.Abp.Identity.UserLookupCountInputDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Filter",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "System.Int64",
                "typeSimple": "number"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Identity.IIdentityUserLookupAppService"
            }
          }
        }
      }
    },
    "multi-tenancy": {
      "rootPath": "multi-tenancy",
      "remoteServiceName": "AbpTenantManagement",
      "controllers": {
        "Volo.Abp.TenantManagement.TenantController": {
          "controllerName": "Tenant",
          "controllerGroupName": "Tenant",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "Volo.Abp.TenantManagement.TenantController",
          "interfaces": [
            {
              "type": "Volo.Abp.TenantManagement.ITenantAppService",
              "name": "ITenantAppService",
              "methods": [
                {
                  "name": "GetDefaultConnectionStringAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.String",
                    "typeSimple": "string"
                  }
                },
                {
                  "name": "UpdateDefaultConnectionStringAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "defaultConnectionString",
                      "typeAsString": "System.String, System.Private.CoreLib",
                      "type": "System.String",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                },
                {
                  "name": "DeleteDefaultConnectionStringAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                },
                {
                  "name": "GetAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.TenantManagement.TenantDto",
                    "typeSimple": "Volo.Abp.TenantManagement.TenantDto"
                  }
                },
                {
                  "name": "GetListAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "Volo.Abp.TenantManagement.GetTenantsInput, Volo.Abp.TenantManagement.Application.Contracts",
                      "type": "Volo.Abp.TenantManagement.GetTenantsInput",
                      "typeSimple": "Volo.Abp.TenantManagement.GetTenantsInput",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Application.Dtos.PagedResultDto<Volo.Abp.TenantManagement.TenantDto>",
                    "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<Volo.Abp.TenantManagement.TenantDto>"
                  }
                },
                {
                  "name": "CreateAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "Volo.Abp.TenantManagement.TenantCreateDto, Volo.Abp.TenantManagement.Application.Contracts",
                      "type": "Volo.Abp.TenantManagement.TenantCreateDto",
                      "typeSimple": "Volo.Abp.TenantManagement.TenantCreateDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.TenantManagement.TenantDto",
                    "typeSimple": "Volo.Abp.TenantManagement.TenantDto"
                  }
                },
                {
                  "name": "UpdateAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "input",
                      "typeAsString": "Volo.Abp.TenantManagement.TenantUpdateDto, Volo.Abp.TenantManagement.Application.Contracts",
                      "type": "Volo.Abp.TenantManagement.TenantUpdateDto",
                      "typeSimple": "Volo.Abp.TenantManagement.TenantUpdateDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.TenantManagement.TenantDto",
                    "typeSimple": "Volo.Abp.TenantManagement.TenantDto"
                  }
                },
                {
                  "name": "DeleteAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                }
              ]
            }
          ],
          "actions": {
            "GetAsyncById": {
              "uniqueName": "GetAsyncById",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/multi-tenancy/tenants/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.TenantManagement.TenantDto",
                "typeSimple": "Volo.Abp.TenantManagement.TenantDto"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Application.Services.IReadOnlyAppService<Volo.Abp.TenantManagement.TenantDto,Volo.Abp.TenantManagement.TenantDto,System.Guid,Volo.Abp.TenantManagement.GetTenantsInput>"
            },
            "GetListAsyncByInput": {
              "uniqueName": "GetListAsyncByInput",
              "name": "GetListAsync",
              "httpMethod": "GET",
              "url": "api/multi-tenancy/tenants",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.TenantManagement.GetTenantsInput, Volo.Abp.TenantManagement.Application.Contracts",
                  "type": "Volo.Abp.TenantManagement.GetTenantsInput",
                  "typeSimple": "Volo.Abp.TenantManagement.GetTenantsInput",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Filter",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<Volo.Abp.TenantManagement.TenantDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<Volo.Abp.TenantManagement.TenantDto>"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Application.Services.IReadOnlyAppService<Volo.Abp.TenantManagement.TenantDto,Volo.Abp.TenantManagement.TenantDto,System.Guid,Volo.Abp.TenantManagement.GetTenantsInput>"
            },
            "CreateAsyncByInput": {
              "uniqueName": "CreateAsyncByInput",
              "name": "CreateAsync",
              "httpMethod": "POST",
              "url": "api/multi-tenancy/tenants",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.TenantManagement.TenantCreateDto, Volo.Abp.TenantManagement.Application.Contracts",
                  "type": "Volo.Abp.TenantManagement.TenantCreateDto",
                  "typeSimple": "Volo.Abp.TenantManagement.TenantCreateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "Volo.Abp.TenantManagement.TenantCreateDto",
                  "typeSimple": "Volo.Abp.TenantManagement.TenantCreateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.TenantManagement.TenantDto",
                "typeSimple": "Volo.Abp.TenantManagement.TenantDto"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Application.Services.ICreateAppService<Volo.Abp.TenantManagement.TenantDto,Volo.Abp.TenantManagement.TenantCreateDto>"
            },
            "UpdateAsyncByIdAndInput": {
              "uniqueName": "UpdateAsyncByIdAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/multi-tenancy/tenants/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.TenantManagement.TenantUpdateDto, Volo.Abp.TenantManagement.Application.Contracts",
                  "type": "Volo.Abp.TenantManagement.TenantUpdateDto",
                  "typeSimple": "Volo.Abp.TenantManagement.TenantUpdateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "Volo.Abp.TenantManagement.TenantUpdateDto",
                  "typeSimple": "Volo.Abp.TenantManagement.TenantUpdateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.TenantManagement.TenantDto",
                "typeSimple": "Volo.Abp.TenantManagement.TenantDto"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Application.Services.IUpdateAppService<Volo.Abp.TenantManagement.TenantDto,System.Guid,Volo.Abp.TenantManagement.TenantUpdateDto>"
            },
            "DeleteAsyncById": {
              "uniqueName": "DeleteAsyncById",
              "name": "DeleteAsync",
              "httpMethod": "DELETE",
              "url": "api/multi-tenancy/tenants/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Application.Services.IDeleteAppService<System.Guid>"
            },
            "GetDefaultConnectionStringAsyncById": {
              "uniqueName": "GetDefaultConnectionStringAsyncById",
              "name": "GetDefaultConnectionStringAsync",
              "httpMethod": "GET",
              "url": "api/multi-tenancy/tenants/{id}/default-connection-string",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.String",
                "typeSimple": "string"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.TenantManagement.ITenantAppService"
            },
            "UpdateDefaultConnectionStringAsyncByIdAndDefaultConnectionString": {
              "uniqueName": "UpdateDefaultConnectionStringAsyncByIdAndDefaultConnectionString",
              "name": "UpdateDefaultConnectionStringAsync",
              "httpMethod": "PUT",
              "url": "api/multi-tenancy/tenants/{id}/default-connection-string",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "defaultConnectionString",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "defaultConnectionString",
                  "name": "defaultConnectionString",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.TenantManagement.ITenantAppService"
            },
            "DeleteDefaultConnectionStringAsyncById": {
              "uniqueName": "DeleteDefaultConnectionStringAsyncById",
              "name": "DeleteDefaultConnectionStringAsync",
              "httpMethod": "DELETE",
              "url": "api/multi-tenancy/tenants/{id}/default-connection-string",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.TenantManagement.ITenantAppService"
            }
          }
        }
      }
    },
    "permissionManagement": {
      "rootPath": "permissionManagement",
      "remoteServiceName": "AbpPermissionManagement",
      "controllers": {
        "Volo.Abp.PermissionManagement.PermissionsController": {
          "controllerName": "Permissions",
          "controllerGroupName": "Permissions",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "Volo.Abp.PermissionManagement.PermissionsController",
          "interfaces": [
            {
              "type": "Volo.Abp.PermissionManagement.IPermissionAppService",
              "name": "IPermissionAppService",
              "methods": [
                {
                  "name": "GetAsync",
                  "parametersOnMethod": [
                    {
                      "name": "providerName",
                      "typeAsString": "System.String, System.Private.CoreLib",
                      "type": "System.String",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "providerKey",
                      "typeAsString": "System.String, System.Private.CoreLib",
                      "type": "System.String",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.PermissionManagement.GetPermissionListResultDto",
                    "typeSimple": "Volo.Abp.PermissionManagement.GetPermissionListResultDto"
                  }
                },
                {
                  "name": "GetByGroupAsync",
                  "parametersOnMethod": [
                    {
                      "name": "groupName",
                      "typeAsString": "System.String, System.Private.CoreLib",
                      "type": "System.String",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "providerName",
                      "typeAsString": "System.String, System.Private.CoreLib",
                      "type": "System.String",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "providerKey",
                      "typeAsString": "System.String, System.Private.CoreLib",
                      "type": "System.String",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.PermissionManagement.GetPermissionListResultDto",
                    "typeSimple": "Volo.Abp.PermissionManagement.GetPermissionListResultDto"
                  }
                },
                {
                  "name": "UpdateAsync",
                  "parametersOnMethod": [
                    {
                      "name": "providerName",
                      "typeAsString": "System.String, System.Private.CoreLib",
                      "type": "System.String",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "providerKey",
                      "typeAsString": "System.String, System.Private.CoreLib",
                      "type": "System.String",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "input",
                      "typeAsString": "Volo.Abp.PermissionManagement.UpdatePermissionsDto, Volo.Abp.PermissionManagement.Application.Contracts",
                      "type": "Volo.Abp.PermissionManagement.UpdatePermissionsDto",
                      "typeSimple": "Volo.Abp.PermissionManagement.UpdatePermissionsDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                }
              ]
            }
          ],
          "actions": {
            "GetAsyncByProviderNameAndProviderKey": {
              "uniqueName": "GetAsyncByProviderNameAndProviderKey",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/permission-management/permissions",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "providerName",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "providerKey",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "providerName",
                  "name": "providerName",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "providerKey",
                  "name": "providerKey",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.PermissionManagement.GetPermissionListResultDto",
                "typeSimple": "Volo.Abp.PermissionManagement.GetPermissionListResultDto"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.PermissionManagement.IPermissionAppService"
            },
            "GetByGroupAsyncByGroupNameAndProviderNameAndProviderKey": {
              "uniqueName": "GetByGroupAsyncByGroupNameAndProviderNameAndProviderKey",
              "name": "GetByGroupAsync",
              "httpMethod": "GET",
              "url": "api/permission-management/permissions/by-group",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "groupName",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "providerName",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "providerKey",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "groupName",
                  "name": "groupName",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "providerName",
                  "name": "providerName",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "providerKey",
                  "name": "providerKey",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.PermissionManagement.GetPermissionListResultDto",
                "typeSimple": "Volo.Abp.PermissionManagement.GetPermissionListResultDto"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.PermissionManagement.IPermissionAppService"
            },
            "UpdateAsyncByProviderNameAndProviderKeyAndInput": {
              "uniqueName": "UpdateAsyncByProviderNameAndProviderKeyAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/permission-management/permissions",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "providerName",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "providerKey",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.PermissionManagement.UpdatePermissionsDto, Volo.Abp.PermissionManagement.Application.Contracts",
                  "type": "Volo.Abp.PermissionManagement.UpdatePermissionsDto",
                  "typeSimple": "Volo.Abp.PermissionManagement.UpdatePermissionsDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "providerName",
                  "name": "providerName",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "providerKey",
                  "name": "providerKey",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "Volo.Abp.PermissionManagement.UpdatePermissionsDto",
                  "typeSimple": "Volo.Abp.PermissionManagement.UpdatePermissionsDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.PermissionManagement.IPermissionAppService"
            }
          }
        }
      }
    },
    "settingManagement": {
      "rootPath": "settingManagement",
      "remoteServiceName": "SettingManagement",
      "controllers": {
        "Volo.Abp.SettingManagement.EmailSettingsController": {
          "controllerName": "EmailSettings",
          "controllerGroupName": "EmailSettings",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "Volo.Abp.SettingManagement.EmailSettingsController",
          "interfaces": [
            {
              "type": "Volo.Abp.SettingManagement.IEmailSettingsAppService",
              "name": "IEmailSettingsAppService",
              "methods": [
                {
                  "name": "GetAsync",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "Volo.Abp.SettingManagement.EmailSettingsDto",
                    "typeSimple": "Volo.Abp.SettingManagement.EmailSettingsDto"
                  }
                },
                {
                  "name": "UpdateAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "Volo.Abp.SettingManagement.UpdateEmailSettingsDto, Volo.Abp.SettingManagement.Application.Contracts",
                      "type": "Volo.Abp.SettingManagement.UpdateEmailSettingsDto",
                      "typeSimple": "Volo.Abp.SettingManagement.UpdateEmailSettingsDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                },
                {
                  "name": "SendTestEmailAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "Volo.Abp.SettingManagement.SendTestEmailInput, Volo.Abp.SettingManagement.Application.Contracts",
                      "type": "Volo.Abp.SettingManagement.SendTestEmailInput",
                      "typeSimple": "Volo.Abp.SettingManagement.SendTestEmailInput",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                }
              ]
            }
          ],
          "actions": {
            "GetAsync": {
              "uniqueName": "GetAsync",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/setting-management/emailing",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "Volo.Abp.SettingManagement.EmailSettingsDto",
                "typeSimple": "Volo.Abp.SettingManagement.EmailSettingsDto"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.SettingManagement.IEmailSettingsAppService"
            },
            "UpdateAsyncByInput": {
              "uniqueName": "UpdateAsyncByInput",
              "name": "UpdateAsync",
              "httpMethod": "POST",
              "url": "api/setting-management/emailing",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.SettingManagement.UpdateEmailSettingsDto, Volo.Abp.SettingManagement.Application.Contracts",
                  "type": "Volo.Abp.SettingManagement.UpdateEmailSettingsDto",
                  "typeSimple": "Volo.Abp.SettingManagement.UpdateEmailSettingsDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "Volo.Abp.SettingManagement.UpdateEmailSettingsDto",
                  "typeSimple": "Volo.Abp.SettingManagement.UpdateEmailSettingsDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.SettingManagement.IEmailSettingsAppService"
            },
            "SendTestEmailAsyncByInput": {
              "uniqueName": "SendTestEmailAsyncByInput",
              "name": "SendTestEmailAsync",
              "httpMethod": "POST",
              "url": "api/setting-management/emailing/send-test-email",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.SettingManagement.SendTestEmailInput, Volo.Abp.SettingManagement.Application.Contracts",
                  "type": "Volo.Abp.SettingManagement.SendTestEmailInput",
                  "typeSimple": "Volo.Abp.SettingManagement.SendTestEmailInput",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "Volo.Abp.SettingManagement.SendTestEmailInput",
                  "typeSimple": "Volo.Abp.SettingManagement.SendTestEmailInput",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.SettingManagement.IEmailSettingsAppService"
            }
          }
        },
        "Volo.Abp.SettingManagement.TimeZoneSettingsController": {
          "controllerName": "TimeZoneSettings",
          "controllerGroupName": "TimeZoneSettings",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "Volo.Abp.SettingManagement.TimeZoneSettingsController",
          "interfaces": [
            {
              "type": "Volo.Abp.SettingManagement.ITimeZoneSettingsAppService",
              "name": "ITimeZoneSettingsAppService",
              "methods": [
                {
                  "name": "GetAsync",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "System.String",
                    "typeSimple": "string"
                  }
                },
                {
                  "name": "GetTimezonesAsync",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<Volo.Abp.NameValue>",
                    "typeSimple": "[Volo.Abp.NameValue]"
                  }
                },
                {
                  "name": "UpdateAsync",
                  "parametersOnMethod": [
                    {
                      "name": "timezone",
                      "typeAsString": "System.String, System.Private.CoreLib",
                      "type": "System.String",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                }
              ]
            }
          ],
          "actions": {
            "GetAsync": {
              "uniqueName": "GetAsync",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/setting-management/timezone",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "System.String",
                "typeSimple": "string"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.SettingManagement.ITimeZoneSettingsAppService"
            },
            "GetTimezonesAsync": {
              "uniqueName": "GetTimezonesAsync",
              "name": "GetTimezonesAsync",
              "httpMethod": "GET",
              "url": "api/setting-management/timezone/timezones",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "System.Collections.Generic.List<Volo.Abp.NameValue>",
                "typeSimple": "[Volo.Abp.NameValue]"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.SettingManagement.ITimeZoneSettingsAppService"
            },
            "UpdateAsyncByTimezone": {
              "uniqueName": "UpdateAsyncByTimezone",
              "name": "UpdateAsync",
              "httpMethod": "POST",
              "url": "api/setting-management/timezone",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "timezone",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "timezone",
                  "name": "timezone",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.SettingManagement.ITimeZoneSettingsAppService"
            }
          }
        }
      }
    }
  },
  "types": {
    "Microsoft.AspNetCore.Mvc.IActionResult": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": []
    },
    "MP.Account.UserProfileDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Surname",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Email",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "BankAccountNumber",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 50,
          "minimum": null,
          "maximum": null,
          "regex": "^(PL)?\\d{26}$|^[A-Z]{2}\\d{2}[A-Z0-9]{1,30}$"
        }
      ]
    },
    "MP.Application.Contracts.Booths.BoothPricingPeriodDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Days",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": "1",
          "maximum": "365",
          "regex": null
        },
        {
          "name": "PricePerPeriod",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": "0.01",
          "maximum": "1.7976931348623157E+308",
          "regex": null
        },
        {
          "name": "EffectivePricePerDay",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.BoothTypes.BoothTypeDto": {
      "baseType": "Volo.Abp.Application.Dtos.FullAuditedEntityDto<System.Guid>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Description",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CommissionPercentage",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsActive",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.BoothTypes.CreateBoothTypeDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": 0,
          "maxLength": 100,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Description",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": 0,
          "maxLength": 500,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CommissionPercentage",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": "0",
          "maximum": "100",
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.BoothTypes.UpdateBoothTypeDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": 0,
          "maxLength": 100,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Description",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": 0,
          "maxLength": 500,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CommissionPercentage",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": "0",
          "maximum": "100",
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.Chat.ChatConversationDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "UserId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "UserName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "UserEmail",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "UnreadCount",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "LastMessage",
          "jsonName": null,
          "type": "MP.Application.Contracts.Chat.ChatMessageDto",
          "typeSimple": "MP.Application.Contracts.Chat.ChatMessageDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.Chat.ChatMessageDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Id",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SenderId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SenderName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ReceiverId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Message",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SentAt",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsRead",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.Chat.CustomerUserDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Id",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Email",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsOnline",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.Chat.SupportUserDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Id",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Email",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsOnline",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.CustomerDashboard.BulkUpdateMyItemsDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "ItemIds",
          "jsonName": null,
          "type": "[System.Guid]",
          "typeSimple": "[string]",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Category",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CommissionPercentage",
          "jsonName": null,
          "type": "System.Decimal?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.CustomerDashboard.CategorySalesDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Category",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ItemCount",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TotalAmount",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Percentage",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.CustomerDashboard.CategoryStatDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Category",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TotalItems",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SoldItems",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SalesValue",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.CustomerDashboard.CreateMyItemDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "RentalId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": 0,
          "maxLength": 200,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Description",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 1000,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Category",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 100,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "EstimatedPrice",
          "jsonName": null,
          "type": "System.Decimal?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PhotoUrls",
          "jsonName": null,
          "type": "[System.String]",
          "typeSimple": "[string]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.CustomerDashboard.CustomerDashboardDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Overview",
          "jsonName": null,
          "type": "MP.Application.Contracts.CustomerDashboard.CustomerOverviewDto",
          "typeSimple": "MP.Application.Contracts.CustomerDashboard.CustomerOverviewDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ActiveRentals",
          "jsonName": null,
          "type": "[MP.Application.Contracts.CustomerDashboard.MyActiveRentalDto]",
          "typeSimple": "[MP.Application.Contracts.CustomerDashboard.MyActiveRentalDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SalesStatistics",
          "jsonName": null,
          "type": "MP.Application.Contracts.CustomerDashboard.CustomerSalesStatisticsDto",
          "typeSimple": "MP.Application.Contracts.CustomerDashboard.CustomerSalesStatisticsDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "RecentSales",
          "jsonName": null,
          "type": "[MP.Application.Contracts.CustomerDashboard.RecentItemSaleDto]",
          "typeSimple": "[MP.Application.Contracts.CustomerDashboard.RecentItemSaleDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "RecentNotifications",
          "jsonName": null,
          "type": "[MP.Application.Contracts.CustomerDashboard.CustomerNotificationDto]",
          "typeSimple": "[MP.Application.Contracts.CustomerDashboard.CustomerNotificationDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SettlementSummary",
          "jsonName": null,
          "type": "MP.Application.Contracts.CustomerDashboard.SettlementSummaryDto",
          "typeSimple": "MP.Application.Contracts.CustomerDashboard.SettlementSummaryDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.CustomerDashboard.CustomerNotificationDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Id",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Type",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Title",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Message",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CreatedAt",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsRead",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ActionUrl",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Severity",
          "jsonName": null,
          "type": "MP.Domain.Notifications.NotificationSeverity",
          "typeSimple": "enum",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.CustomerDashboard.CustomerOverviewDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "TotalActiveRentals",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TotalItemsForSale",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TotalItemsSold",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TotalSalesAmount",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TotalCommissionPaid",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AvailableForWithdrawal",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DaysUntilNextRentalExpiration",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "HasExpiringRentals",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "HasPendingSettlements",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.CustomerDashboard.CustomerSalesStatisticsDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "TodaySales",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "WeekSales",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "MonthSales",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AllTimeSales",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TodayItemsSold",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "WeekItemsSold",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "MonthItemsSold",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AllTimeItemsSold",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AverageSalePrice",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "HighestSalePrice",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "LowestSalePrice",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Last30DaysSales",
          "jsonName": null,
          "type": "[MP.Application.Contracts.CustomerDashboard.DailySalesChartDto]",
          "typeSimple": "[MP.Application.Contracts.CustomerDashboard.DailySalesChartDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SalesByCategory",
          "jsonName": null,
          "type": "[MP.Application.Contracts.CustomerDashboard.CategorySalesDto]",
          "typeSimple": "[MP.Application.Contracts.CustomerDashboard.CategorySalesDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "MonthlyGrowthPercentage",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.CustomerDashboard.CustomerStatisticsFilterDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "StartDate",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "EndDate",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "RentalId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.CustomerDashboard.DailySalesChartDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Date",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Amount",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ItemCount",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.CustomerDashboard.ExtensionCostCalculationDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "RentalId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ExtensionDays",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CurrentEndDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "NewEndDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PricePerDay",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TotalCost",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsAvailable",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "UnavailableReason",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.CustomerDashboard.ExtensionOptionDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Days",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DisplayName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Cost",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "NewEndDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.CustomerDashboard.GetMyItemsDto": {
      "baseType": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "RentalId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Status",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Category",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SearchTerm",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CreatedAfter",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CreatedBefore",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.CustomerDashboard.GetMyRentalsDto": {
      "baseType": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Status",
          "jsonName": null,
          "type": "MP.Rentals.RentalStatus?",
          "typeSimple": "enum?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "StartDateFrom",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "StartDateTo",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IncludeCompleted",
          "jsonName": null,
          "type": "System.Boolean?",
          "typeSimple": "boolean?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.CustomerDashboard.MonthlyItemStatDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Month",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ItemsAdded",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ItemsSold",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SalesValue",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.CustomerDashboard.MyActiveRentalDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "RentalId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "BoothNumber",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "BoothTypeName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "StartDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "EndDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DaysRemaining",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsExpiringSoon",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Status",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TotalItems",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SoldItems",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AvailableItems",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TotalSales",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TotalCommission",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CanExtend",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "QRCodeUrl",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TotalCost",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DiscountAmount",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "OriginalAmount",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PromoCodeUsed",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.CustomerDashboard.MyItemDto": {
      "baseType": "Volo.Abp.Application.Dtos.FullAuditedEntityDto<System.Guid>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "RentalId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "BoothNumber",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Description",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Category",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PhotoUrls",
          "jsonName": null,
          "type": "[System.String]",
          "typeSimple": "[string]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ItemNumber",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Barcode",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "EstimatedPrice",
          "jsonName": null,
          "type": "System.Decimal?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ActualPrice",
          "jsonName": null,
          "type": "System.Decimal?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CommissionPercentage",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Status",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "StatusDisplayName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SoldAt",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DaysForSale",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CommissionAmount",
          "jsonName": null,
          "type": "System.Decimal?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CustomerAmount",
          "jsonName": null,
          "type": "System.Decimal?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CanEdit",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CanDelete",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.CustomerDashboard.MyItemStatisticsDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "TotalItems",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ForSaleItems",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SoldItems",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ReclaimedItems",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ExpiredItems",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TotalEstimatedValue",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TotalSalesValue",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AverageItemPrice",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ByCategory",
          "jsonName": null,
          "type": "[MP.Application.Contracts.CustomerDashboard.CategoryStatDto]",
          "typeSimple": "[MP.Application.Contracts.CustomerDashboard.CategoryStatDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "MonthlyTrend",
          "jsonName": null,
          "type": "[MP.Application.Contracts.CustomerDashboard.MonthlyItemStatDto]",
          "typeSimple": "[MP.Application.Contracts.CustomerDashboard.MonthlyItemStatDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.CustomerDashboard.MyRentalCalendarDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Events",
          "jsonName": null,
          "type": "[MP.Application.Contracts.CustomerDashboard.RentalCalendarEventDto]",
          "typeSimple": "[MP.Application.Contracts.CustomerDashboard.RentalCalendarEventDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ImportantDates",
          "jsonName": null,
          "type": "[System.DateTime]",
          "typeSimple": "[string]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.CustomerDashboard.MyRentalDetailDto": {
      "baseType": "Volo.Abp.Application.Dtos.FullAuditedEntityDto<System.Guid>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "BoothId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "BoothNumber",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "BoothTypeName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "BoothPricePerDay",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "StartDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "EndDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TotalDays",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DaysRemaining",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DaysElapsed",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Status",
          "jsonName": null,
          "type": "MP.Rentals.RentalStatus",
          "typeSimple": "enum",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "StatusDisplayName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TotalCost",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PaidAmount",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsPaid",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PaidDate",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PriceBreakdown",
          "jsonName": null,
          "type": "MP.Application.Contracts.Rentals.PriceBreakdownDto",
          "typeSimple": "MP.Application.Contracts.Rentals.PriceBreakdownDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AppliedPromotionId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DiscountAmount",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "OriginalAmount",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PromoCodeUsed",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Notes",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "StartedAt",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CompletedAt",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TotalItems",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SoldItems",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AvailableItems",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ReclaimedItems",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TotalSalesAmount",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TotalCommissionPaid",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "NetEarnings",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CanExtend",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CanCancel",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsExpiringSoon",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsOverdue",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "QRCodeUrl",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ExtensionOptions",
          "jsonName": null,
          "type": "[MP.Application.Contracts.CustomerDashboard.ExtensionOptionDto]",
          "typeSimple": "[MP.Application.Contracts.CustomerDashboard.ExtensionOptionDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "RecentActivity",
          "jsonName": null,
          "type": "[MP.Application.Contracts.CustomerDashboard.RentalActivityDto]",
          "typeSimple": "[MP.Application.Contracts.CustomerDashboard.RentalActivityDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.CustomerDashboard.QRCodeDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "RentalId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "BoothNumber",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "QRCodeBase64",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AccessCode",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "GeneratedAt",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ExpiresAt",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.CustomerDashboard.RecentItemSaleDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "ItemId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ItemName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Category",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SalePrice",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CommissionAmount",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CustomerAmount",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SoldAt",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "BoothNumber",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.CustomerDashboard.RentalActivityDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Timestamp",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Type",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Description",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ItemName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Amount",
          "jsonName": null,
          "type": "System.Decimal?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.CustomerDashboard.RentalCalendarEventDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "RentalId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "BoothNumber",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "StartDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "EndDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Status",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Color",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsExpiringSoon",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.CustomerDashboard.RentalExtensionResultDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "RentalId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "NewEndDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AdditionalCost",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PaymentRequired",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PaymentUrl",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PaymentSessionId",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.CustomerDashboard.RequestRentalExtensionDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "RentalId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ExtensionDays",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": "1",
          "maximum": "365",
          "regex": null
        },
        {
          "name": "PaymentProviderId",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.CustomerDashboard.RequestSettlementDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "ItemIds",
          "jsonName": null,
          "type": "[System.Guid]",
          "typeSimple": "[string]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Notes",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "BankAccountNumber",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.CustomerDashboard.SettlementItemDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Id",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CreatedAt",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Amount",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Status",
          "jsonName": null,
          "type": "MP.Domain.Settlements.SettlementStatus",
          "typeSimple": "enum",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "StatusDisplayName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ItemsCount",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Notes",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PaidAt",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TransactionReference",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.CustomerDashboard.SettlementSummaryDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "TotalEarnings",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TotalCommissionPaid",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "NetEarnings",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PendingSettlement",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AvailableForWithdrawal",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PendingItemsCount",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "LastSettlementDate",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "RecentSettlements",
          "jsonName": null,
          "type": "[MP.Application.Contracts.CustomerDashboard.SettlementItemDto]",
          "typeSimple": "[MP.Application.Contracts.CustomerDashboard.SettlementItemDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.CustomerDashboard.UpdateMyItemDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": 0,
          "maxLength": 200,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Description",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 1000,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Category",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 100,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "EstimatedPrice",
          "jsonName": null,
          "type": "System.Decimal?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PhotoUrls",
          "jsonName": null,
          "type": "[System.String]",
          "typeSimple": "[string]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.Dashboard.BoothOccupancyOverviewDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "TotalBooths",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "OccupiedBooths",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AvailableBooths",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ReservedBooths",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "MaintenanceBooths",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "OccupancyRate",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "RentalsThisMonth",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AverageRentalDuration",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "MonthlyRentalRevenue",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "OccupancyTimeline",
          "jsonName": null,
          "type": "[MP.Application.Contracts.Dashboard.BoothOccupancyTimelineDto]",
          "typeSimple": "[MP.Application.Contracts.Dashboard.BoothOccupancyTimelineDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.Dashboard.BoothOccupancyTimelineDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Date",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "OccupiedBooths",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TotalBooths",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "OccupancyRate",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.Dashboard.CustomerAnalyticsDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "TotalCustomers",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "NewCustomersThisMonth",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ActiveRentals",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TopCustomers",
          "jsonName": null,
          "type": "[MP.Application.Contracts.Dashboard.TopCustomerDto]",
          "typeSimple": "[MP.Application.Contracts.Dashboard.TopCustomerDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "RegistrationTimeline",
          "jsonName": null,
          "type": "[MP.Application.Contracts.Dashboard.CustomerRegistrationTimelineDto]",
          "typeSimple": "[MP.Application.Contracts.Dashboard.CustomerRegistrationTimelineDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.Dashboard.CustomerRegistrationTimelineDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Date",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "NewRegistrations",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.Dashboard.DailySalesDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Date",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SalesAmount",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ItemsSold",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.Dashboard.DailyTransactionStatsDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Date",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TotalTransactions",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CompletedTransactions",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "FailedTransactions",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TotalAmount",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SuccessRate",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.Dashboard.DashboardOverviewDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "SalesOverview",
          "jsonName": null,
          "type": "MP.Application.Contracts.Dashboard.SalesOverviewDto",
          "typeSimple": "MP.Application.Contracts.Dashboard.SalesOverviewDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "BoothOccupancy",
          "jsonName": null,
          "type": "MP.Application.Contracts.Dashboard.BoothOccupancyOverviewDto",
          "typeSimple": "MP.Application.Contracts.Dashboard.BoothOccupancyOverviewDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Financial",
          "jsonName": null,
          "type": "MP.Application.Contracts.Dashboard.FinancialOverviewDto",
          "typeSimple": "MP.Application.Contracts.Dashboard.FinancialOverviewDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PaymentAnalytics",
          "jsonName": null,
          "type": "MP.Application.Contracts.Dashboard.PaymentAnalyticsDto",
          "typeSimple": "MP.Application.Contracts.Dashboard.PaymentAnalyticsDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "RecentRentals",
          "jsonName": null,
          "type": "[MP.Application.Contracts.Dashboard.RecentRentalDto]",
          "typeSimple": "[MP.Application.Contracts.Dashboard.RecentRentalDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TopSellingItems",
          "jsonName": null,
          "type": "[MP.Application.Contracts.Dashboard.TopSellingItemDto]",
          "typeSimple": "[MP.Application.Contracts.Dashboard.TopSellingItemDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.Dashboard.ExportFormat": {
      "baseType": "System.Enum",
      "isEnum": true,
      "enumNames": [
        "Excel",
        "Pdf",
        "Csv"
      ],
      "enumValues": [
        0,
        1,
        2
      ],
      "genericArguments": null,
      "properties": null
    },
    "MP.Application.Contracts.Dashboard.FinancialOverviewDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "MonthlyRevenue",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "MonthlyRentalIncome",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "MonthlyCommissionIncome",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PendingPayments",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "OutstandingDebts",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ProcessingPayments",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "MonthlyRevenueChart",
          "jsonName": null,
          "type": "[MP.Application.Contracts.Dashboard.MonthlyRevenueDto]",
          "typeSimple": "[MP.Application.Contracts.Dashboard.MonthlyRevenueDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "RevenueBreakdown",
          "jsonName": null,
          "type": "[MP.Application.Contracts.Dashboard.RevenueSourceDto]",
          "typeSimple": "[MP.Application.Contracts.Dashboard.RevenueSourceDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.Dashboard.MonthlyRevenueDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Month",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "MonthName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TotalRevenue",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "RentalIncome",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CommissionIncome",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.Dashboard.PaymentAnalyticsDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "TotalTransactions",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CompletedTransactions",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ProcessingTransactions",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "FailedTransactions",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SuccessRate",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AverageTransactionValue",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TotalProcessedAmount",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AverageProcessingTime",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TransactionTimeline",
          "jsonName": null,
          "type": "[MP.Application.Contracts.Dashboard.DailyTransactionStatsDto]",
          "typeSimple": "[MP.Application.Contracts.Dashboard.DailyTransactionStatsDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PaymentMethodBreakdown",
          "jsonName": null,
          "type": "[MP.Application.Contracts.Dashboard.PaymentMethodStatsDto]",
          "typeSimple": "[MP.Application.Contracts.Dashboard.PaymentMethodStatsDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "RecentTransactions",
          "jsonName": null,
          "type": "[MP.Application.Contracts.Dashboard.RecentTransactionDto]",
          "typeSimple": "[MP.Application.Contracts.Dashboard.RecentTransactionDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.Dashboard.PaymentMethodStatsDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Method",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "MethodName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TransactionCount",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TotalAmount",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SuccessRate",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Color",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.Dashboard.PeriodFilterDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "StartDate",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "EndDate",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Period",
          "jsonName": null,
          "type": "MP.Application.Contracts.Dashboard.PeriodType",
          "typeSimple": "enum",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.Dashboard.PeriodType": {
      "baseType": "System.Enum",
      "isEnum": true,
      "enumNames": [
        "Day",
        "Week",
        "Month",
        "Quarter",
        "Year",
        "Custom"
      ],
      "enumValues": [
        0,
        1,
        2,
        3,
        4,
        5
      ],
      "genericArguments": null,
      "properties": null
    },
    "MP.Application.Contracts.Dashboard.RecentRentalDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "RentalId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "BoothNumber",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CustomerName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CustomerEmail",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "StartDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "EndDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TotalCost",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Status",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DaysRemaining",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.Dashboard.RecentTransactionDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "SessionId",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "OrderId",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Amount",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Currency",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Status",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Method",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CreationTime",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CustomerEmail",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "BoothNumber",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.Dashboard.RevenueSourceDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Source",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Amount",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Percentage",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Color",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.Dashboard.SalesOverviewDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "TodaySales",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "WeekSales",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "MonthSales",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "YearSales",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TotalItemsSoldToday",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TotalItemsSoldWeek",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TotalItemsSoldMonth",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AverageSalePerItem",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SalesGrowthPercentage",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Last30DaysSales",
          "jsonName": null,
          "type": "[MP.Application.Contracts.Dashboard.DailySalesDto]",
          "typeSimple": "[MP.Application.Contracts.Dashboard.DailySalesDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.Dashboard.TopCustomerDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "UserId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Email",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TotalSpent",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "RentalsCount",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TotalSales",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CommissionGenerated",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "LastRentalDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.Dashboard.TopSellingItemDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "ItemName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "BoothNumber",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SalePrice",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SoldDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "BoothTypeName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CommissionEarned",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.Files.UploadedFileDto": {
      "baseType": "Volo.Abp.Application.Dtos.FullAuditedEntityDto<System.Guid>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "FileName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ContentType",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "FileSize",
          "jsonName": null,
          "type": "System.Int64",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Description",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ContentBase64",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.Files.UploadFileDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "FileName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ContentType",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ContentBase64",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Description",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.HomePageContent.CreateHomePageSectionDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "SectionType",
          "jsonName": null,
          "type": "MP.HomePageContent.HomePageSectionType",
          "typeSimple": "enum",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Title",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": 0,
          "maxLength": 200,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Subtitle",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 500,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Content",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 10000,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ImageFileId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "LinkUrl",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 2000,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "LinkText",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 100,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ValidFrom",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ValidTo",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "BackgroundColor",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 50,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TextColor",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 50,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.HomePageContent.HomePageSectionDto": {
      "baseType": "Volo.Abp.Application.Dtos.FullAuditedEntityDto<System.Guid>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "SectionType",
          "jsonName": null,
          "type": "MP.HomePageContent.HomePageSectionType",
          "typeSimple": "enum",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Title",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Subtitle",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Content",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ImageFileId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "LinkUrl",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "LinkText",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Order",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsActive",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ValidFrom",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ValidTo",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "BackgroundColor",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TextColor",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsValidForDisplay",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.HomePageContent.ReorderSectionDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Id",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Order",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": "0",
          "maximum": "2147483647",
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.HomePageContent.UpdateHomePageSectionDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "SectionType",
          "jsonName": null,
          "type": "MP.HomePageContent.HomePageSectionType",
          "typeSimple": "enum",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Title",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": 0,
          "maxLength": 200,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Subtitle",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 500,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Content",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 10000,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ImageFileId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "LinkUrl",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 2000,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "LinkText",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 100,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ValidFrom",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ValidTo",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "BackgroundColor",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 50,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TextColor",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 50,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.Notifications.GetNotificationsInput": {
      "baseType": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "IsRead",
          "jsonName": null,
          "type": "System.Boolean?",
          "typeSimple": "boolean?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Severity",
          "jsonName": null,
          "type": "MP.Application.Contracts.Notifications.NotificationSeverity?",
          "typeSimple": "enum?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Type",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "StartDate",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "EndDate",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IncludeExpired",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.Notifications.NotificationDto": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto<System.Guid>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Type",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Title",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Message",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Severity",
          "jsonName": null,
          "type": "MP.Application.Contracts.Notifications.NotificationSeverity",
          "typeSimple": "enum",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsRead",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ReadAt",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ActionUrl",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "RelatedEntityType",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "RelatedEntityId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CreationTime",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ExpiresAt",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.Notifications.NotificationListDto": {
      "baseType": "Volo.Abp.Application.Dtos.PagedResultDto<MP.Application.Contracts.Notifications.NotificationDto>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "UnreadCount",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.Notifications.NotificationSeverity": {
      "baseType": "System.Enum",
      "isEnum": true,
      "enumNames": [
        "Info",
        "Success",
        "Warning",
        "Error"
      ],
      "enumValues": [
        0,
        1,
        2,
        3
      ],
      "genericArguments": null,
      "properties": null
    },
    "MP.Application.Contracts.Notifications.NotificationStatsDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "TotalCount",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "UnreadCount",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ReadCount",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ExpiredCount",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.PaymentProviders.PaymentProviderSettingsDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Przelewy24",
          "jsonName": null,
          "type": "MP.Application.Contracts.PaymentProviders.Przelewy24SettingsDto",
          "typeSimple": "MP.Application.Contracts.PaymentProviders.Przelewy24SettingsDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PayPal",
          "jsonName": null,
          "type": "MP.Application.Contracts.PaymentProviders.PayPalSettingsDto",
          "typeSimple": "MP.Application.Contracts.PaymentProviders.PayPalSettingsDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Stripe",
          "jsonName": null,
          "type": "MP.Application.Contracts.PaymentProviders.StripeSettingsDto",
          "typeSimple": "MP.Application.Contracts.PaymentProviders.StripeSettingsDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.PaymentProviders.PayPalSettingsDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Enabled",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ClientId",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 100,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ClientSecret",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 100,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.PaymentProviders.Przelewy24SettingsDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Enabled",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "MerchantId",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 50,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PosId",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 50,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ApiKey",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 100,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CrcKey",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 100,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.PaymentProviders.StripeSettingsDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Enabled",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PublishableKey",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 200,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SecretKey",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 200,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "WebhookSecret",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 200,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.PaymentProviders.UpdatePaymentProviderSettingsDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Przelewy24",
          "jsonName": null,
          "type": "MP.Application.Contracts.PaymentProviders.Przelewy24SettingsDto",
          "typeSimple": "MP.Application.Contracts.PaymentProviders.Przelewy24SettingsDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PayPal",
          "jsonName": null,
          "type": "MP.Application.Contracts.PaymentProviders.PayPalSettingsDto",
          "typeSimple": "MP.Application.Contracts.PaymentProviders.PayPalSettingsDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Stripe",
          "jsonName": null,
          "type": "MP.Application.Contracts.PaymentProviders.StripeSettingsDto",
          "typeSimple": "MP.Application.Contracts.PaymentProviders.StripeSettingsDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.Payments.CreatePaymentRequestDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Amount",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Currency",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Description",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ProviderId",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "MethodId",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Metadata",
          "jsonName": null,
          "type": "{System.String:System.Object}",
          "typeSimple": "{string:object}",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.Payments.P24NotificationDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "P24_merchant_id",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "P24_pos_id",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "P24_session_id",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "P24_amount",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "P24_currency",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "P24_order_id",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "P24_method",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "P24_statement",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "P24_sign",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.Payments.PaymentCreationResultDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Success",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PaymentUrl",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TransactionId",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ErrorMessage",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.Payments.PaymentMethodDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Id",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DisplayName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Description",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IconUrl",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ProcessingTime",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Fees",
          "jsonName": null,
          "type": "MP.Application.Contracts.Payments.PaymentMethodFeesDto",
          "typeSimple": "MP.Application.Contracts.Payments.PaymentMethodFeesDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsActive",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.Payments.PaymentMethodFeesDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "FixedAmount",
          "jsonName": null,
          "type": "System.Decimal?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PercentageAmount",
          "jsonName": null,
          "type": "System.Decimal?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Description",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.Payments.PaymentProviderDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Id",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DisplayName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Description",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "LogoUrl",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SupportedCurrencies",
          "jsonName": null,
          "type": "[System.String]",
          "typeSimple": "[string]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsActive",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.Rentals.PriceBreakdownDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Items",
          "jsonName": null,
          "type": "[MP.Application.Contracts.Rentals.PriceBreakdownItemDto]",
          "typeSimple": "[MP.Application.Contracts.Rentals.PriceBreakdownItemDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TotalPrice",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "FormattedBreakdown",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SimpleSummary",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.Rentals.PriceBreakdownItemDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Days",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Count",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PricePerPeriod",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Subtotal",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.Sellers.AvailablePaymentMethodsDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "CashEnabled",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CardEnabled",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TerminalProviderId",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TerminalProviderName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.Sellers.CheckoutItemDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "ItemSheetItemId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PaymentMethod",
          "jsonName": null,
          "type": "MP.Application.Contracts.Sellers.PaymentMethodType",
          "typeSimple": "enum",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Amount",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": "0.01",
          "maximum": "1000000",
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.Sellers.CheckoutResultDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Success",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TransactionId",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ErrorMessage",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PaymentMethod",
          "jsonName": null,
          "type": "MP.Application.Contracts.Sellers.PaymentMethodType",
          "typeSimple": "enum",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Amount",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ProcessedAt",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.Sellers.FindItemByBarcodeDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Barcode",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": 0,
          "maxLength": 100,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.Sellers.ItemForCheckoutDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Id",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "RentalId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Description",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Category",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PhotoUrl",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Barcode",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ActualPrice",
          "jsonName": null,
          "type": "System.Decimal?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CommissionPercentage",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Status",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CustomerName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CustomerEmail",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CustomerPhone",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.Sellers.PaymentMethodType": {
      "baseType": "System.Enum",
      "isEnum": true,
      "enumNames": [
        "Cash",
        "Card"
      ],
      "enumValues": [
        0,
        1
      ],
      "genericArguments": null,
      "properties": null
    },
    "MP.Application.Contracts.SignalR.NotificationMessageDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Id",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Type",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Title",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Message",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Severity",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ActionUrl",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CreatedAt",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.Terminals.CreateTerminalSettingsDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "ProviderId",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": 0,
          "maxLength": 50,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsEnabled",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ConfigurationJson",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 4000,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Currency",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": 0,
          "maxLength": 3,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Region",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 10,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsSandbox",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.Terminals.TerminalProviderInfoDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "ProviderId",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DisplayName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Description",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.Terminals.TerminalSettingsDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Id",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TenantId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ProviderId",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsEnabled",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ConfigurationJson",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Currency",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Region",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsSandbox",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Application.Contracts.Terminals.UpdateTerminalSettingsDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "ProviderId",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": 0,
          "maxLength": 50,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsEnabled",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ConfigurationJson",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 4000,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Currency",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": 0,
          "maxLength": 3,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Region",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 10,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsSandbox",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Booths.BoothDto": {
      "baseType": "Volo.Abp.Application.Dtos.FullAuditedEntityDto<System.Guid>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Number",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Status",
          "jsonName": null,
          "type": "MP.Domain.Booths.BoothStatus",
          "typeSimple": "enum",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "StatusDisplayName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PricePerDay",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PricingPeriods",
          "jsonName": null,
          "type": "[MP.Application.Contracts.Booths.BoothPricingPeriodDto]",
          "typeSimple": "[MP.Application.Contracts.Booths.BoothPricingPeriodDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "RentalStartDate",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "RentalEndDate",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CurrentRentalId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CurrentRentalUserName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CurrentRentalUserEmail",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CurrentRentalStartDate",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CurrentRentalEndDate",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Booths.BoothListDto": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto<System.Guid>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Number",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Status",
          "jsonName": null,
          "type": "MP.Domain.Booths.BoothStatus",
          "typeSimple": "enum",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "StatusDisplayName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PricePerDay",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PricingPeriods",
          "jsonName": null,
          "type": "[MP.Application.Contracts.Booths.BoothPricingPeriodDto]",
          "typeSimple": "[MP.Application.Contracts.Booths.BoothPricingPeriodDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CreationTime",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "RentalStartDate",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "RentalEndDate",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CurrentRentalId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CurrentRentalUserName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CurrentRentalUserEmail",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CurrentRentalStartDate",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CurrentRentalEndDate",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Booths.BoothSettingsDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "MinimumGapDays",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": "0",
          "maximum": "30",
          "regex": null
        },
        {
          "name": "MinimumRentalDays",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": "1",
          "maximum": "365",
          "regex": null
        }
      ]
    },
    "MP.Booths.CreateBoothDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Number",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": 1,
          "maxLength": 10,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PricePerDay",
          "jsonName": null,
          "type": "System.Decimal?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": "0.01",
          "maximum": "9999.99",
          "regex": null
        },
        {
          "name": "PricingPeriods",
          "jsonName": null,
          "type": "[MP.Application.Contracts.Booths.BoothPricingPeriodDto]",
          "typeSimple": "[MP.Application.Contracts.Booths.BoothPricingPeriodDto]",
          "isRequired": false,
          "minLength": 1,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Booths.CreateManualReservationDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "BoothId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "UserId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "StartDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "EndDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TargetStatus",
          "jsonName": null,
          "type": "MP.Domain.Booths.BoothStatus",
          "typeSimple": "enum",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Booths.GetBoothListDto": {
      "baseType": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Filter",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Status",
          "jsonName": null,
          "type": "MP.Domain.Booths.BoothStatus?",
          "typeSimple": "enum?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Booths.UpdateBoothDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Number",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": 1,
          "maxLength": 10,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PricePerDay",
          "jsonName": null,
          "type": "System.Decimal?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": "0.01",
          "maximum": "9999.99",
          "regex": null
        },
        {
          "name": "PricingPeriods",
          "jsonName": null,
          "type": "[MP.Application.Contracts.Booths.BoothPricingPeriodDto]",
          "typeSimple": "[MP.Application.Contracts.Booths.BoothPricingPeriodDto]",
          "isRequired": false,
          "minLength": 1,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Status",
          "jsonName": null,
          "type": "MP.Domain.Booths.BoothStatus",
          "typeSimple": "enum",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Carts.AddToCartDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "BoothId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "BoothTypeId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "StartDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "EndDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Notes",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 1000,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Carts.CartDto": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto<System.Guid>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "UserId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Status",
          "jsonName": null,
          "type": "MP.Carts.CartStatus",
          "typeSimple": "enum",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "StatusDisplayName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Items",
          "jsonName": null,
          "type": "[MP.Carts.CartItemDto]",
          "typeSimple": "[MP.Carts.CartItemDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ItemCount",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TotalAmount",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "FinalAmount",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TotalDays",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "UserName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "UserEmail",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AppliedPromotionId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PromotionName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DiscountAmount",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PromoCodeUsed",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CreationTime",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "LastModificationTime",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Carts.CartItemDto": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto<System.Guid>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "CartId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "BoothId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "BoothTypeId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "StartDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "EndDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PricePerDay",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Notes",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DaysCount",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TotalPrice",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DiscountAmount",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DiscountPercentage",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "FinalPrice",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "BoothNumber",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "BoothDescription",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "BoothTypeName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Currency",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PricingPeriods",
          "jsonName": null,
          "type": "[MP.Application.Contracts.Booths.BoothPricingPeriodDto]",
          "typeSimple": "[MP.Application.Contracts.Booths.BoothPricingPeriodDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ReservationExpiresAt",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsExpired",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Carts.CartStatus": {
      "baseType": "System.Enum",
      "isEnum": true,
      "enumNames": [
        "Active",
        "CheckedOut",
        "Abandoned"
      ],
      "enumValues": [
        0,
        1,
        2
      ],
      "genericArguments": null,
      "properties": null
    },
    "MP.Carts.CheckoutCartDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "PaymentProviderId",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PaymentMethodId",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Carts.CheckoutResultDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Success",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ErrorMessage",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TransactionId",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PaymentUrl",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "RentalIds",
          "jsonName": null,
          "type": "[System.Guid]",
          "typeSimple": "[string]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TotalAmount",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ItemCount",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Carts.UpdateCartItemDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "BoothTypeId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "StartDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "EndDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Notes",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 1000,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Domain.Booths.BoothStatus": {
      "baseType": "System.Enum",
      "isEnum": true,
      "enumNames": [
        "Available",
        "Reserved",
        "Rented",
        "Maintenance"
      ],
      "enumValues": [
        1,
        2,
        3,
        4
      ],
      "genericArguments": null,
      "properties": null
    },
    "MP.Domain.Booths.Currency": {
      "baseType": "System.Enum",
      "isEnum": true,
      "enumNames": [
        "PLN",
        "EUR",
        "USD",
        "GBP",
        "CZK"
      ],
      "enumValues": [
        1,
        2,
        3,
        4,
        5
      ],
      "genericArguments": null,
      "properties": null
    },
    "MP.Domain.FloorPlans.FloorPlanElementType": {
      "baseType": "System.Enum",
      "isEnum": true,
      "enumNames": [
        "Wall",
        "Door",
        "Window",
        "Pillar",
        "Stairs",
        "Checkout",
        "Restroom",
        "InfoDesk",
        "EmergencyExit",
        "Storage",
        "TextLabel",
        "Zone"
      ],
      "enumValues": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12
      ],
      "genericArguments": null,
      "properties": null
    },
    "MP.Domain.Notifications.NotificationSeverity": {
      "baseType": "System.Enum",
      "isEnum": true,
      "enumNames": [
        "Info",
        "Success",
        "Warning",
        "Error"
      ],
      "enumValues": [
        0,
        1,
        2,
        3
      ],
      "genericArguments": null,
      "properties": null
    },
    "MP.Domain.Payments.Przelewy24PaymentMethod": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Id",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DisplayName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Description",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IconUrl",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsActive",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsAvailable",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SupportedCurrencies",
          "jsonName": null,
          "type": "[System.String]",
          "typeSimple": "[string]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ProcessingTime",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "MinAmount",
          "jsonName": null,
          "type": "System.Decimal?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "MaxAmount",
          "jsonName": null,
          "type": "System.Decimal?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Domain.Payments.Przelewy24PaymentRequest": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "MerchantId",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PosId",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SessionId",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Amount",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Currency",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Description",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Email",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ClientName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Country",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Language",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "UrlReturn",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "UrlStatus",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Domain.Payments.Przelewy24PaymentResult": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "TransactionId",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PaymentUrl",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Success",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ErrorMessage",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Domain.Payments.Przelewy24PaymentStatus": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "TransactionId",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Status",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Amount",
          "jsonName": null,
          "type": "System.Decimal?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CompletedAt",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ErrorCode",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ErrorMessage",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Domain.Rentals.PaymentStatus": {
      "baseType": "System.Enum",
      "isEnum": true,
      "enumNames": [
        "Pending",
        "Processing",
        "Completed",
        "Failed",
        "Cancelled",
        "Refunded"
      ],
      "enumValues": [
        0,
        1,
        2,
        3,
        4,
        5
      ],
      "genericArguments": null,
      "properties": null
    },
    "MP.Domain.Rentals.RentalPaymentMethod": {
      "baseType": "System.Enum",
      "isEnum": true,
      "enumNames": [
        "Online",
        "Cash",
        "Terminal",
        "Free"
      ],
      "enumValues": [
        0,
        1,
        2,
        3
      ],
      "genericArguments": null,
      "properties": null
    },
    "MP.Domain.Settlements.SettlementStatus": {
      "baseType": "System.Enum",
      "isEnum": true,
      "enumNames": [
        "Pending",
        "Processing",
        "Completed",
        "Cancelled"
      ],
      "enumValues": [
        0,
        1,
        2,
        3
      ],
      "genericArguments": null,
      "properties": null
    },
    "MP.FloorPlans.BoothAvailabilityDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "BoothId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "BoothNumber",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Status",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "NextAvailableFrom",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Overlaps",
          "jsonName": null,
          "type": "[MP.FloorPlans.RentalOverlapDto]",
          "typeSimple": "[MP.FloorPlans.RentalOverlapDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.FloorPlans.CreateFloorPlanBoothDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "BoothId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "X",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": "0",
          "maximum": "2147483647",
          "regex": null
        },
        {
          "name": "Y",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": "0",
          "maximum": "2147483647",
          "regex": null
        },
        {
          "name": "Width",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": "1",
          "maximum": "1000",
          "regex": null
        },
        {
          "name": "Height",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": "1",
          "maximum": "1000",
          "regex": null
        },
        {
          "name": "Rotation",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": "0",
          "maximum": "359",
          "regex": null
        }
      ]
    },
    "MP.FloorPlans.CreateFloorPlanDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": 1,
          "maxLength": 100,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Level",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": "0",
          "maximum": "50",
          "regex": null
        },
        {
          "name": "Width",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": "100",
          "maximum": "10000",
          "regex": null
        },
        {
          "name": "Height",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": "100",
          "maximum": "10000",
          "regex": null
        },
        {
          "name": "Booths",
          "jsonName": null,
          "type": "[MP.FloorPlans.CreateFloorPlanBoothDto]",
          "typeSimple": "[MP.FloorPlans.CreateFloorPlanBoothDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Elements",
          "jsonName": null,
          "type": "[MP.FloorPlans.CreateFloorPlanElementDto]",
          "typeSimple": "[MP.FloorPlans.CreateFloorPlanElementDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.FloorPlans.CreateFloorPlanElementDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "ElementType",
          "jsonName": null,
          "type": "MP.Domain.FloorPlans.FloorPlanElementType",
          "typeSimple": "enum",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "X",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": "0",
          "maximum": "2147483647",
          "regex": null
        },
        {
          "name": "Y",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": "0",
          "maximum": "2147483647",
          "regex": null
        },
        {
          "name": "Width",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": "1",
          "maximum": "5000",
          "regex": null
        },
        {
          "name": "Height",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": "1",
          "maximum": "5000",
          "regex": null
        },
        {
          "name": "Rotation",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": "0",
          "maximum": "359",
          "regex": null
        },
        {
          "name": "Color",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": 20,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Text",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": 500,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IconName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": 50,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Thickness",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": "1",
          "maximum": "100",
          "regex": null
        },
        {
          "name": "Opacity",
          "jsonName": null,
          "type": "System.Double?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": "0",
          "maximum": "1",
          "regex": null
        },
        {
          "name": "Direction",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": 20,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.FloorPlans.FloorPlanBoothDto": {
      "baseType": "Volo.Abp.Application.Dtos.FullAuditedEntityDto<System.Guid>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "FloorPlanId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "BoothId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "X",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Y",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Width",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Height",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Rotation",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Booth",
          "jsonName": null,
          "type": "MP.Booths.BoothDto",
          "typeSimple": "MP.Booths.BoothDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.FloorPlans.FloorPlanDto": {
      "baseType": "Volo.Abp.Application.Dtos.FullAuditedEntityDto<System.Guid>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Level",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Width",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Height",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsActive",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Booths",
          "jsonName": null,
          "type": "[MP.FloorPlans.FloorPlanBoothDto]",
          "typeSimple": "[MP.FloorPlans.FloorPlanBoothDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Elements",
          "jsonName": null,
          "type": "[MP.FloorPlans.FloorPlanElementDto]",
          "typeSimple": "[MP.FloorPlans.FloorPlanElementDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.FloorPlans.FloorPlanElementDto": {
      "baseType": "Volo.Abp.Application.Dtos.FullAuditedEntityDto<System.Guid>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "FloorPlanId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ElementType",
          "jsonName": null,
          "type": "MP.Domain.FloorPlans.FloorPlanElementType",
          "typeSimple": "enum",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "X",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Y",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Width",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Height",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Rotation",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Color",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Text",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IconName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Thickness",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Opacity",
          "jsonName": null,
          "type": "System.Double?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Direction",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.FloorPlans.GetFloorPlanElementListDto": {
      "baseType": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "FloorPlanId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ElementType",
          "jsonName": null,
          "type": "MP.Domain.FloorPlans.FloorPlanElementType?",
          "typeSimple": "enum?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.FloorPlans.GetFloorPlanListDto": {
      "baseType": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "TenantId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsActive",
          "jsonName": null,
          "type": "System.Boolean?",
          "typeSimple": "boolean?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Level",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Filter",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.FloorPlans.RentalOverlapDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Id",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "UserId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "StartDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "EndDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Status",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.FloorPlans.UpdateFloorPlanDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": 1,
          "maxLength": 100,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Level",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": "0",
          "maximum": "50",
          "regex": null
        },
        {
          "name": "Width",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": "100",
          "maximum": "10000",
          "regex": null
        },
        {
          "name": "Height",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": "100",
          "maximum": "10000",
          "regex": null
        },
        {
          "name": "Booths",
          "jsonName": null,
          "type": "[MP.FloorPlans.CreateFloorPlanBoothDto]",
          "typeSimple": "[MP.FloorPlans.CreateFloorPlanBoothDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Elements",
          "jsonName": null,
          "type": "[MP.FloorPlans.CreateFloorPlanElementDto]",
          "typeSimple": "[MP.FloorPlans.CreateFloorPlanElementDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.FloorPlans.UpdateFloorPlanElementDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "ElementType",
          "jsonName": null,
          "type": "MP.Domain.FloorPlans.FloorPlanElementType",
          "typeSimple": "enum",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "X",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": "0",
          "maximum": "2147483647",
          "regex": null
        },
        {
          "name": "Y",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": "0",
          "maximum": "2147483647",
          "regex": null
        },
        {
          "name": "Width",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": "1",
          "maximum": "5000",
          "regex": null
        },
        {
          "name": "Height",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": "1",
          "maximum": "5000",
          "regex": null
        },
        {
          "name": "Rotation",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": "0",
          "maximum": "359",
          "regex": null
        },
        {
          "name": "Color",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": 20,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Text",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": 500,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IconName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": 50,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Thickness",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": "1",
          "maximum": "100",
          "regex": null
        },
        {
          "name": "Opacity",
          "jsonName": null,
          "type": "System.Double?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": "0",
          "maximum": "1",
          "regex": null
        },
        {
          "name": "Direction",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": 20,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.HomePageContent.HomePageSectionType": {
      "baseType": "System.Enum",
      "isEnum": true,
      "enumNames": [
        "HeroBanner",
        "PromotionCards",
        "Announcement",
        "FeatureHighlights",
        "CustomHtml",
        "ImageGallery"
      ],
      "enumValues": [
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "genericArguments": null,
      "properties": null
    },
    "MP.Items.AddItemToSheetDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "ItemId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CommissionPercentage",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": "0",
          "maximum": "100",
          "regex": null
        }
      ]
    },
    "MP.Items.AssignSheetToRentalDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "RentalId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Items.BatchAddItemsDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "SheetId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ItemIds",
          "jsonName": null,
          "type": "[System.Guid]",
          "typeSimple": "[string]",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CommissionPercentage",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": "0",
          "maximum": "100",
          "regex": null
        }
      ]
    },
    "MP.Items.BatchAddItemsResultDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Results",
          "jsonName": null,
          "type": "[MP.Items.BatchItemResultDto]",
          "typeSimple": "[MP.Items.BatchItemResultDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SuccessCount",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "FailureCount",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Items.BatchItemResultDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "ItemId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Success",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ErrorMessage",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Items.BulkItemCreationResultDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "SuccessCount",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "FailureCount",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CreatedItems",
          "jsonName": null,
          "type": "[MP.Items.ItemDto]",
          "typeSimple": "[MP.Items.ItemDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Errors",
          "jsonName": null,
          "type": "[MP.Items.BulkItemErrorDto]",
          "typeSimple": "[MP.Items.BulkItemErrorDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Items.BulkItemEntryDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": 0,
          "maxLength": 200,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Category",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 100,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Price",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": "0.01",
          "maximum": "1.7976931348623157E+308",
          "regex": null
        }
      ]
    },
    "MP.Items.BulkItemErrorDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "ItemIndex",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ItemName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ErrorMessage",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Items.CreateBulkItemsDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Items",
          "jsonName": null,
          "type": "[MP.Items.BulkItemEntryDto]",
          "typeSimple": "[MP.Items.BulkItemEntryDto]",
          "isRequired": true,
          "minLength": 1,
          "maxLength": 50,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Items.CreateItemDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": 0,
          "maxLength": 200,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Category",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 100,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Price",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": "0.01",
          "maximum": "1.7976931348623157E+308",
          "regex": null
        }
      ]
    },
    "MP.Items.CreateItemSheetDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": []
    },
    "MP.Items.ItemDto": {
      "baseType": "Volo.Abp.Application.Dtos.FullAuditedEntityDto<System.Guid>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "UserId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Category",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Price",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Currency",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Status",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Items.ItemSheetDto": {
      "baseType": "Volo.Abp.Application.Dtos.FullAuditedEntityDto<System.Guid>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "UserId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "RentalId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "BoothNumber",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Status",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Items",
          "jsonName": null,
          "type": "[MP.Items.ItemSheetItemDto]",
          "typeSimple": "[MP.Items.ItemSheetItemDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TotalItemsCount",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SoldItemsCount",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ReclaimedItemsCount",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Items.ItemSheetItemDto": {
      "baseType": "Volo.Abp.Application.Dtos.FullAuditedEntityDto<System.Guid>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "ItemSheetId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ItemId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ItemNumber",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Barcode",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CommissionPercentage",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Status",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SoldAt",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Item",
          "jsonName": null,
          "type": "MP.Items.ItemDto",
          "typeSimple": "MP.Items.ItemDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Items.UpdateItemDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": 0,
          "maxLength": 200,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Category",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 100,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Price",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": "0.01",
          "maximum": "1.7976931348623157E+308",
          "regex": null
        }
      ]
    },
    "MP.Payments.CreatePaymentTransactionDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "SessionId",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": 0,
          "maxLength": 255,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "MerchantId",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PosId",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Amount",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Currency",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": 0,
          "maxLength": 3,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Email",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": 0,
          "maxLength": 255,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Description",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": 0,
          "maxLength": 1000,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Method",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 10,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TransferLabel",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 255,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Sign",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": 0,
          "maxLength": 512,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "OrderId",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 255,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ReturnUrl",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 1000,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Statement",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 1000,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ExtraProperties",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 2000,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "RentalId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Payments.GetPaymentTransactionListDto": {
      "baseType": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Filter",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Status",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PaymentMethod",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "StartDate",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "EndDate",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "MinAmount",
          "jsonName": null,
          "type": "System.Decimal?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "MaxAmount",
          "jsonName": null,
          "type": "System.Decimal?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "RentalId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Email",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Payments.PaymentSuccessViewModel": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Transaction",
          "jsonName": null,
          "type": "MP.Payments.PaymentTransactionDto",
          "typeSimple": "MP.Payments.PaymentTransactionDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Rentals",
          "jsonName": null,
          "type": "[MP.Rentals.RentalDto]",
          "typeSimple": "[MP.Rentals.RentalDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Success",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Message",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "NextStepUrl",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "NextStepText",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TotalAmount",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Currency",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PaymentDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PaymentMethod",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "FormattedPaymentDate",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "FormattedTotalAmount",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "OrderId",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PaymentProvider",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsVerified",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Method",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Payments.PaymentTransactionDto": {
      "baseType": "Volo.Abp.Application.Dtos.FullAuditedEntityDto<System.Guid>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "SessionId",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "MerchantId",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PosId",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Amount",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Currency",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Email",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Description",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Method",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TransferLabel",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Sign",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "OrderId",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Verified",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ReturnUrl",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Statement",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ExtraProperties",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ManualStatusCheckCount",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Status",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "LastStatusCheck",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "RentalId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "StatusDisplayName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsCompleted",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsFailed",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsPending",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsVerified",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "FormattedAmount",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "FormattedCreatedAt",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "FormattedCompletedAt",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PaymentMethodDisplayName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TransactionGuid",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CreatedAt",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CompletedAt",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Payments.UpdatePaymentTransactionDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Description",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 1000,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Status",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 50,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "LastStatusCheck",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Method",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 10,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TransferLabel",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 255,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ReturnUrl",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 1000,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Statement",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 1000,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ExtraProperties",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 2000,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Verified",
          "jsonName": null,
          "type": "System.Boolean?",
          "typeSimple": "boolean?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ManualStatusCheckCount",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Promotions.ApplyPromotionToCartInput": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "PromoCode",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 50,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Promotions.CalculateDiscountInput": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "PromotionId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TotalAmount",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": "0.01",
          "maximum": "1.7976931348623157E+308",
          "regex": null
        }
      ]
    },
    "MP.Promotions.CalculateDiscountOutput": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "DiscountAmount",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "FinalAmount",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PromotionName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Promotions.CreatePromotionDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": 0,
          "maxLength": 200,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Description",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 1000,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Type",
          "jsonName": null,
          "type": "MP.Promotions.PromotionType",
          "typeSimple": "enum",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DisplayMode",
          "jsonName": null,
          "type": "MP.Promotions.PromotionDisplayMode",
          "typeSimple": "enum",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ValidFrom",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ValidTo",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Priority",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": "0",
          "maximum": "2147483647",
          "regex": null
        },
        {
          "name": "MinimumBoothsCount",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": "1",
          "maximum": "2147483647",
          "regex": null
        },
        {
          "name": "PromoCode",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 50,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DiscountType",
          "jsonName": null,
          "type": "MP.Promotions.DiscountType",
          "typeSimple": "enum",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DiscountValue",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": "0.01",
          "maximum": "1.7976931348623157E+308",
          "regex": null
        },
        {
          "name": "MaxDiscountAmount",
          "jsonName": null,
          "type": "System.Decimal?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": "0.01",
          "maximum": "1.7976931348623157E+308",
          "regex": null
        },
        {
          "name": "MaxUsageCount",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": "1",
          "maximum": "2147483647",
          "regex": null
        },
        {
          "name": "MaxUsagePerUser",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": "1",
          "maximum": "2147483647",
          "regex": null
        },
        {
          "name": "CustomerMessage",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 500,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "MaxAccountAgeDays",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": "1",
          "maximum": "2147483647",
          "regex": null
        },
        {
          "name": "IsActive",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ApplicableBoothTypeIds",
          "jsonName": null,
          "type": "[System.Guid]",
          "typeSimple": "[string]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ApplicableBoothIds",
          "jsonName": null,
          "type": "[System.Guid]",
          "typeSimple": "[string]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Promotions.DiscountType": {
      "baseType": "System.Enum",
      "isEnum": true,
      "enumNames": [
        "Percentage",
        "FixedAmount"
      ],
      "enumValues": [
        0,
        1
      ],
      "genericArguments": null,
      "properties": null
    },
    "MP.Promotions.GetPromotionsInput": {
      "baseType": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "FilterText",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsActive",
          "jsonName": null,
          "type": "System.Boolean?",
          "typeSimple": "boolean?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Type",
          "jsonName": null,
          "type": "MP.Promotions.PromotionType?",
          "typeSimple": "enum?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Promotions.PromotionDisplayMode": {
      "baseType": "System.Enum",
      "isEnum": true,
      "enumNames": [
        "None",
        "StickyBottomRight",
        "StickyBottomLeft",
        "Popup",
        "Banner"
      ],
      "enumValues": [
        0,
        1,
        2,
        3,
        4
      ],
      "genericArguments": null,
      "properties": null
    },
    "MP.Promotions.PromotionDto": {
      "baseType": "Volo.Abp.Application.Dtos.FullAuditedEntityDto<System.Guid>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Description",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Type",
          "jsonName": null,
          "type": "MP.Promotions.PromotionType",
          "typeSimple": "enum",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DisplayMode",
          "jsonName": null,
          "type": "MP.Promotions.PromotionDisplayMode",
          "typeSimple": "enum",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsActive",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ValidFrom",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ValidTo",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Priority",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "MinimumBoothsCount",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PromoCode",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "RequiresPromoCode",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DiscountType",
          "jsonName": null,
          "type": "MP.Promotions.DiscountType",
          "typeSimple": "enum",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DiscountValue",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "MaxDiscountAmount",
          "jsonName": null,
          "type": "System.Decimal?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "MaxUsageCount",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CurrentUsageCount",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "MaxUsagePerUser",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CustomerMessage",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "MaxAccountAgeDays",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ApplicableBoothTypeIds",
          "jsonName": null,
          "type": "[System.Guid]",
          "typeSimple": "[string]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ApplicableBoothIds",
          "jsonName": null,
          "type": "[System.Guid]",
          "typeSimple": "[string]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Promotions.PromotionType": {
      "baseType": "System.Enum",
      "isEnum": true,
      "enumNames": [
        "Quantity",
        "PromoCode",
        "DateRange",
        "NewUser"
      ],
      "enumValues": [
        0,
        1,
        2,
        3
      ],
      "genericArguments": null,
      "properties": null
    },
    "MP.Promotions.UpdatePromotionDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": 0,
          "maxLength": 200,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Description",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 1000,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Type",
          "jsonName": null,
          "type": "MP.Promotions.PromotionType",
          "typeSimple": "enum",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DisplayMode",
          "jsonName": null,
          "type": "MP.Promotions.PromotionDisplayMode",
          "typeSimple": "enum",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ValidFrom",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ValidTo",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Priority",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": "0",
          "maximum": "2147483647",
          "regex": null
        },
        {
          "name": "MinimumBoothsCount",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": "1",
          "maximum": "2147483647",
          "regex": null
        },
        {
          "name": "PromoCode",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 50,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DiscountType",
          "jsonName": null,
          "type": "MP.Promotions.DiscountType",
          "typeSimple": "enum",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DiscountValue",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": "0.01",
          "maximum": "1.7976931348623157E+308",
          "regex": null
        },
        {
          "name": "MaxDiscountAmount",
          "jsonName": null,
          "type": "System.Decimal?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": "0.01",
          "maximum": "1.7976931348623157E+308",
          "regex": null
        },
        {
          "name": "MaxUsageCount",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": "1",
          "maximum": "2147483647",
          "regex": null
        },
        {
          "name": "MaxUsagePerUser",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": "1",
          "maximum": "2147483647",
          "regex": null
        },
        {
          "name": "CustomerMessage",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 500,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "MaxAccountAgeDays",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": "1",
          "maximum": "2147483647",
          "regex": null
        },
        {
          "name": "IsActive",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ApplicableBoothTypeIds",
          "jsonName": null,
          "type": "[System.Guid]",
          "typeSimple": "[string]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ApplicableBoothIds",
          "jsonName": null,
          "type": "[System.Guid]",
          "typeSimple": "[string]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Promotions.ValidatePromoCodeInput": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "PromoCode",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": 0,
          "maxLength": 50,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Rentals.AdminManageBoothRentalDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "BoothId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "UserId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "BoothTypeId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "StartDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "EndDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PaymentMethod",
          "jsonName": null,
          "type": "MP.Domain.Rentals.RentalPaymentMethod",
          "typeSimple": "enum",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TerminalTransactionId",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TerminalReceiptNumber",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Notes",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsExtension",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ExistingRentalId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "OnlineTimeoutMinutes",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Rentals.BoothCalendarRequestDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "BoothId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "StartDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "EndDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ExcludeCartId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Rentals.BoothCalendarResponseDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "BoothId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "BoothNumber",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "StartDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "EndDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Dates",
          "jsonName": null,
          "type": "[MP.Rentals.CalendarDateDto]",
          "typeSimple": "[MP.Rentals.CalendarDateDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Legend",
          "jsonName": null,
          "type": "{System.String:System.String}",
          "typeSimple": "{string:string}",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Rentals.CalendarDateDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Date",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Status",
          "jsonName": null,
          "type": "MP.Rentals.CalendarDateStatus",
          "typeSimple": "enum",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "StatusDisplayName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "RentalId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "UserName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "UserEmail",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "RentalStartDate",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "RentalEndDate",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Notes",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Rentals.CalendarDateStatus": {
      "baseType": "System.Enum",
      "isEnum": true,
      "enumNames": [
        "Available",
        "Reserved",
        "Occupied",
        "Unavailable",
        "PastDate",
        "Historical"
      ],
      "enumValues": [
        0,
        1,
        2,
        3,
        4,
        5
      ],
      "genericArguments": null,
      "properties": null
    },
    "MP.Rentals.CreateMyRentalDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "BoothId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "BoothTypeId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "StartDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "EndDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Notes",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 1000,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Rentals.CreateRentalDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "UserId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "BoothId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "BoothTypeId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "StartDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "EndDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Notes",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 1000,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Rentals.CreateRentalWithPaymentDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "BoothId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "BoothTypeId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "StartDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "EndDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Notes",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 1000,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PaymentProviderId",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PaymentMethodId",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Rentals.CreateRentalWithPaymentResultDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Success",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "RentalId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TransactionId",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PaymentUrl",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ErrorMessage",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Rentals.ExtendRentalDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "RentalId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "NewEndDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PaymentType",
          "jsonName": null,
          "type": "MP.Rentals.ExtensionPaymentType",
          "typeSimple": "enum",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TerminalTransactionId",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TerminalReceiptNumber",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "OnlineTimeoutMinutes",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Rentals.ExtensionPaymentType": {
      "baseType": "System.Enum",
      "isEnum": true,
      "enumNames": [
        "Free",
        "Cash",
        "Terminal",
        "Online"
      ],
      "enumValues": [
        0,
        1,
        2,
        3
      ],
      "genericArguments": null,
      "properties": null
    },
    "MP.Rentals.GetRentalListDto": {
      "baseType": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Filter",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Status",
          "jsonName": null,
          "type": "MP.Rentals.RentalStatus?",
          "typeSimple": "enum?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "UserId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "BoothId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "FromDate",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ToDate",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsOverdue",
          "jsonName": null,
          "type": "System.Boolean?",
          "typeSimple": "boolean?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Rentals.MaxExtensionDateResponseDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "MaxExtensionDate",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "HasBlockingRental",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "NextRentalId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "NextRentalStartDate",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Message",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Rentals.PaymentDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Amount",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": "0.01",
          "maximum": "1.7976931348623157E+308",
          "regex": null
        },
        {
          "name": "PaidDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Rentals.RentalDto": {
      "baseType": "Volo.Abp.Application.Dtos.FullAuditedEntityDto<System.Guid>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "UserId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "UserName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "UserEmail",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "BoothId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "BoothNumber",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "StartDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "EndDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DaysCount",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Status",
          "jsonName": null,
          "type": "MP.Rentals.RentalStatus",
          "typeSimple": "enum",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "StatusDisplayName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TotalAmount",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Currency",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PaidAmount",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PaidDate",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsPaid",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "RemainingAmount",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PriceBreakdown",
          "jsonName": null,
          "type": "MP.Application.Contracts.Rentals.PriceBreakdownDto",
          "typeSimple": "MP.Application.Contracts.Rentals.PriceBreakdownDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Notes",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "StartedAt",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CompletedAt",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ItemsCount",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SoldItemsCount",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TotalSalesAmount",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TotalCommissionEarned",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Rentals.RentalListDto": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto<System.Guid>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "UserId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "UserName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "UserEmail",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "BoothId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "BoothNumber",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "StartDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "EndDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DaysCount",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Status",
          "jsonName": null,
          "type": "MP.Rentals.RentalStatus",
          "typeSimple": "enum",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "StatusDisplayName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TotalAmount",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PaidAmount",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsPaid",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CreationTime",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "StartedAt",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ItemsCount",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SoldItemsCount",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Rentals.RentalStatus": {
      "baseType": "System.Enum",
      "isEnum": true,
      "enumNames": [
        "Draft",
        "Active",
        "Expired",
        "Cancelled",
        "Extended"
      ],
      "enumValues": [
        0,
        1,
        2,
        3,
        4
      ],
      "genericArguments": null,
      "properties": null
    },
    "MP.Rentals.UpdateRentalDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "StartDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "EndDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Notes",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 1000,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "MP.Tenants.TenantCurrencyDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Currency",
          "jsonName": null,
          "type": "MP.Domain.Booths.Currency",
          "typeSimple": "enum",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "System.Nullable<T0>": {
      "baseType": "System.ValueType",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": [
        "T"
      ],
      "properties": [
        {
          "name": "HasValue",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Value",
          "jsonName": null,
          "type": "T",
          "typeSimple": "T",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Account.ChangePasswordInput": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "CurrentPassword",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 128,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "NewPassword",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": 0,
          "maxLength": 128,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Account.ProfileDto": {
      "baseType": "Volo.Abp.ObjectExtending.ExtensibleObject",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "UserName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Email",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Surname",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PhoneNumber",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsExternal",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "HasPassword",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ConcurrencyStamp",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Account.RegisterDto": {
      "baseType": "Volo.Abp.ObjectExtending.ExtensibleObject",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "UserName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": 0,
          "maxLength": 256,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "EmailAddress",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": 0,
          "maxLength": 256,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Password",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": 0,
          "maxLength": 128,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AppName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Account.ResetPasswordDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "UserId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ResetToken",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Password",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Account.SendPasswordResetCodeDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Email",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": 0,
          "maxLength": 256,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AppName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ReturnUrl",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ReturnUrlHash",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Account.UpdateProfileDto": {
      "baseType": "Volo.Abp.ObjectExtending.ExtensibleObject",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "UserName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 256,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Email",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 256,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 64,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Surname",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 64,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PhoneNumber",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 16,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ConcurrencyStamp",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Account.VerifyPasswordResetTokenInput": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "UserId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ResetToken",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.AbpLoginResult": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Result",
          "jsonName": null,
          "type": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.LoginResultType",
          "typeSimple": "enum",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Description",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.LoginResultType": {
      "baseType": "System.Enum",
      "isEnum": true,
      "enumNames": [
        "Success",
        "InvalidUserNameOrPassword",
        "NotAllowed",
        "LockedOut",
        "RequiresTwoFactor"
      ],
      "enumValues": [
        1,
        2,
        3,
        4,
        5
      ],
      "genericArguments": null,
      "properties": null
    },
    "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "UserNameOrEmailAddress",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": 0,
          "maxLength": 255,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Password",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": 0,
          "maxLength": 32,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "RememberMe",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Application.Dtos.AuditedEntityDto<T0>": {
      "baseType": "Volo.Abp.Application.Dtos.CreationAuditedEntityDto<TPrimaryKey>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": [
        "TPrimaryKey"
      ],
      "properties": [
        {
          "name": "LastModificationTime",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "LastModifierId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Application.Dtos.CreationAuditedEntityDto<T0>": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto<TPrimaryKey>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": [
        "TPrimaryKey"
      ],
      "properties": [
        {
          "name": "CreationTime",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CreatorId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Application.Dtos.EntityDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": []
    },
    "Volo.Abp.Application.Dtos.EntityDto<T0>": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": [
        "TKey"
      ],
      "properties": [
        {
          "name": "Id",
          "jsonName": null,
          "type": "TKey",
          "typeSimple": "TKey",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Application.Dtos.ExtensibleAuditedEntityDto<T0>": {
      "baseType": "Volo.Abp.Application.Dtos.ExtensibleCreationAuditedEntityDto<TPrimaryKey>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": [
        "TPrimaryKey"
      ],
      "properties": [
        {
          "name": "LastModificationTime",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "LastModifierId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Application.Dtos.ExtensibleCreationAuditedEntityDto<T0>": {
      "baseType": "Volo.Abp.Application.Dtos.ExtensibleEntityDto<TPrimaryKey>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": [
        "TPrimaryKey"
      ],
      "properties": [
        {
          "name": "CreationTime",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CreatorId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Application.Dtos.ExtensibleEntityDto": {
      "baseType": "Volo.Abp.ObjectExtending.ExtensibleObject",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": []
    },
    "Volo.Abp.Application.Dtos.ExtensibleEntityDto<T0>": {
      "baseType": "Volo.Abp.ObjectExtending.ExtensibleObject",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": [
        "TKey"
      ],
      "properties": [
        {
          "name": "Id",
          "jsonName": null,
          "type": "TKey",
          "typeSimple": "TKey",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Application.Dtos.ExtensibleFullAuditedEntityDto<T0>": {
      "baseType": "Volo.Abp.Application.Dtos.ExtensibleAuditedEntityDto<TPrimaryKey>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": [
        "TPrimaryKey"
      ],
      "properties": [
        {
          "name": "IsDeleted",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DeleterId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DeletionTime",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Application.Dtos.ExtensibleLimitedResultRequestDto": {
      "baseType": "Volo.Abp.Application.Dtos.ExtensibleEntityDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "MaxResultCount",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": "1",
          "maximum": "2147483647",
          "regex": null
        }
      ]
    },
    "Volo.Abp.Application.Dtos.ExtensiblePagedAndSortedResultRequestDto": {
      "baseType": "Volo.Abp.Application.Dtos.ExtensiblePagedResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Sorting",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Application.Dtos.ExtensiblePagedResultRequestDto": {
      "baseType": "Volo.Abp.Application.Dtos.ExtensibleLimitedResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "SkipCount",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": "0",
          "maximum": "2147483647",
          "regex": null
        }
      ]
    },
    "Volo.Abp.Application.Dtos.FullAuditedEntityDto<T0>": {
      "baseType": "Volo.Abp.Application.Dtos.AuditedEntityDto<TPrimaryKey>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": [
        "TPrimaryKey"
      ],
      "properties": [
        {
          "name": "IsDeleted",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DeleterId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DeletionTime",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Application.Dtos.LimitedResultRequestDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "MaxResultCount",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": "1",
          "maximum": "2147483647",
          "regex": null
        }
      ]
    },
    "Volo.Abp.Application.Dtos.ListResultDto<T0>": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": [
        "T"
      ],
      "properties": [
        {
          "name": "Items",
          "jsonName": null,
          "type": "[T]",
          "typeSimple": "[T]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto": {
      "baseType": "Volo.Abp.Application.Dtos.PagedResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Sorting",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Application.Dtos.PagedResultDto<T0>": {
      "baseType": "Volo.Abp.Application.Dtos.ListResultDto<T>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": [
        "T"
      ],
      "properties": [
        {
          "name": "TotalCount",
          "jsonName": null,
          "type": "System.Int64",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Application.Dtos.PagedResultRequestDto": {
      "baseType": "Volo.Abp.Application.Dtos.LimitedResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "SkipCount",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": "0",
          "maximum": "2147483647",
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationAuthConfigurationDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "GrantedPolicies",
          "jsonName": null,
          "type": "{System.String:System.Boolean}",
          "typeSimple": "{string:boolean}",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationConfigurationDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Localization",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationConfigurationDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationConfigurationDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Auth",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationAuthConfigurationDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationAuthConfigurationDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Setting",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationSettingConfigurationDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationSettingConfigurationDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CurrentUser",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.CurrentUserDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.CurrentUserDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Features",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationFeatureConfigurationDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationFeatureConfigurationDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "GlobalFeatures",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationGlobalFeatureConfigurationDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationGlobalFeatureConfigurationDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "MultiTenancy",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.MultiTenancyInfoDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.MultiTenancyInfoDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CurrentTenant",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.CurrentTenantDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.CurrentTenantDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Timing",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.TimingDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.TimingDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Clock",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ClockDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ClockDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ObjectExtensions",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ObjectExtensionsDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ObjectExtensionsDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ExtraProperties",
          "jsonName": null,
          "type": "{System.String:System.Object}",
          "typeSimple": "{string:object}",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationConfigurationRequestOptions": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "IncludeLocalizationResources",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationFeatureConfigurationDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Values",
          "jsonName": null,
          "type": "{System.String:System.String}",
          "typeSimple": "{string:string}",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationGlobalFeatureConfigurationDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "EnabledFeatures",
          "jsonName": null,
          "type": "[System.String]",
          "typeSimple": "[string]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationConfigurationDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Values",
          "jsonName": null,
          "type": "{System.String:System.Collections.Generic.Dictionary<System.String,System.String>}",
          "typeSimple": "{string:System.Collections.Generic.Dictionary<string,string>}",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Resources",
          "jsonName": null,
          "type": "{System.String:Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationResourceDto}",
          "typeSimple": "{string:Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationResourceDto}",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Languages",
          "jsonName": null,
          "type": "[Volo.Abp.Localization.LanguageInfo]",
          "typeSimple": "[Volo.Abp.Localization.LanguageInfo]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CurrentCulture",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.CurrentCultureDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.CurrentCultureDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DefaultResourceName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "LanguagesMap",
          "jsonName": null,
          "type": "{System.String:[Volo.Abp.NameValue]}",
          "typeSimple": "{string:[Volo.Abp.NameValue]}",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "LanguageFilesMap",
          "jsonName": null,
          "type": "{System.String:[Volo.Abp.NameValue]}",
          "typeSimple": "{string:[Volo.Abp.NameValue]}",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Resources",
          "jsonName": null,
          "type": "{System.String:Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationResourceDto}",
          "typeSimple": "{string:Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationResourceDto}",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CurrentCulture",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.CurrentCultureDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.CurrentCultureDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationRequestDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "CultureName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "OnlyDynamics",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationResourceDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Texts",
          "jsonName": null,
          "type": "{System.String:System.String}",
          "typeSimple": "{string:string}",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "BaseResources",
          "jsonName": null,
          "type": "[System.String]",
          "typeSimple": "[string]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationSettingConfigurationDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Values",
          "jsonName": null,
          "type": "{System.String:System.String}",
          "typeSimple": "{string:string}",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ClockDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Kind",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.CurrentCultureDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "DisplayName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "EnglishName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ThreeLetterIsoLanguageName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TwoLetterIsoLanguageName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsRightToLeft",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CultureName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "NativeName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DateTimeFormat",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.DateTimeFormatDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.DateTimeFormatDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.CurrentUserDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "IsAuthenticated",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Id",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TenantId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ImpersonatorUserId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ImpersonatorTenantId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ImpersonatorUserName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ImpersonatorTenantName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "UserName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SurName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Email",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "EmailVerified",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PhoneNumber",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PhoneNumberVerified",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Roles",
          "jsonName": null,
          "type": "[System.String]",
          "typeSimple": "[string]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SessionId",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.DateTimeFormatDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "CalendarAlgorithmType",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DateTimeFormatLong",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ShortDatePattern",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "FullDateTimePattern",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DateSeparator",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ShortTimePattern",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "LongTimePattern",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.IanaTimeZone": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "TimeZoneName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.EntityExtensionDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Properties",
          "jsonName": null,
          "type": "{System.String:Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyDto}",
          "typeSimple": "{string:Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyDto}",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Configuration",
          "jsonName": null,
          "type": "{System.String:System.Object}",
          "typeSimple": "{string:object}",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionEnumDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Fields",
          "jsonName": null,
          "type": "[Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionEnumFieldDto]",
          "typeSimple": "[Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionEnumFieldDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "LocalizationResource",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionEnumFieldDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Value",
          "jsonName": null,
          "type": "System.Object",
          "typeSimple": "object",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiCreateDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "IsAvailable",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "OnGet",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiGetDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiGetDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "OnCreate",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiCreateDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiCreateDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "OnUpdate",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiUpdateDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiUpdateDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiGetDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "IsAvailable",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiUpdateDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "IsAvailable",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyAttributeDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "TypeSimple",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Config",
          "jsonName": null,
          "type": "{System.String:System.Object}",
          "typeSimple": "{string:object}",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Type",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TypeSimple",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DisplayName",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.LocalizableStringDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.LocalizableStringDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Api",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Ui",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Policy",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyPolicyDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyPolicyDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Attributes",
          "jsonName": null,
          "type": "[Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyAttributeDto]",
          "typeSimple": "[Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyAttributeDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Configuration",
          "jsonName": null,
          "type": "{System.String:System.Object}",
          "typeSimple": "{string:object}",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DefaultValue",
          "jsonName": null,
          "type": "System.Object",
          "typeSimple": "object",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyFeaturePolicyDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Features",
          "jsonName": null,
          "type": "[System.String]",
          "typeSimple": "[string]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "RequiresAll",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyGlobalFeaturePolicyDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Features",
          "jsonName": null,
          "type": "[System.String]",
          "typeSimple": "[string]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "RequiresAll",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyPermissionPolicyDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "PermissionNames",
          "jsonName": null,
          "type": "[System.String]",
          "typeSimple": "[string]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "RequiresAll",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyPolicyDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "GlobalFeatures",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyGlobalFeaturePolicyDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyGlobalFeaturePolicyDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Features",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyFeaturePolicyDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyFeaturePolicyDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Permissions",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyPermissionPolicyDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyPermissionPolicyDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "OnTable",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiTableDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiTableDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "OnCreateForm",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiFormDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiFormDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "OnEditForm",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiFormDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiFormDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Lookup",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiLookupDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiLookupDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiFormDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "IsVisible",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiLookupDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Url",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ResultListPropertyName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DisplayPropertyName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ValuePropertyName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "FilterParamName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiTableDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "IsVisible",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.LocalizableStringDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Resource",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ModuleExtensionDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Entities",
          "jsonName": null,
          "type": "{System.String:Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.EntityExtensionDto}",
          "typeSimple": "{string:Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.EntityExtensionDto}",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Configuration",
          "jsonName": null,
          "type": "{System.String:System.Object}",
          "typeSimple": "{string:object}",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ObjectExtensionsDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Modules",
          "jsonName": null,
          "type": "{System.String:Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ModuleExtensionDto}",
          "typeSimple": "{string:Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ModuleExtensionDto}",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Enums",
          "jsonName": null,
          "type": "{System.String:Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionEnumDto}",
          "typeSimple": "{string:Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionEnumDto}",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.TimeZone": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Iana",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.IanaTimeZone",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.IanaTimeZone",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Windows",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.WindowsTimeZone",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.WindowsTimeZone",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.TimingDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "TimeZone",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.TimeZone",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.TimeZone",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.WindowsTimeZone": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "TimeZoneId",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.MultiTenancy.CurrentTenantDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Id",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsAvailable",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.MultiTenancy.FindTenantResultDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Success",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TenantId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "NormalizedName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsActive",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.MultiTenancy.MultiTenancyInfoDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "IsEnabled",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.FeatureManagement.FeatureDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DisplayName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Value",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Provider",
          "jsonName": null,
          "type": "Volo.Abp.FeatureManagement.FeatureProviderDto",
          "typeSimple": "Volo.Abp.FeatureManagement.FeatureProviderDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Description",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ValueType",
          "jsonName": null,
          "type": "Volo.Abp.Validation.StringValues.IStringValueType",
          "typeSimple": "Volo.Abp.Validation.StringValues.IStringValueType",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Depth",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ParentName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.FeatureManagement.FeatureGroupDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DisplayName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Features",
          "jsonName": null,
          "type": "[Volo.Abp.FeatureManagement.FeatureDto]",
          "typeSimple": "[Volo.Abp.FeatureManagement.FeatureDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.FeatureManagement.FeatureProviderDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Key",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.FeatureManagement.GetFeatureListResultDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Groups",
          "jsonName": null,
          "type": "[Volo.Abp.FeatureManagement.FeatureGroupDto]",
          "typeSimple": "[Volo.Abp.FeatureManagement.FeatureGroupDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.FeatureManagement.UpdateFeatureDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Value",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.FeatureManagement.UpdateFeaturesDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Features",
          "jsonName": null,
          "type": "[Volo.Abp.FeatureManagement.UpdateFeatureDto]",
          "typeSimple": "[Volo.Abp.FeatureManagement.UpdateFeatureDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Http.Modeling.ActionApiDescriptionModel": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "UniqueName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "HttpMethod",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Url",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SupportedVersions",
          "jsonName": null,
          "type": "[System.String]",
          "typeSimple": "[string]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ParametersOnMethod",
          "jsonName": null,
          "type": "[Volo.Abp.Http.Modeling.MethodParameterApiDescriptionModel]",
          "typeSimple": "[Volo.Abp.Http.Modeling.MethodParameterApiDescriptionModel]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Parameters",
          "jsonName": null,
          "type": "[Volo.Abp.Http.Modeling.ParameterApiDescriptionModel]",
          "typeSimple": "[Volo.Abp.Http.Modeling.ParameterApiDescriptionModel]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ReturnValue",
          "jsonName": null,
          "type": "Volo.Abp.Http.Modeling.ReturnValueApiDescriptionModel",
          "typeSimple": "Volo.Abp.Http.Modeling.ReturnValueApiDescriptionModel",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AllowAnonymous",
          "jsonName": null,
          "type": "System.Boolean?",
          "typeSimple": "boolean?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ImplementFrom",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Http.Modeling.ApplicationApiDescriptionModel": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Modules",
          "jsonName": null,
          "type": "{System.String:Volo.Abp.Http.Modeling.ModuleApiDescriptionModel}",
          "typeSimple": "{string:Volo.Abp.Http.Modeling.ModuleApiDescriptionModel}",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Types",
          "jsonName": null,
          "type": "{System.String:Volo.Abp.Http.Modeling.TypeApiDescriptionModel}",
          "typeSimple": "{string:Volo.Abp.Http.Modeling.TypeApiDescriptionModel}",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Http.Modeling.ApplicationApiDescriptionModelRequestDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "IncludeTypes",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Http.Modeling.ControllerApiDescriptionModel": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "ControllerName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ControllerGroupName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsRemoteService",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsIntegrationService",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ApiVersion",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Type",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Interfaces",
          "jsonName": null,
          "type": "[Volo.Abp.Http.Modeling.ControllerInterfaceApiDescriptionModel]",
          "typeSimple": "[Volo.Abp.Http.Modeling.ControllerInterfaceApiDescriptionModel]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Actions",
          "jsonName": null,
          "type": "{System.String:Volo.Abp.Http.Modeling.ActionApiDescriptionModel}",
          "typeSimple": "{string:Volo.Abp.Http.Modeling.ActionApiDescriptionModel}",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Http.Modeling.ControllerInterfaceApiDescriptionModel": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Type",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Methods",
          "jsonName": null,
          "type": "[Volo.Abp.Http.Modeling.InterfaceMethodApiDescriptionModel]",
          "typeSimple": "[Volo.Abp.Http.Modeling.InterfaceMethodApiDescriptionModel]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Http.Modeling.InterfaceMethodApiDescriptionModel": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ParametersOnMethod",
          "jsonName": null,
          "type": "[Volo.Abp.Http.Modeling.MethodParameterApiDescriptionModel]",
          "typeSimple": "[Volo.Abp.Http.Modeling.MethodParameterApiDescriptionModel]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ReturnValue",
          "jsonName": null,
          "type": "Volo.Abp.Http.Modeling.ReturnValueApiDescriptionModel",
          "typeSimple": "Volo.Abp.Http.Modeling.ReturnValueApiDescriptionModel",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Http.Modeling.MethodParameterApiDescriptionModel": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TypeAsString",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Type",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TypeSimple",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsOptional",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DefaultValue",
          "jsonName": null,
          "type": "System.Object",
          "typeSimple": "object",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Http.Modeling.ModuleApiDescriptionModel": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "RootPath",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "RemoteServiceName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Controllers",
          "jsonName": null,
          "type": "{System.String:Volo.Abp.Http.Modeling.ControllerApiDescriptionModel}",
          "typeSimple": "{string:Volo.Abp.Http.Modeling.ControllerApiDescriptionModel}",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Http.Modeling.ParameterApiDescriptionModel": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "NameOnMethod",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "JsonName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Type",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TypeSimple",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsOptional",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DefaultValue",
          "jsonName": null,
          "type": "System.Object",
          "typeSimple": "object",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ConstraintTypes",
          "jsonName": null,
          "type": "[System.String]",
          "typeSimple": "[string]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "BindingSourceId",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DescriptorName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Http.Modeling.PropertyApiDescriptionModel": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "JsonName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Type",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TypeSimple",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsRequired",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "MinLength",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "MaxLength",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Minimum",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Maximum",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Regex",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Http.Modeling.ReturnValueApiDescriptionModel": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Type",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TypeSimple",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Http.Modeling.TypeApiDescriptionModel": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "BaseType",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsEnum",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "EnumNames",
          "jsonName": null,
          "type": "[System.String]",
          "typeSimple": "[string]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "EnumValues",
          "jsonName": null,
          "type": "[System.Object]",
          "typeSimple": "[object]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "GenericArguments",
          "jsonName": null,
          "type": "[System.String]",
          "typeSimple": "[string]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Properties",
          "jsonName": null,
          "type": "[Volo.Abp.Http.Modeling.PropertyApiDescriptionModel]",
          "typeSimple": "[Volo.Abp.Http.Modeling.PropertyApiDescriptionModel]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Identity.GetIdentityRolesInput": {
      "baseType": "Volo.Abp.Application.Dtos.ExtensiblePagedAndSortedResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Filter",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Identity.GetIdentityUsersInput": {
      "baseType": "Volo.Abp.Application.Dtos.ExtensiblePagedAndSortedResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Filter",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Identity.IdentityRoleCreateDto": {
      "baseType": "Volo.Abp.Identity.IdentityRoleCreateOrUpdateDtoBase",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": []
    },
    "Volo.Abp.Identity.IdentityRoleCreateOrUpdateDtoBase": {
      "baseType": "Volo.Abp.ObjectExtending.ExtensibleObject",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": 0,
          "maxLength": 256,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsDefault",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsPublic",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Identity.IdentityRoleDto": {
      "baseType": "Volo.Abp.Application.Dtos.ExtensibleEntityDto<System.Guid>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsDefault",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsStatic",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsPublic",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ConcurrencyStamp",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CreationTime",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Identity.IdentityRoleUpdateDto": {
      "baseType": "Volo.Abp.Identity.IdentityRoleCreateOrUpdateDtoBase",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "ConcurrencyStamp",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Identity.IdentityUserCreateDto": {
      "baseType": "Volo.Abp.Identity.IdentityUserCreateOrUpdateDtoBase",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Password",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": 0,
          "maxLength": 128,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Identity.IdentityUserCreateOrUpdateDtoBase": {
      "baseType": "Volo.Abp.ObjectExtending.ExtensibleObject",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "UserName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": 0,
          "maxLength": 256,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 64,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Surname",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 64,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Email",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": 0,
          "maxLength": 256,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PhoneNumber",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 16,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsActive",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "LockoutEnabled",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "RoleNames",
          "jsonName": null,
          "type": "[System.String]",
          "typeSimple": "[string]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Identity.IdentityUserDto": {
      "baseType": "Volo.Abp.Application.Dtos.ExtensibleFullAuditedEntityDto<System.Guid>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "TenantId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "UserName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Surname",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Email",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "EmailConfirmed",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PhoneNumber",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PhoneNumberConfirmed",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsActive",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "LockoutEnabled",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AccessFailedCount",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "LockoutEnd",
          "jsonName": null,
          "type": "System.DateTimeOffset?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ConcurrencyStamp",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "EntityVersion",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "LastPasswordChangeTime",
          "jsonName": null,
          "type": "System.DateTimeOffset?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Identity.IdentityUserUpdateDto": {
      "baseType": "Volo.Abp.Identity.IdentityUserCreateOrUpdateDtoBase",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Password",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 128,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ConcurrencyStamp",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Identity.IdentityUserUpdateRolesDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "RoleNames",
          "jsonName": null,
          "type": "[System.String]",
          "typeSimple": "[string]",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Identity.UserLookupCountInputDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Filter",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Identity.UserLookupSearchInputDto": {
      "baseType": "Volo.Abp.Application.Dtos.ExtensiblePagedAndSortedResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Filter",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Localization.LanguageInfo": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "CultureName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "UiCultureName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DisplayName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TwoLetterISOLanguageName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.NameValue": {
      "baseType": "Volo.Abp.NameValue<System.String>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": []
    },
    "Volo.Abp.NameValue<T0>": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": [
        "T"
      ],
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Value",
          "jsonName": null,
          "type": "T",
          "typeSimple": "T",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.ObjectExtending.ExtensibleObject": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "ExtraProperties",
          "jsonName": null,
          "type": "{System.String:System.Object}",
          "typeSimple": "{string:object}",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.PermissionManagement.GetPermissionListResultDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "EntityDisplayName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Groups",
          "jsonName": null,
          "type": "[Volo.Abp.PermissionManagement.PermissionGroupDto]",
          "typeSimple": "[Volo.Abp.PermissionManagement.PermissionGroupDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.PermissionManagement.PermissionGrantInfoDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DisplayName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ParentName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsGranted",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AllowedProviders",
          "jsonName": null,
          "type": "[System.String]",
          "typeSimple": "[string]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "GrantedProviders",
          "jsonName": null,
          "type": "[Volo.Abp.PermissionManagement.ProviderInfoDto]",
          "typeSimple": "[Volo.Abp.PermissionManagement.ProviderInfoDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.PermissionManagement.PermissionGroupDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DisplayName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DisplayNameKey",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DisplayNameResource",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Permissions",
          "jsonName": null,
          "type": "[Volo.Abp.PermissionManagement.PermissionGrantInfoDto]",
          "typeSimple": "[Volo.Abp.PermissionManagement.PermissionGrantInfoDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.PermissionManagement.ProviderInfoDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "ProviderName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ProviderKey",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.PermissionManagement.UpdatePermissionDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsGranted",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.PermissionManagement.UpdatePermissionsDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Permissions",
          "jsonName": null,
          "type": "[Volo.Abp.PermissionManagement.UpdatePermissionDto]",
          "typeSimple": "[Volo.Abp.PermissionManagement.UpdatePermissionDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.SettingManagement.EmailSettingsDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "SmtpHost",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SmtpPort",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SmtpUserName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SmtpPassword",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SmtpDomain",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SmtpEnableSsl",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SmtpUseDefaultCredentials",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DefaultFromAddress",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DefaultFromDisplayName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.SettingManagement.SendTestEmailInput": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "SenderEmailAddress",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TargetEmailAddress",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Subject",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Body",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.SettingManagement.UpdateEmailSettingsDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "SmtpHost",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": 256,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SmtpPort",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": "1",
          "maximum": "65535",
          "regex": null
        },
        {
          "name": "SmtpUserName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": 1024,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SmtpPassword",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": 1024,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SmtpDomain",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": 1024,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SmtpEnableSsl",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SmtpUseDefaultCredentials",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DefaultFromAddress",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": 1024,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DefaultFromDisplayName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": 1024,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.TenantManagement.GetTenantsInput": {
      "baseType": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Filter",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.TenantManagement.TenantCreateDto": {
      "baseType": "Volo.Abp.TenantManagement.TenantCreateOrUpdateDtoBase",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "AdminEmailAddress",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": 256,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AdminPassword",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": 128,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.TenantManagement.TenantCreateOrUpdateDtoBase": {
      "baseType": "Volo.Abp.ObjectExtending.ExtensibleObject",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": 0,
          "maxLength": 64,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.TenantManagement.TenantDto": {
      "baseType": "Volo.Abp.Application.Dtos.ExtensibleEntityDto<System.Guid>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ConcurrencyStamp",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.TenantManagement.TenantUpdateDto": {
      "baseType": "Volo.Abp.TenantManagement.TenantCreateOrUpdateDtoBase",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "ConcurrencyStamp",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Users.UserData": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Id",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TenantId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "UserName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Surname",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsActive",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Email",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "EmailConfirmed",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PhoneNumber",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PhoneNumberConfirmed",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ExtraProperties",
          "jsonName": null,
          "type": "{System.String:System.Object}",
          "typeSimple": "{string:object}",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Validation.StringValues.IStringValueType": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Item",
          "jsonName": null,
          "type": "System.Object",
          "typeSimple": "object",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Properties",
          "jsonName": null,
          "type": "{System.String:System.Object}",
          "typeSimple": "{string:object}",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Validator",
          "jsonName": null,
          "type": "Volo.Abp.Validation.StringValues.IValueValidator",
          "typeSimple": "Volo.Abp.Validation.StringValues.IValueValidator",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Validation.StringValues.IValueValidator": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Item",
          "jsonName": null,
          "type": "System.Object",
          "typeSimple": "object",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Properties",
          "jsonName": null,
          "type": "{System.String:System.Object}",
          "typeSimple": "{string:object}",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    }
  }
}