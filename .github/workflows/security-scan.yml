name: Security Scanning

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    # Run daily security scan at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  npm-audit:
    name: NPM Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: angular/package-lock.json

      - name: Install dependencies
        working-directory: ./angular
        run: npm ci

      - name: Run npm audit
        working-directory: ./angular
        run: npm audit --audit-level=moderate
        continue-on-error: true

      - name: Generate npm audit report
        working-directory: ./angular
        if: always()
        run: npm audit --json > npm-audit-report.json
        continue-on-error: true

      - name: Upload npm audit report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: npm-audit-report
          path: angular/npm-audit-report.json

  dotnet-security:
    name: .NET Security Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore dependencies
        run: dotnet restore MP.sln

      - name: Run security analysis
        run: dotnet build MP.sln --configuration Release --no-restore /p:TreatWarningsAsErrors=true
        continue-on-error: true

  dependency-check:
    name: Dependency Vulnerability Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Run dependency vulnerability check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'MP'
          path: '.'
          format: 'JSON'
          args: >
            --enableExperimental
            --enableRetired
        continue-on-error: true

      - name: Upload dependency check report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-report
          path: reports

  report-summary:
    name: Security Report Summary
    runs-on: ubuntu-latest
    needs: [npm-audit, dotnet-security, dependency-check]
    if: always()
    steps:
      - name: Create summary
        run: |
          echo "## Security Scan Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- npm audit: ${{ needs.npm-audit.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- .NET security analysis: ${{ needs.dotnet-security.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Dependency vulnerability check: ${{ needs.dependency-check.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Reports available as artifacts for review." >> $GITHUB_STEP_SUMMARY
