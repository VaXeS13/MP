@page
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.Extensions.Options
@using Volo.Abp.Account.Localization
@using Volo.Abp.MultiTenancy
@using Volo.Abp.Localization
@model Volo.Abp.Account.Web.Pages.Account.ResetPasswordModel
@inject IHtmlLocalizer<AccountResource> L
@inject ICurrentTenant CurrentTenant
@inject IOptions<AbpLocalizationOptions> LocalizationOptions
@{
    Layout = null;
    var tenantName = CurrentTenant.IsAvailable ? CurrentTenant.Name : "MP";
    var currentCulture = System.Globalization.CultureInfo.CurrentCulture.Name;
    var languages = LocalizationOptions.Value.Languages;
}

@functions {
    string GetLanguageFlag(string cultureName)
    {
        return cultureName.ToLower() switch
        {
            "en" or "en-gb" => "üá¨üáß",
            "zh-hans" => "üá®üá≥",
            "es" => "üá™üá∏",
            "ar" => "üá∏üá¶",
            "hi" => "üáÆüá≥",
            "pt-br" => "üáßüá∑",
            "fr" => "üá´üá∑",
            "ru" => "üá∑üá∫",
            "de-de" => "üá©üá™",
            "tr" => "üáπüá∑",
            "it" => "üáÆüáπ",
            "cs" => "üá®üáø",
            "hu" => "üá≠üá∫",
            "ro-ro" => "üá∑üá¥",
            "sv" => "üá∏üá™",
            "fi" => "üá´üáÆ",
            "sk" => "üá∏üá∞",
            "is" => "üáÆüá∏",
            "zh-hant" => "üáπüáº",
            "pl-pl" => "üáµüá±",
            _ => "üåê"
        };
    }
}

<!DOCTYPE html>
<html lang="@currentCulture">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@L["ResetPassword"] - @tenantName</title>

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <!-- Custom CSS -->
    <link rel="stylesheet" href="~/account-styles.css">
</head>
<body>
    <div class="account-page-container">
        <!-- Language Selector -->
        <div class="language-selector">
            <form method="get" asp-page="/Account/ResetPassword" asp-route-userId="@Model.UserId" asp-route-resetToken="@Model.ResetToken">
                <input type="hidden" name="returnUrl" value="@Model.ReturnUrl" />
                <select name="culture" class="language-dropdown" onchange="this.form.submit()">
                    @foreach (var language in languages)
                    {
                        var isSelected = currentCulture.Equals(language.CultureName, StringComparison.OrdinalIgnoreCase) ||
                                        currentCulture.StartsWith(language.CultureName.Split('-')[0], StringComparison.OrdinalIgnoreCase);
                        <option value="@language.CultureName" selected="@isSelected">@GetLanguageFlag(language.CultureName) @language.DisplayName</option>
                    }
                </select>
            </form>
        </div>

        <div class="account-card">
            <!-- Header -->
            <div class="account-card-header">
                <div class="tenant-name">
                    <i class="fas fa-store"></i> @tenantName
                </div>
                <h1>@L["ResetPassword"]</h1>
                <div class="page-title">@L["ResetPasswordMessage"]</div>
            </div>

            <!-- Body -->
            <div class="account-card-body">
                <!-- Validation Summary -->
                @if (!ViewData.ModelState.IsValid)
                {
                    <div class="alert alert-danger" role="alert">
                        <i class="fas fa-exclamation-circle"></i>
                        @Html.ValidationSummary()
                    </div>
                }

                <!-- Instructions -->
                <div class="alert alert-info" role="alert" style="margin-bottom: 25px;">
                    <i class="fas fa-info-circle"></i>
                    @L["ResetPassword_Information"]
                </div>

                <form method="post">
                    <input type="hidden" asp-for="UserId" />
                    <input type="hidden" asp-for="ResetToken" />
                    <input type="hidden" asp-for="ReturnUrl" />
                    <input type="hidden" asp-for="ReturnUrlHash" />

                    <!-- New Password -->
                    <div class="form-group">
                        <label asp-for="Password">
                            <i class="fas fa-lock me-1"></i>
                            @L["NewPassword"]
                        </label>
                        <div class="password-wrapper">
                            <input asp-for="Password"
                                   type="password"
                                   id="passwordField"
                                   class="form-control"
                                   placeholder="@L["NewPassword"]"
                                   autocomplete="new-password"
                                   autofocus
                                   oninput="checkPasswordStrength()" />
                            <button type="button"
                                    class="password-toggle"
                                    onclick="togglePassword('passwordField', 'toggleIcon1')"
                                    aria-label="Show password">
                                <i class="fas fa-eye" id="toggleIcon1"></i>
                            </button>
                        </div>
                        <div class="password-strength" id="passwordStrength" style="display:none;">
                            <div class="password-strength-bar" id="passwordStrengthBar"></div>
                        </div>
                        <div class="password-strength-text" id="passwordStrengthText"></div>
                        <span asp-validation-for="Password" class="text-danger"></span>
                    </div>

                    <!-- Confirm Password -->
                    <div class="form-group">
                        <label asp-for="ConfirmPassword">
                            <i class="fas fa-lock me-1"></i>
                            @L["PasswordConfirm"]
                        </label>
                        <div class="password-wrapper">
                            <input asp-for="ConfirmPassword"
                                   type="password"
                                   id="confirmPasswordField"
                                   class="form-control"
                                   placeholder="@L["PasswordConfirm"]"
                                   autocomplete="new-password" />
                            <button type="button"
                                    class="password-toggle"
                                    onclick="togglePassword('confirmPasswordField', 'toggleIcon2')"
                                    aria-label="Show password">
                                <i class="fas fa-eye" id="toggleIcon2"></i>
                            </button>
                        </div>
                        <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                    </div>

                    <!-- Submit Button -->
                    <button type="submit" class="btn-primary-custom">
                        <i class="fas fa-check me-2"></i>
                        @L["ResetPassword"]
                    </button>

                    <!-- Back to Login -->
                    <div class="text-center" style="margin-top: 20px;">
                        <a href="@Url.Page("./Login", new {returnUrl = Model.ReturnUrl, returnUrlHash = Model.ReturnUrlHash})" class="account-link">
                            <i class="fas fa-arrow-left me-2"></i>
                            @L["BackToLogin"]
                        </a>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Scripts -->
    <script>
        function togglePassword(fieldId, iconId) {
            const passwordField = document.getElementById(fieldId);
            const toggleIcon = document.getElementById(iconId);

            if (passwordField.type === 'password') {
                passwordField.type = 'text';
                toggleIcon.classList.remove('fa-eye');
                toggleIcon.classList.add('fa-eye-slash');
            } else {
                passwordField.type = 'password';
                toggleIcon.classList.remove('fa-eye-slash');
                toggleIcon.classList.add('fa-eye');
            }
        }

        function checkPasswordStrength() {
            const password = document.getElementById('passwordField').value;
            const strengthDiv = document.getElementById('passwordStrength');
            const strengthBar = document.getElementById('passwordStrengthBar');
            const strengthText = document.getElementById('passwordStrengthText');

            if (password.length === 0) {
                strengthDiv.style.display = 'none';
                strengthText.textContent = '';
                return;
            }

            strengthDiv.style.display = 'block';

            let strength = 0;
            if (password.length >= 8) strength++;
            if (password.length >= 12) strength++;
            if (password.match(/[a-z]+/)) strength++;
            if (password.match(/[A-Z]+/)) strength++;
            if (password.match(/[0-9]+/)) strength++;

            strengthBar.className = 'password-strength-bar';

            if (strength <= 2) {
                strengthBar.classList.add('password-strength-weak');
                strengthText.textContent = 'Weak password';
                strengthText.style.color = '\u0023dc3545';
            } else if (strength <= 4) {
                strengthBar.classList.add('password-strength-medium');
                strengthText.textContent = 'Medium password';
                strengthText.style.color = '\u0023ffc107';
            } else {
                strengthBar.classList.add('password-strength-strong');
                strengthText.textContent = 'Strong password';
                strengthText.style.color = '\u002328a745';
            }
        }
    </script>

    <!-- Validation Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/jquery@3.6.0/dist/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/jquery-validation@1.19.5/dist/jquery.validate.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/jquery-validation-unobtrusive@3.2.12/dist/jquery.validate.unobtrusive.min.js"></script>
</body>
</html>
